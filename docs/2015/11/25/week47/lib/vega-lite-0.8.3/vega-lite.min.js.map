{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","vega-lite.js","node_modules/colorbrewer/colorbrewer.js","node_modules/colorbrewer/index.js","node_modules/d3-color/build/d3-color.js","node_modules/d3-format/build/d3-format.js","node_modules/d3-time-format/build/d3-time-format.js","node_modules/d3-time-format/node_modules/d3-time/build/d3-time.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/time.js","node_modules/datalib/src/util.js","src/aggregate.ts","src/bin.ts","src/channel.ts","src/compiler/Model.ts","src/compiler/axis.ts","src/compiler/compiler.ts","src/compiler/data.ts","src/compiler/facet.ts","src/compiler/layout.ts","src/compiler/legend.ts","src/compiler/marks.ts","src/compiler/scale.ts","src/compiler/stack.ts","src/compiler/style.ts","src/compiler/subfacet.ts","src/compiler/time.ts","src/data.ts","src/encoding.ts","src/fielddef.ts","src/marktype.ts","src/schema/axis.schema.ts","src/schema/bin.schema.ts","src/schema/config.schema.ts","src/schema/data.schema.ts","src/schema/encoding.schema.ts","src/schema/fielddef.schema.ts","src/schema/legend.schema.ts","src/schema/marktype.schema.ts","src/schema/scale.schema.ts","src/schema/schema.ts","src/schema/schemautil.ts","src/schema/sort.schema.ts","src/shorthand.ts","src/spec.ts","src/timeunit.ts","src/type.ts","src/util.ts","src/validate.ts","src/vl.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","vl","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,2,"colorbrewer","YlGn",3,4,5,6,7,8,9,"YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr",10,11,"BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired",12,"Pastel1","Pastel2","Set1","Set2","Set3","./colorbrewer.js","factory","d3_color","Color","color","format","m","trim","toLowerCase","reHex3","exec","parseInt","rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reHslPercent","hsl","named","hasOwnProperty","b","arguments","NaN","Rgb","isNaN","Math","round","max","toString","min","h","Hsl","range","hsl2rgb","m1","m2","lab","Lab","Hcl","deg2rad","sin","c","cos","rgb2xyz","x","xyz2lab","Xn","y","Yn","z","Zn","t3","pow","t2","t0","lab2xyz","t1","xyz2rgb","hcl","sqrt","atan2","rad2deg","cubehelix","Cubehelix","BC_DA","ED","EB","bl","k","E","C","D","deltaHue","h1","h0","delta","interpolateCubehelixGamma","gamma","ah","as","al","bh","bs","interpolateCubehelixGammaLong","interpolateRgb","ar","ag","ab","br","bg","bb","interpolateHsl","interpolateHslLong","interpolateLab","aa","ba","interpolateHcl","ac","bc","interpolateHclLong","prototype","displayable","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","darker","brighter","prototype$1","Kn","prototype$2","PI","prototype$3","A","B","prototype$4","cosh","sinh","interpolateCubehelix","interpolateCubehelixLong","version","d3_format","formatDecimal","p","toExponential","indexOf","coefficient","slice","exponent","abs","formatGroup","grouping","thousands","value","width","j","push","substring","reverse","join","formatPrefixAuto","d","prefixExponent","floor","Array","formatRounded","formatDefault","toPrecision","out","i1","i0","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","zero","comma","precision","type","formatTypes","identity","locale","prefix","currency","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","prefixes","decimal","group","Infinity","padding","formatPrefix","precisionFixed","step","precisionPrefix","precisionRound","localeFormat","definition","localeDefinitions","zhCn","svSe","ruRu","ptBr","plPl","nlNl","mkMk","koKr","jaJp","itIt","huHu","heIl","frFr","frCa","fiFi","esEs","enUs","enGb","enCa","deDe","deCh","caEs","","%","toFixed","X","toUpperCase","ca-ES","de-CH","de-DE","en-CA","en-GB","en-US","es-ES","fi-FI","fr-CA","fr-FR","he-IL","hu-HU","it-IT","ja-JP","ko-KR","mk-MK","nl-NL","pl-PL","pt-BR","ru-RU","sv-SE","zh-CN","defaultLocale","d3_time_format","d3_time","d3Time","localDate","date","Date","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","newFormat","formats","pad","string","pads","charAt","newParse","newDate","parseSpecifier","day","getUTCDay","U","W","w","Z","getDay","parse","parses","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","parsePeriod","periodLookup","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","time","periods","days","shortDays","months","shortMonths","formatLookup","formatRe","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","Y","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","requote","replace","requoteRe","names","RegExp","map","numberRe","percentRe","getDate","count","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","getTimezoneOffset","getUTCDate","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","formatIsoNative","toISOString","locale$1","-","_","0","isoSpecifier","formatIso","isoFormat","d3-time","newInterval","floori","offseti","interval","d0","d1","ceil","offset","start","stop","filter","setTime","end","weekday","setHours","setDate","utcWeekday","setUTCHours","setUTCDate","millisecond","second","setMilliseconds","minute","setSeconds","hour","setMinutes","tuesday","wednesday","thursday","friday","saturday","month","setMonth","utcSecond","setUTCMilliseconds","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","milliseconds","seconds","minutes","hours","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","weeks","years","utcMillisecond","utcMilliseconds","utcSeconds","utcMinutes","utcHours","utcDays","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcWeeks","utcMonths","utcYears","week","utcWeek","apply","dup","bins","opt","level","minstep","v","eps","maxb","maxbins","base","logb","log","div","span","steps","bisect","unit","index","lo","hi","mid","util","cmp","EPSILON","date_value","date_index","units","utc","dmin","dmax","minb","minbins","find","spec","raw","../time","../util","gen","repeat","val","zeros","random","uniform","undefined","samples","integer","normal","mean","stdev","next","rds","annotation","data","types","TYPES","values","array","$","isString","isValid","isDate","isNumber","isBoolean","typeAll","fields","keys","reduce","infer","TESTS","splice","inferAll","PARSERS","boolean","number","all","parsers","stats","unique","results","valid","missing","distinct","median","sort","quantile","quartile","q","sum","variance","isArray","M2","modeskew","avg","med","std","extent","dot","rank","mu","idx","comparator","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","mat","exp","isFunction","L2","R","entropy","counts","LN2","mutual","px","py","info","profile","sd","vals","q1","q3","summary","field","__summary__","./generate","./import/type","./util",13,"tempDate","entry","create","STEPS","toUnitMap","baseDate","utcBaseDate",14,"util_escape_str","escape_str_re","strrep","str","truncateOnWord","len","rev","cnt","tok","split","truncate_word_re","buffer","FNAME","namedfunc","name","duplicate","obj","JSON","stringify","equal","extend","toMap","list","keystr","String","Object","isObject","isBuffer","Buffer","field_re","accessor","mutator","$func","op","$valid","$length","$in","$year","$month","$date","dates","$day","weekdays","$hour","$minute","$second","$utcYear","$utcMonth","$utcDate","$utcDay","$utcHour","$utcMinute","$utcSecond","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","pos","padchar","truncate","word","ellipsis","l1","l2","./time",15,"AGGREGATE_OPS","SHARED_DOMAIN_OPS",16,"MAXBINS_DEFAULT",17,"getSupportedRole","channel","COLOR","measure","dimension","ROW","COLUMN","SHAPE","DETAIL","SIZE","TEXT","CHANNELS",18,"bin_1","channel_1","data_1","vlFieldDef","vlEncoding","marktype_1","schema","schemaUtil","type_1","Model","theme","numberFormat","config","defaults","instantiate","_spec","merge","_stack","getStackProperties","forEach","encoding","fieldDef","getFullName","stack","has","is","BAR","AREA","isAggregate","isXMeasure","isMeasure","isYMeasure","groupbyChannel","fieldChannel","stackChannel","toSpec","excludeConfig","excludeData","marktype","subtract","fieldRef","fieldTitle","isCount","COUNT_DISPLAYNAME","aggregate","timeUnit","bin","bandWidth","useSmallBand","scale","init","isTypes","isOrdinalScale","isDimension","dataTable","SUMMARY","SOURCE","details","refs","facets","cardinality","hasValues","../bin","../channel","../data","../encoding","../fielddef","../marktype","../schema/schema","../schema/schemautil","../type",19,"compileAxis","model","layout","isCol","isRow","def","property","method","axis","props","properties","QUANTITATIVE","TEMPORAL","grid","layer","axisTitleOffset","orient","ticks","tickSize","title","axisSpec","maxLength","titleMaxLength","cellWidth","cellHeight","titleOffset","util_1","opacity","cellPadding","yOffset","roundFloat","y2","mult","stroke","strokeOpacity","xOffset","x2","labels","hasScale","text","NOMINAL","ORDINAL","labelMaxLength","template","angle","baseline","dy","height",20,"compile","Model_1","data_2","console","error","layout_1","output","compileData","marks","enter","timeScales","vlTime","scales","styleCfg","style_1","mdefs","marks_1","compileMarks","mdef","stack_1","isLineType","subfacet_1","from","transform","by","singleScaleNames","concat","markProps","scale_1","compileScaleNames","update","legends","legend_1","compileLegends","facet_1","compileScales","axes","axis_1","Model_2","./Model","./axis","./data","./facet","./layout","./legend","./marks","./scale","./stack","./style","./subfacet",21,"source","summaryDef","filterNonPositive","stackDef","datum","source_1","url","formatParse","nullFilterTransform","formulaTransform","timeTransform","binTransform","filterTransform","nofn","expr","formula","binSuffix","filteredFields","fieldList","fieldName","quantitative","containsType","temporal","ordinal","nominal","calculate","dims","meas","hasAggregate","groupby","summarize","fnDictSet","stackProps","stacked","STACKED","ops","prefn",22,"groupdef","default_1","axesGrp","facetKeys","cellAxes","hasRow","hasCol","mark","unshift","trans","defineProperty",23,"box","hasX","hasY","xCardinality","yCardinality","colCardinality","rowCardinality","util_2","getMaxNumberLength","fieldStats","getMaxLength","extraOffset","setter","d3-format",24,"defs","legend","compileLegend","size","shape","leg","symbols","filled","strokeWidth",25,"style","prop","bar_props","xc","yc","point_props","line_props","area_props","tick_props","filled_point_props","text_props","fontSize","font","placeholder","family","fontWeight","weight","fontStyle","bar","line","area","tick","circle","square","point",26,"facet","scaleDef","domain","useRawDomain","_useRawDomain","domainSort","noAggregate","order","scaleUseRawDomain","useRawDomainEnabled","aggregate_1","isOrdinalFn","clamp","nice","outerPadding","points","scaleType","colorScale","ordinalPalette","quantitativeRange","c10palette","c20palette","colors","palette","interpolate","d3_color_1","ps","to","interpolator","../aggregate","d3-color",27,"valName","startField","endField","transforms","orderby","sortby","stackTransform",28,"estimateOpacity","numPoints","numMultiples",29,30,"filterNull","stat","yearstat","rng","timeFormat","d3_time_format_1","LONG_DATE","scaleLabel","labelLength","substr","rangeDef","isColor","d3-time-format",31,"*","./type",32,"countRetinal","arr","./channel",33,"_isFieldDimension","displayName","getbins","./bin","./compiler/time",34,"LINE","POINT","TICK",35,"default","description","enum","minimum",36,"supportedTypes",37,"viewport","items","gridColor","role","gridOpacity","maximum","autoSortLine","singleHeight","singleWidth","largeBandWidth","smallBandWidth","largeBandMaxCardinality","cellGridColor","cellGridOpacity","cellGridOffset","cellBackgroundColor","textCellWidth","oneOf","singleBarOffset","timeScaleLabelLength","dayScaleLabel","monthScaleLabel","characterWidth",38,"additionalProperties",39,"schemautil_1","vlUtil","axis_schema_1","legend_schema_1","sort_schema_1","fielddef_schema_1","requiredNameType","required","typicalField","supportedMarktypes","onlyOrdinalField","row","column","minItems","maxItems","detail","margin","./axis.schema","./fielddef.schema","./legend.schema","./schemautil","./sort.schema",40,"bin_schema_1","scale_schema_1","timeunit_1","TIMEUNITS","supportedEnums","typicalScale","ordinalOnlyScale","../timeunit","./bin.schema","./scale.schema",41,42,43,"ordinalScaleMixin","typicalScaleMixin",44,"marktype_schema_1","config_schema_1","data_schema_1","encoding_schema_1","$schema","./config.schema","./data.schema","./encoding.schema","./marktype.schema",45,"isEmpty","instance","changes","ins","dest","src","_i","merge_","constructor",46,47,"shorten","ASSIGN","DELIM","shortenEncoding","shorthand","shift","parseEncoding","shortenFieldDef","encodingShorthand","enctype","fieldDefShorthand","parseFieldDef","FUNC","TYPE","SHORT_TYPE","shortenFieldDefs","fieldDefs","delim","TYPE_FROM_SHORT_TYPE","tu","./aggregate","./encoding","./timeunit",48,"alwaysNoOcclusion","getCleanSpec","isStack","transpose","oldenc","./compiler/Model","./marktype",49,50,"Q","T","O","N",51,"__export","digit","thisArg","any","dlBin","noaugment","message","datalib/src/bins/bins","datalib/src/generate","datalib/src/stats","datalib/src/util",52,"getEncodingMappingError","requiredChannelMap","supportedChannelMap","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","requiredChannels","supportedChannels",53,"vlBin","vlChannel","vlData","vlCompiler","vlSchema","vlShorthand","vlSpec","vlTimeUnit","vlType","vlValidate","d3_format_1","compiler","validate","./compiler/compiler","./fielddef","./schema/schema","./shorthand","./spec","./validate"],"mappings":"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","file":"vega-lite.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vl = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n\n},{}],3:[function(require,module,exports){\nmodule.exports = require('./colorbrewer.js');\n\n},{\"./colorbrewer.js\":2}],4:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-color', ['exports'], factory) :\n  factory((global.d3_color = {}));\n}(this, function (exports) { 'use strict';\n\n  function Color() {};\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  color.prototype = Color.prototype = {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : null;\n  };\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  var darker = .7;\n  var brighter = 1 / darker;\n\n  function rgb(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  };\n\n  function Rgb(r, g, b) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n  };\n\n  var prototype = rgb.prototype = Rgb.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  prototype.rgb = function() {\n    return this;\n  };\n\n  prototype.displayable = function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255);\n  };\n\n  prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  function format(r, g, b) {\n    return \"#\"\n        + (isNaN(r) ? \"00\" : (r = Math.round(r)) < 16 ? \"0\" + Math.max(0, r).toString(16) : Math.min(255, r).toString(16))\n        + (isNaN(g) ? \"00\" : (g = Math.round(g)) < 16 ? \"0\" + Math.max(0, g).toString(16) : Math.min(255, g).toString(16))\n        + (isNaN(b) ? \"00\" : (b = Math.round(b)) < 16 ? \"0\" + Math.max(0, b).toString(16) : Math.min(255, b).toString(16));\n  };\n\n  function hsl(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  };\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  };\n\n  var prototype$1 = hsl.prototype = Hsl.prototype = new Color;\n\n  prototype$1.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  prototype$1.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  prototype$1.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < .5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  prototype$1.displayable = function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1);\n  };\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var Kn = 18;\n\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function lab(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  };\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  };\n\n  var prototype$2 = lab.prototype = Lab.prototype = new Color;\n\n  prototype$2.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  prototype$2.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  prototype$2.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  function hcl(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  };\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  };\n\n  var prototype$3 = hcl.prototype = Hcl.prototype = new Color;\n\n  prototype$3.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  prototype$3.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  prototype$3.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelix(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  };\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  };\n\n  var prototype$4 = cubehelix.prototype = Cubehelix.prototype = new Color;\n\n  prototype$4.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype$4.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype$4.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n\n  function deltaHue(h1, h0) {\n    var delta = h1 - h0;\n    return delta > 180 || delta < -180\n        ? delta - 360 * Math.round(delta / 360)\n        : delta;\n  };\n\n  function interpolateCubehelixGamma(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  };\n\n  function interpolateCubehelixGammaLong(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : b.h - ah,\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  };\n\n  function interpolateRgb(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  };\n\n  function interpolateHsl(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHslLong(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateLab(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHcl(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHclLong(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  var interpolateCubehelix = interpolateCubehelixGamma(1);\n  var interpolateCubehelixLong = interpolateCubehelixGammaLong(1);\n\n  var version = \"0.2.8\";\n\n  exports.version = version;\n  exports.interpolateCubehelix = interpolateCubehelix;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateCubehelixGamma = interpolateCubehelixGamma;\n  exports.interpolateCubehelixGammaLong = interpolateCubehelixGammaLong;\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n\n}));\n},{}],5:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-format', ['exports'], factory) :\n  factory((global.d3_format = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  };\n\n  var svSe = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"SEK\"]\n  };\n\n  var ruRu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  };\n\n  var ptBr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  };\n\n  var plPl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  };\n\n  var nlNl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  };\n\n  var mkMk = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  };\n\n  var koKr = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₩\", \"\"]\n  };\n\n  var jaJp = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  };\n\n  var itIt = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  };\n\n  var huHu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Ft\"]\n  };\n\n  var heIl = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  };\n\n  var frFr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var frCa = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  };\n\n  var fiFi = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var esEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var enUs = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var enGb = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  };\n\n  var enCa = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var deDe = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var deCh = {\n    decimal: \",\",\n    thousands: \"'\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0CHF\"]\n  };\n\n  var caEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  };\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  };\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  };\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  };\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  };\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  };\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            var i = -1, n = value.length, c;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  };\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  };\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  };\n\n  function precisionRound(step, max) {\n    return Math.max(0, exponent(Math.abs(max)) - exponent(Math.abs(step))) + 1;\n  };\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-CH\": deCh,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"hu-HU\": huHu,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"ko-KR\": koKr,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"sv-SE\": svSe,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  var format = defaultLocale.format;\n  var formatPrefix = defaultLocale.formatPrefix;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  };\n\n  var version = \"0.3.6\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.formatPrefix = formatPrefix;\n  exports.localeFormat = localeFormat;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));\n},{}],6:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define('d3-time-format', ['exports', 'd3-time'], factory) :\n  factory((global.d3_time_format = {}),global.d3_time);\n}(this, function (exports,d3Time) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var svSe = {\n    dateTime: \"%A den %d %B %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"fm\", \"em\"],\n    days: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n    shortDays: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n    months: [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var koKr = {\n    dateTime: \"%Y/%m/%d %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"오전\", \"오후\"],\n    days: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n    shortDays: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n    months: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    shortMonths: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var huHu = {\n    dateTime: \"%Y. %B %-e., %A %X\",\n    date: \"%Y. %m. %d.\",\n    time: \"%H:%M:%S\",\n    periods: [\"de.\", \"du.\"], // unused\n    days: [\"vasárnap\", \"hétfő\", \"kedd\", \"szerda\", \"csütörtök\", \"péntek\", \"szombat\"],\n    shortDays: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n    months: [\"január\", \"február\", \"március\", \"április\", \"május\", \"június\", \"július\", \"augusztus\", \"szeptember\", \"október\", \"november\", \"december\"],\n    shortMonths: [\"jan.\", \"feb.\", \"már.\", \"ápr.\", \"máj.\", \"jún.\", \"júl.\", \"aug.\", \"szept.\", \"okt.\", \"nov.\", \"dec.\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var locale$1 = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var deCh = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup[string.slice(i, i += 2).toLowerCase()];\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  };\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    if (n) {\n      d.Z = n[1] ? 0              // 'Z' for UTC\n          : n[3] ? -(n[2] + n[3]) // sign differs from getTimezoneOffset!\n                 : -n[2] * 100;\n      return i + n[0].length;\n    }\n    return -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.day.count(d3Time.year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.sunday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.monday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : locale$1.utcFormat(isoSpecifier);\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-CH\": deCh,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": locale$1,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"hu-HU\": huHu,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"ko-KR\": koKr,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"sv-SE\": svSe,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(locale$1);\n  var format = defaultLocale.format;\n  var utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  };\n\n  var version = \"0.1.5\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.utcFormat = utcFormat;\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = formatIso;\n\n}));\n},{\"d3-time\":7}],7:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.0.7\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));\n},{}],8:[function(require,module,exports){\narguments[4][7][0].apply(exports,arguments)\n},{\"dup\":7}],9:[function(require,module,exports){\nvar util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time\":13,\"../util\":14}],10:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\n},{}],11:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, f);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n\n},{\"../util\":14}],12:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance]\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n\n},{\"./generate\":10,\"./import/type\":11,\"./util\":14}],13:[function(require,module,exports){\nvar d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n\n},{\"d3-time\":8}],14:[function(require,module,exports){\nvar buffer = require('buffer'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports = {};\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (buffer.Buffer && buffer.Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\nu.$year   = u.$func('year', time.year.unit);\nu.$month  = u.$func('month', time.months.unit);\nu.$date   = u.$func('date', time.dates.unit);\nu.$day    = u.$func('day', time.weekdays.unit);\nu.$hour   = u.$func('hour', time.hours.unit);\nu.$minute = u.$func('minute', time.minutes.unit);\nu.$second = u.$func('second', time.seconds.unit);\n\nu.$utcYear   = u.$func('utcYear', utc.year.unit);\nu.$utcMonth  = u.$func('utcMonth', utc.months.unit);\nu.$utcDate   = u.$func('utcDate', utc.dates.unit);\nu.$utcDay    = u.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = u.$func('utcHour', utc.hours.unit);\nu.$utcMinute = u.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = u.$func('utcSecond', utc.seconds.unit);\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n},{\"./time\":13,\"buffer\":1}],15:[function(require,module,exports){\nexports.AGGREGATE_OPS = [\r\n    'values', 'count', 'valid', 'missing', 'distinct',\r\n    'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\r\n    'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\r\n    'argmin', 'argmax'\r\n];\r\nexports.SHARED_DOMAIN_OPS = [\r\n    'mean', 'average', 'stdev', 'stdevp', 'median', 'q1', 'q3', 'min', 'max'\r\n];\r\n},{}],16:[function(require,module,exports){\nexports.MAXBINS_DEFAULT = 15;\r\n},{}],17:[function(require,module,exports){\n/*\r\n * Constants and utilities for encoding channels (Visual variables)\r\n * such as 'x', 'y', 'color'.\r\n */\r\nexports.X = 'x';\r\nexports.Y = 'y';\r\nexports.ROW = 'row';\r\nexports.COLUMN = 'column';\r\nexports.SHAPE = 'shape';\r\nexports.SIZE = 'size';\r\nexports.COLOR = 'color';\r\nexports.TEXT = 'text';\r\nexports.DETAIL = 'detail';\r\nexports.CHANNELS = [exports.X, exports.Y, exports.ROW, exports.COLUMN, exports.SIZE, exports.SHAPE, exports.COLOR, exports.TEXT, exports.DETAIL];\r\n;\r\nfunction getSupportedRole(channel) {\r\n    switch (channel) {\r\n        case exports.X:\r\n        case exports.Y:\r\n        case exports.COLOR:\r\n            return {\r\n                measure: true,\r\n                dimension: true\r\n            };\r\n        case exports.ROW:\r\n        case exports.COLUMN:\r\n        case exports.SHAPE:\r\n        case exports.DETAIL:\r\n            return {\r\n                measure: false,\r\n                dimension: true\r\n            };\r\n        case exports.SIZE:\r\n        case exports.TEXT:\r\n            return {\r\n                measure: true,\r\n                dimension: false\r\n            };\r\n    }\r\n    throw new Error('Invalid encoding channel' + channel);\r\n}\r\nexports.getSupportedRole = getSupportedRole;\r\n},{}],18:[function(require,module,exports){\nvar bin_1 = require('../bin');\r\nvar channel_1 = require('../channel');\r\nvar data_1 = require('../data');\r\nvar vlFieldDef = require('../fielddef');\r\nvar vlEncoding = require('../encoding');\r\nvar marktype_1 = require('../marktype');\r\nvar schema = require('../schema/schema');\r\nvar schemaUtil = require('../schema/schemautil');\r\nvar type_1 = require('../type');\r\nvar util = require('../util');\r\nvar Model = (function () {\r\n    function Model(spec, theme) {\r\n        this.numberFormat = function (channel) {\r\n            return this.config('numberFormat');\r\n        };\r\n        var defaults = schema.instantiate();\r\n        this._spec = schemaUtil.merge(defaults, theme || {}, spec);\r\n        this._stack = this.getStackProperties();\r\n        vlEncoding.forEach(this._spec.encoding, function (fieldDef) {\r\n            if (fieldDef.type) {\r\n                fieldDef.type = type_1.getFullName(fieldDef.type);\r\n            }\r\n        });\r\n    }\r\n    Model.prototype.getStackProperties = function () {\r\n        var stack = (this.has(channel_1.COLOR)) ? channel_1.COLOR : (this.has(channel_1.DETAIL)) ? channel_1.DETAIL : null;\r\n        if (stack &&\r\n            (this.is(marktype_1.BAR) || this.is(marktype_1.AREA)) &&\r\n            this.config('stack') !== false &&\r\n            this.isAggregate()) {\r\n            var isXMeasure = this.isMeasure(channel_1.X);\r\n            var isYMeasure = this.isMeasure(channel_1.Y);\r\n            if (isXMeasure && !isYMeasure) {\r\n                return {\r\n                    groupbyChannel: channel_1.Y,\r\n                    fieldChannel: channel_1.X,\r\n                    stackChannel: stack,\r\n                    config: this.config('stack')\r\n                };\r\n            }\r\n            else if (isYMeasure && !isXMeasure) {\r\n                return {\r\n                    groupbyChannel: channel_1.X,\r\n                    fieldChannel: channel_1.Y,\r\n                    stackChannel: stack,\r\n                    config: this.config('stack')\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Model.prototype.stack = function () {\r\n        return this._stack;\r\n    };\r\n    Model.prototype.toSpec = function (excludeConfig, excludeData) {\r\n        var encoding = util.duplicate(this._spec.encoding), spec;\r\n        spec = {\r\n            marktype: this._spec.marktype,\r\n            encoding: encoding\r\n        };\r\n        if (!excludeConfig) {\r\n            spec.config = util.duplicate(this._spec.config);\r\n        }\r\n        if (!excludeData) {\r\n            spec.data = util.duplicate(this._spec.data);\r\n        }\r\n        var defaults = schema.instantiate();\r\n        return schemaUtil.subtract(spec, defaults);\r\n    };\r\n    Model.prototype.marktype = function () {\r\n        return this._spec.marktype;\r\n    };\r\n    Model.prototype.is = function (m) {\r\n        return this._spec.marktype === m;\r\n    };\r\n    Model.prototype.has = function (channel) {\r\n        return this._spec.encoding[channel].field !== undefined;\r\n    };\r\n    Model.prototype.fieldDef = function (channel) {\r\n        return this._spec.encoding[channel];\r\n    };\r\n    Model.prototype.fieldRef = function (channel, opt) {\r\n        opt = opt || {};\r\n        return vlFieldDef.fieldRef(this._spec.encoding[channel], opt);\r\n    };\r\n    Model.prototype.fields = function () {\r\n        return vlEncoding.fields(this._spec.encoding);\r\n    };\r\n    Model.prototype.fieldTitle = function (channel) {\r\n        if (vlFieldDef.isCount(this._spec.encoding[channel])) {\r\n            return vlFieldDef.COUNT_DISPLAYNAME;\r\n        }\r\n        var fn = this._spec.encoding[channel].aggregate || this._spec.encoding[channel].timeUnit || (this._spec.encoding[channel].bin && 'bin');\r\n        if (fn) {\r\n            return fn.toUpperCase() + '(' + this._spec.encoding[channel].field + ')';\r\n        }\r\n        else {\r\n            return this._spec.encoding[channel].field;\r\n        }\r\n    };\r\n    Model.prototype.bandWidth = function (channel, useSmallBand) {\r\n        if (this.fieldDef(channel).scale.bandWidth !== undefined) {\r\n            return this.fieldDef(channel).scale.bandWidth;\r\n        }\r\n        useSmallBand = useSmallBand ||\r\n            (channel === channel_1.Y && this.has(channel_1.ROW) && this.has(channel_1.Y)) ||\r\n            (channel === channel_1.X && this.has(channel_1.COLUMN) && this.has(channel_1.X));\r\n        return this.config(useSmallBand ? 'smallBandWidth' : 'largeBandWidth');\r\n    };\r\n    Model.prototype.padding = function (channel) {\r\n        if (this.fieldDef(channel).scale.padding !== undefined) {\r\n            return this.fieldDef(channel).scale.padding;\r\n        }\r\n        if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\r\n            return this.config('cellPadding');\r\n        }\r\n        return this.config('padding');\r\n    };\r\n    Model.prototype.bin = function (channel) {\r\n        var bin = this._spec.encoding[channel].bin;\r\n        if (bin === {})\r\n            return false;\r\n        if (bin === true)\r\n            return {\r\n                maxbins: bin_1.MAXBINS_DEFAULT\r\n            };\r\n        return bin;\r\n    };\r\n    Model.prototype.map = function (f) {\r\n        return vlEncoding.map(this._spec.encoding, f);\r\n    };\r\n    Model.prototype.reduce = function (f, init) {\r\n        return vlEncoding.reduce(this._spec.encoding, f, init);\r\n    };\r\n    Model.prototype.forEach = function (f) {\r\n        return vlEncoding.forEach(this._spec.encoding, f);\r\n    };\r\n    Model.prototype.isTypes = function (channel, type) {\r\n        var fieldDef = this.fieldDef(channel);\r\n        return fieldDef && vlFieldDef.isTypes(fieldDef, type);\r\n    };\r\n    Model.prototype.isOrdinalScale = function (channel) {\r\n        return this.has(channel) &&\r\n            vlFieldDef.isOrdinalScale(this.fieldDef(channel));\r\n    };\r\n    Model.prototype.isDimension = function (channel) {\r\n        return this.has(channel) &&\r\n            vlFieldDef.isDimension(this.fieldDef(channel));\r\n    };\r\n    Model.prototype.isMeasure = function (channel) {\r\n        return this.has(channel) &&\r\n            vlFieldDef.isMeasure(this.fieldDef(channel));\r\n    };\r\n    Model.prototype.isAggregate = function () {\r\n        return vlEncoding.isAggregate(this._spec.encoding);\r\n    };\r\n    Model.prototype.dataTable = function () {\r\n        return this.isAggregate() ? data_1.SUMMARY : data_1.SOURCE;\r\n    };\r\n    Model.prototype.details = function () {\r\n        var encoding = this;\r\n        return this.reduce(function (refs, fieldDef, channel) {\r\n            if (!fieldDef.aggregate && (channel !== channel_1.X && channel !== channel_1.Y)) {\r\n                refs.push(encoding.fieldRef(channel));\r\n            }\r\n            return refs;\r\n        }, []);\r\n    };\r\n    Model.prototype.facets = function () {\r\n        var encoding = this;\r\n        return this.reduce(function (refs, field, channel) {\r\n            if (!field.aggregate && (channel === channel_1.ROW || channel === channel_1.COLUMN)) {\r\n                refs.push(encoding.fieldRef(channel));\r\n            }\r\n            return refs;\r\n        }, []);\r\n    };\r\n    Model.prototype.cardinality = function (channel, stats) {\r\n        return vlFieldDef.cardinality(this.fieldDef(channel), stats, this.config('filterNull'));\r\n    };\r\n    Model.prototype.data = function () {\r\n        return this._spec.data;\r\n    };\r\n    Model.prototype.hasValues = function () {\r\n        var vals = this.data().values;\r\n        return vals && vals.length;\r\n    };\r\n    Model.prototype.config = function (name) {\r\n        return this._spec.config[name];\r\n    };\r\n    return Model;\r\n})();\r\nexports.Model = Model;\r\n},{\"../bin\":16,\"../channel\":17,\"../data\":31,\"../encoding\":32,\"../fielddef\":33,\"../marktype\":34,\"../schema/schema\":44,\"../schema/schemautil\":45,\"../type\":50,\"../util\":51}],19:[function(require,module,exports){\nvar util_1 = require('../util');\r\nvar util = require('../util');\r\nvar type_1 = require('../type');\r\nvar channel_1 = require('../channel');\r\nvar time = require('./time');\r\nfunction compileAxis(channel, model, layout, stats) {\r\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\r\n    var def = {\r\n        type: type,\r\n        scale: channel\r\n    };\r\n    [\r\n        'format', 'grid', 'layer', 'offset', 'orient', 'tickSize', 'ticks', 'title', 'titleOffset',\r\n        'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'tickSizeEnd',\r\n        'values', 'subdivide'\r\n    ].forEach(function (property) {\r\n        var method;\r\n        var value = (method = exports[property]) ?\r\n            method(model, channel, layout, stats, def) :\r\n            model.fieldDef(channel).axis[property];\r\n        if (value !== undefined) {\r\n            def[property] = value;\r\n        }\r\n    });\r\n    var props = model.fieldDef(channel).axis.properties || {};\r\n    [\r\n        'axis', 'grid', 'labels', 'title',\r\n        'ticks', 'majorTicks', 'minorTicks'\r\n    ].forEach(function (group) {\r\n        var value = properties[group] ?\r\n            properties[group](model, channel, props[group], layout, def) :\r\n            props[group];\r\n        if (value !== undefined) {\r\n            def.properties = def.properties || {};\r\n            def.properties[group] = value;\r\n        }\r\n    });\r\n    return def;\r\n}\r\nexports.compileAxis = compileAxis;\r\nfunction format(model, channel) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    var format = fieldDef.axis.format;\r\n    if (format !== undefined) {\r\n        return format;\r\n    }\r\n    if (fieldDef.type === type_1.QUANTITATIVE) {\r\n        return model.numberFormat(channel);\r\n    }\r\n    else if (fieldDef.type === type_1.TEMPORAL) {\r\n        var timeUnit = fieldDef.timeUnit;\r\n        if (!timeUnit) {\r\n            return model.config('timeFormat');\r\n        }\r\n        else if (timeUnit === 'year') {\r\n            return 'd';\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.format = format;\r\nfunction grid(model, channel) {\r\n    var grid = model.fieldDef(channel).axis.grid;\r\n    if (grid !== undefined) {\r\n        return grid;\r\n    }\r\n    return channel === channel_1.ROW || channel === channel_1.COLUMN ||\r\n        (model.isTypes(channel, [type_1.QUANTITATIVE, type_1.TEMPORAL]) && !model.fieldDef(channel).bin);\r\n}\r\nexports.grid = grid;\r\nfunction layer(model, channel, layout, stats, def) {\r\n    var layer = model.fieldDef(channel).axis.layer;\r\n    if (layer !== undefined) {\r\n        return layer;\r\n    }\r\n    if (def.grid) {\r\n        return 'back';\r\n    }\r\n    return undefined;\r\n}\r\nexports.layer = layer;\r\n;\r\nfunction offset(model, channel, layout) {\r\n    var offset = model.fieldDef(channel).axis.offset;\r\n    if (offset) {\r\n        return offset;\r\n    }\r\n    if (channel === channel_1.ROW) {\r\n        return layout.y.axisTitleOffset + 20;\r\n    }\r\n    return undefined;\r\n}\r\nexports.offset = offset;\r\nfunction orient(model, channel, layout, stats) {\r\n    var orient = model.fieldDef(channel).axis.orient;\r\n    if (orient) {\r\n        return orient;\r\n    }\r\n    else if (channel === channel_1.COLUMN) {\r\n        return 'top';\r\n    }\r\n    else if (channel === channel_1.X && model.has(channel_1.Y) && model.isOrdinalScale(channel_1.Y) && model.cardinality(channel_1.Y, stats) > 30) {\r\n        return 'top';\r\n    }\r\n    return undefined;\r\n}\r\nexports.orient = orient;\r\nfunction ticks(model, channel) {\r\n    var ticks = model.fieldDef(channel).axis.ticks;\r\n    if (ticks !== undefined) {\r\n        return ticks;\r\n    }\r\n    if (channel === channel_1.X && !model.fieldDef(channel).bin) {\r\n        return 5;\r\n    }\r\n    return undefined;\r\n}\r\nexports.ticks = ticks;\r\nfunction tickSize(model, channel) {\r\n    var tickSize = model.fieldDef(channel).axis.tickSize;\r\n    if (tickSize !== undefined) {\r\n        return tickSize;\r\n    }\r\n    if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\r\n        return 0;\r\n    }\r\n    return undefined;\r\n}\r\nexports.tickSize = tickSize;\r\nfunction title(model, channel, layout) {\r\n    var axisSpec = model.fieldDef(channel).axis;\r\n    if (axisSpec.title !== undefined) {\r\n        return axisSpec.title;\r\n    }\r\n    var fieldTitle = model.fieldTitle(channel);\r\n    var maxLength;\r\n    if (axisSpec.titleMaxLength) {\r\n        maxLength = axisSpec.titleMaxLength;\r\n    }\r\n    else if (channel === channel_1.X) {\r\n        maxLength = layout.cellWidth / model.config('characterWidth');\r\n    }\r\n    else if (channel === channel_1.Y) {\r\n        maxLength = layout.cellHeight / model.config('characterWidth');\r\n    }\r\n    return maxLength ? util.truncate(fieldTitle, maxLength) : fieldTitle;\r\n}\r\nexports.title = title;\r\nfunction titleOffset(model, channel) {\r\n    var value = model.fieldDef(channel).axis.titleOffset;\r\n    if (value)\r\n        return value;\r\n    switch (channel) {\r\n        case channel_1.ROW: return 0;\r\n        case channel_1.COLUMN: return 35;\r\n    }\r\n    return undefined;\r\n}\r\nexports.titleOffset = titleOffset;\r\nvar properties;\r\n(function (properties) {\r\n    function axis(model, channel, spec) {\r\n        if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\r\n            return util.extend({\r\n                opacity: { value: 0 }\r\n            }, spec || {});\r\n        }\r\n        return spec || undefined;\r\n    }\r\n    properties.axis = axis;\r\n    function grid(model, channel, spec, layout, def) {\r\n        var cellPadding = layout.cellPadding;\r\n        if (def.grid) {\r\n            if (channel === channel_1.COLUMN) {\r\n                var yOffset = model.config('cellGridOffset');\r\n                var sign = model.fieldDef(channel).axis.orient === 'bottom' ? -1 : 1;\r\n                return util.extend({\r\n                    x: {\r\n                        offset: util_1.roundFloat(layout.cellWidth * (1 + cellPadding / 2.0)),\r\n                        scale: 'column',\r\n                        field: 'data'\r\n                    },\r\n                    y: {\r\n                        value: -sign * yOffset,\r\n                    },\r\n                    y2: {\r\n                        field: { group: 'mark.group.height' },\r\n                        offset: sign * yOffset,\r\n                        mult: sign\r\n                    },\r\n                    stroke: { value: model.config('cellGridColor') },\r\n                    strokeOpacity: { value: model.config('cellGridOpacity') }\r\n                }, spec || {});\r\n            }\r\n            else if (channel === channel_1.ROW) {\r\n                var xOffset = model.config('cellGridOffset');\r\n                var sign = model.fieldDef(channel).axis.orient === 'right' ? -1 : 1;\r\n                return util.extend({\r\n                    y: {\r\n                        offset: util_1.roundFloat(-layout.cellHeight * (cellPadding / 2)),\r\n                        scale: 'row',\r\n                        field: 'data'\r\n                    },\r\n                    x: {\r\n                        value: sign * (def.offset - xOffset)\r\n                    },\r\n                    x2: {\r\n                        field: { group: 'mark.group.width' },\r\n                        offset: sign * (def.offset + xOffset),\r\n                        mult: sign\r\n                    },\r\n                    stroke: { value: model.config('cellGridColor') },\r\n                    strokeOpacity: { value: model.config('cellGridOpacity') }\r\n                }, spec || {});\r\n            }\r\n            else {\r\n                return util.extend({\r\n                    stroke: { value: model.config('gridColor') },\r\n                    strokeOpacity: { value: model.config('gridOpacity') }\r\n                }, spec || {});\r\n            }\r\n        }\r\n        return spec || undefined;\r\n    }\r\n    properties.grid = grid;\r\n    function labels(model, channel, spec, layout, def) {\r\n        var fieldDef = model.fieldDef(channel);\r\n        var timeUnit = fieldDef.timeUnit;\r\n        if (fieldDef.type === type_1.TEMPORAL && timeUnit && (time.hasScale(timeUnit))) {\r\n            spec = util.extend({\r\n                text: { scale: 'time-' + timeUnit, field: 'data' }\r\n            }, spec || {});\r\n        }\r\n        if (model.isTypes(channel, [type_1.NOMINAL, type_1.ORDINAL]) && fieldDef.axis.labelMaxLength) {\r\n            spec = util.extend({\r\n                text: {\r\n                    template: '{{ datum.data | truncate:' + fieldDef.axis.labelMaxLength + '}}'\r\n                }\r\n            }, spec || {});\r\n        }\r\n        if (channel === channel_1.X) {\r\n            if ((model.isDimension(channel_1.X) || fieldDef.type === type_1.TEMPORAL)) {\r\n                spec = util.extend({\r\n                    angle: { value: 270 },\r\n                    align: { value: def.orient === 'top' ? 'left' : 'right' },\r\n                    baseline: { value: 'middle' }\r\n                }, spec || {});\r\n            }\r\n        }\r\n        return spec || undefined;\r\n    }\r\n    properties.labels = labels;\r\n    function title(model, channel, spec, layout) {\r\n        if (channel === channel_1.ROW) {\r\n            return util.extend({\r\n                angle: { value: 0 },\r\n                align: { value: 'right' },\r\n                baseline: { value: 'middle' },\r\n                dy: { value: (-layout.height / 2) - 20 }\r\n            }, spec || {});\r\n        }\r\n        return spec || undefined;\r\n    }\r\n    properties.title = title;\r\n})(properties || (properties = {}));\r\n},{\"../channel\":17,\"../type\":50,\"../util\":51,\"./time\":30}],20:[function(require,module,exports){\nvar Model_1 = require('./Model');\r\nvar vlTime = require('./time');\r\nvar axis_1 = require('./axis');\r\nvar data_1 = require('./data');\r\nvar legend_1 = require('./legend');\r\nvar marks_1 = require('./marks');\r\nvar scale_1 = require('./scale');\r\nvar facet_1 = require('./facet');\r\nvar layout_1 = require('./layout');\r\nvar stack_1 = require('./stack');\r\nvar style_1 = require('./style');\r\nvar subfacet_1 = require('./subfacet');\r\nvar data_2 = require('../data');\r\nvar channel_1 = require('../channel');\r\nvar Model_2 = require('./Model');\r\nexports.Model = Model_2.Model;\r\nfunction compile(spec, stats, theme) {\r\n    var model = new Model_1.Model(spec, theme);\r\n    if (!stats) {\r\n        if (model.hasValues()) {\r\n            stats = data_2.stats(model.data().values);\r\n        }\r\n        else {\r\n            console.error('No stats provided and data is not embedded.');\r\n        }\r\n    }\r\n    var layout = layout_1.default(model, stats);\r\n    var output = {\r\n        width: layout.width,\r\n        height: layout.height,\r\n        padding: 'auto',\r\n        data: data_1.compileData(model),\r\n        marks: [{\r\n                name: 'cell',\r\n                type: 'group',\r\n                properties: {\r\n                    enter: {\r\n                        width: layout.cellWidth ?\r\n                            { value: layout.cellWidth } :\r\n                            { field: { group: 'width' } },\r\n                        height: layout.cellHeight ?\r\n                            { value: layout.cellHeight } :\r\n                            { field: { group: 'height' } }\r\n                    }\r\n                }\r\n            }]\r\n    };\r\n    var timeScales = vlTime.scales(model);\r\n    if (timeScales.length > 0) {\r\n        output.scales = timeScales;\r\n    }\r\n    var group = output.marks[0];\r\n    var styleCfg = style_1.default(model, stats), mdefs = group.marks = marks_1.compileMarks(model, layout, styleCfg), mdef = mdefs[mdefs.length - 1];\r\n    var stack = model.stack();\r\n    if (stack) {\r\n        stack_1.default(model, mdef, stack);\r\n    }\r\n    var marktype = model.marktype();\r\n    var isLineType = marktype === 'line' || marktype === 'area';\r\n    var details = model.details();\r\n    if (details.length > 0 && isLineType) {\r\n        subfacet_1.default(group, mdef, details);\r\n    }\r\n    if (isLineType && model.config('autoSortLine')) {\r\n        var f = (model.isMeasure(channel_1.X) && model.isDimension(channel_1.Y)) ? channel_1.Y : channel_1.X;\r\n        if (!mdef.from) {\r\n            mdef.from = {};\r\n        }\r\n        mdef.from.transform = [{ type: 'sort', by: '-' + model.fieldRef(f) }];\r\n    }\r\n    var singleScaleNames = [].concat.apply([], mdefs.map(function (markProps) {\r\n        return scale_1.compileScaleNames(markProps.properties.update);\r\n    }));\r\n    var legends = legend_1.compileLegends(model, styleCfg);\r\n    if (model.has(channel_1.ROW) || model.has(channel_1.COLUMN)) {\r\n        output = facet_1.default(group, model, layout, output, singleScaleNames, stats);\r\n        if (legends.length > 0) {\r\n            output.legends = legends;\r\n        }\r\n    }\r\n    else {\r\n        group.scales = scale_1.compileScales(singleScaleNames, model, layout, stats);\r\n        var axes = [];\r\n        if (model.has(channel_1.X)) {\r\n            axes.push(axis_1.compileAxis(channel_1.X, model, layout, stats));\r\n        }\r\n        if (model.has(channel_1.Y)) {\r\n            axes.push(axis_1.compileAxis(channel_1.Y, model, layout, stats));\r\n        }\r\n        if (axes.length > 0) {\r\n            group.axes = axes;\r\n        }\r\n        if (legends.length > 0) {\r\n            group.legends = legends;\r\n        }\r\n    }\r\n    return {\r\n        spec: output\r\n    };\r\n}\r\nexports.compile = compile;\r\n},{\"../channel\":17,\"../data\":31,\"./Model\":18,\"./axis\":19,\"./data\":21,\"./facet\":22,\"./layout\":23,\"./legend\":24,\"./marks\":25,\"./scale\":26,\"./stack\":27,\"./style\":28,\"./subfacet\":29,\"./time\":30}],21:[function(require,module,exports){\nvar vlFieldDef = require('../fielddef');\r\nvar util = require('../util');\r\nvar bin_1 = require('../bin');\r\nvar data_1 = require('../data');\r\nvar time = require('./time');\r\nvar type_1 = require('../type');\r\nfunction compileData(model) {\r\n    var def = [source.def(model)];\r\n    var summaryDef = summary.def(model);\r\n    if (summaryDef) {\r\n        def.push(summaryDef);\r\n    }\r\n    filterNonPositive(def[def.length - 1], model);\r\n    var stackDef = model.stack();\r\n    if (stackDef) {\r\n        def.push(stack.def(model, stackDef));\r\n    }\r\n    return def;\r\n}\r\nexports.compileData = compileData;\r\nvar source;\r\n(function (source_1) {\r\n    function def(model) {\r\n        var source = { name: data_1.SOURCE };\r\n        if (model.hasValues()) {\r\n            source.values = model.data().values;\r\n            source.format = { type: 'json' };\r\n        }\r\n        else {\r\n            source.url = model.data().url;\r\n            source.format = { type: model.data().formatType };\r\n        }\r\n        var parse = formatParse(model);\r\n        if (parse) {\r\n            source.format.parse = parse;\r\n        }\r\n        source.transform = transform(model);\r\n        return source;\r\n    }\r\n    source_1.def = def;\r\n    function formatParse(model) {\r\n        var parse;\r\n        model.forEach(function (fieldDef) {\r\n            if (fieldDef.type === type_1.TEMPORAL) {\r\n                parse = parse || {};\r\n                parse[fieldDef.field] = 'date';\r\n            }\r\n            else if (fieldDef.type === type_1.QUANTITATIVE) {\r\n                if (vlFieldDef.isCount(fieldDef))\r\n                    return;\r\n                parse = parse || {};\r\n                parse[fieldDef.field] = 'number';\r\n            }\r\n        });\r\n        return parse;\r\n    }\r\n    function transform(model) {\r\n        return nullFilterTransform(model).concat(formulaTransform(model), timeTransform(model), binTransform(model), filterTransform(model));\r\n    }\r\n    source_1.transform = transform;\r\n    function timeTransform(model) {\r\n        return model.reduce(function (transform, fieldDef, channel) {\r\n            if (fieldDef.type === type_1.TEMPORAL && fieldDef.timeUnit) {\r\n                var fieldRef = model.fieldRef(channel, { nofn: true, datum: true });\r\n                transform.push({\r\n                    type: 'formula',\r\n                    field: model.fieldRef(channel),\r\n                    expr: time.formula(fieldDef.timeUnit, fieldRef)\r\n                });\r\n            }\r\n            return transform;\r\n        }, []);\r\n    }\r\n    source_1.timeTransform = timeTransform;\r\n    function binTransform(model) {\r\n        return model.reduce(function (transform, fieldDef, channel) {\r\n            var bin = model.bin(channel);\r\n            if (bin) {\r\n                transform.push({\r\n                    type: 'bin',\r\n                    field: fieldDef.field,\r\n                    output: {\r\n                        start: model.fieldRef(channel, { binSuffix: '_start' }),\r\n                        end: model.fieldRef(channel, { binSuffix: '_end' })\r\n                    },\r\n                    maxbins: typeof bin === 'boolean' ? bin_1.MAXBINS_DEFAULT : bin.maxbins\r\n                });\r\n                transform.push({\r\n                    type: 'formula',\r\n                    field: model.fieldRef(channel, { binSuffix: '_mid' }),\r\n                    expr: '(' + model.fieldRef(channel, { datum: 1, binSuffix: '_start' }) + '+' + model.fieldRef(channel, { datum: 1, binSuffix: '_end' }) + ')/2'\r\n                });\r\n            }\r\n            return transform;\r\n        }, []);\r\n    }\r\n    source_1.binTransform = binTransform;\r\n    function nullFilterTransform(model) {\r\n        var filteredFields = util.reduce(model.fields(), function (filteredFields, fieldList, fieldName) {\r\n            if (fieldName === '*')\r\n                return filteredFields;\r\n            if ((model.config('filterNull').quantitative && fieldList.containsType[type_1.QUANTITATIVE]) ||\r\n                (model.config('filterNull').temporal && fieldList.containsType[type_1.TEMPORAL]) ||\r\n                (model.config('filterNull').ordinal && fieldList.containsType[type_1.ORDINAL]) ||\r\n                (model.config('filterNull').nominal && fieldList.containsType[type_1.NOMINAL])) {\r\n                filteredFields.push(fieldName);\r\n            }\r\n            return filteredFields;\r\n        }, []);\r\n        return filteredFields.length > 0 ?\r\n            [{\r\n                    type: 'filter',\r\n                    test: filteredFields.map(function (fieldName) {\r\n                        return 'datum.' + fieldName + '!==null';\r\n                    }).join(' && ')\r\n                }] : [];\r\n    }\r\n    source_1.nullFilterTransform = nullFilterTransform;\r\n    function filterTransform(model) {\r\n        var filter = model.data().filter;\r\n        return filter ? [{\r\n                type: 'filter',\r\n                test: filter\r\n            }] : [];\r\n    }\r\n    source_1.filterTransform = filterTransform;\r\n    function formulaTransform(model) {\r\n        var calculate = model.data().calculate;\r\n        if (calculate === undefined) {\r\n            return [];\r\n        }\r\n        return calculate.reduce(function (transform, formula) {\r\n            transform.push(util.extend({ type: formula }, formula));\r\n            return transform;\r\n        }, []);\r\n    }\r\n    source_1.formulaTransform = formulaTransform;\r\n})(source = exports.source || (exports.source = {}));\r\nvar summary;\r\n(function (summary) {\r\n    function def(model) {\r\n        var dims = {};\r\n        var meas = {};\r\n        var hasAggregate = false;\r\n        model.forEach(function (fieldDef, channel) {\r\n            if (fieldDef.aggregate) {\r\n                hasAggregate = true;\r\n                if (fieldDef.aggregate === 'count') {\r\n                    meas['*'] = meas['*'] || {};\r\n                    meas['*'].count = true;\r\n                }\r\n                else {\r\n                    meas[fieldDef.field] = meas[fieldDef.field] || {};\r\n                    meas[fieldDef.field][fieldDef.aggregate] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (fieldDef.bin) {\r\n                    dims[model.fieldRef(channel, { binSuffix: '_start' })] = model.fieldRef(channel, { binSuffix: '_start' });\r\n                    dims[model.fieldRef(channel, { binSuffix: '_mid' })] = model.fieldRef(channel, { binSuffix: '_mid' });\r\n                    dims[model.fieldRef(channel, { binSuffix: '_end' })] = model.fieldRef(channel, { binSuffix: '_end' });\r\n                }\r\n                else {\r\n                    dims[fieldDef.field] = model.fieldRef(channel);\r\n                }\r\n            }\r\n        });\r\n        var groupby = util.vals(dims);\r\n        var summarize = util.reduce(meas, function (summarize, fnDictSet, field) {\r\n            summarize[field] = util.keys(fnDictSet);\r\n            return summarize;\r\n        }, {});\r\n        if (hasAggregate) {\r\n            return {\r\n                name: data_1.SUMMARY,\r\n                source: data_1.SOURCE,\r\n                transform: [{\r\n                        type: 'aggregate',\r\n                        groupby: groupby,\r\n                        summarize: summarize\r\n                    }]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    summary.def = def;\r\n    ;\r\n})(summary = exports.summary || (exports.summary = {}));\r\nvar stack;\r\n(function (stack) {\r\n    function def(model, stackProps) {\r\n        var groupbyChannel = stackProps.groupbyChannel;\r\n        var fieldChannel = stackProps.fieldChannel;\r\n        var facets = model.facets();\r\n        var stacked = {\r\n            name: data_1.STACKED,\r\n            source: model.dataTable(),\r\n            transform: [{\r\n                    type: 'aggregate',\r\n                    groupby: [model.fieldRef(groupbyChannel)].concat(facets),\r\n                    summarize: [{ ops: ['sum'], field: model.fieldRef(fieldChannel) }]\r\n                }]\r\n        };\r\n        if (facets && facets.length > 0) {\r\n            stacked.transform.push({\r\n                type: 'aggregate',\r\n                groupby: facets,\r\n                summarize: [{\r\n                        ops: ['max'],\r\n                        field: model.fieldRef(fieldChannel, { prefn: 'sum_' })\r\n                    }]\r\n            });\r\n        }\r\n        return stacked;\r\n    }\r\n    stack.def = def;\r\n    ;\r\n})(stack = exports.stack || (exports.stack = {}));\r\nfunction filterNonPositive(dataTable, model) {\r\n    model.forEach(function (_, channel) {\r\n        if (model.fieldDef(channel).scale.type === 'log') {\r\n            dataTable.transform.push({\r\n                type: 'filter',\r\n                test: model.fieldRef(channel, { datum: 1 }) + ' > 0'\r\n            });\r\n        }\r\n    });\r\n}\r\nexports.filterNonPositive = filterNonPositive;\r\n},{\"../bin\":16,\"../data\":31,\"../fielddef\":33,\"../type\":50,\"../util\":51,\"./time\":30}],22:[function(require,module,exports){\nvar util = require('../util');\r\nvar channel_1 = require('../channel');\r\nvar axis_1 = require('./axis');\r\nvar scale_1 = require('./scale');\r\nfunction groupdef(name, opt) {\r\n    opt = opt || {};\r\n    var group = {\r\n        name: name || undefined,\r\n        type: 'group',\r\n        properties: {\r\n            enter: {\r\n                width: opt.width || { field: { group: 'width' } },\r\n                height: opt.height || { field: { group: 'height' } }\r\n            }\r\n        }\r\n    };\r\n    if (opt.from) {\r\n        group.from = opt.from;\r\n    }\r\n    if (opt.x) {\r\n        group.properties.enter.x = opt.x;\r\n    }\r\n    if (opt.y) {\r\n        group.properties.enter.y = opt.y;\r\n    }\r\n    if (opt.axes) {\r\n        group.axes = opt.axes;\r\n    }\r\n    return group;\r\n}\r\nfunction default_1(group, model, layout, output, singleScaleNames, stats) {\r\n    var enter = group.properties.enter;\r\n    var facetKeys = [], cellAxes = [], from, axesGrp;\r\n    var hasRow = model.has(channel_1.ROW), hasCol = model.has(channel_1.COLUMN);\r\n    enter.fill = { value: model.config('cellBackgroundColor') };\r\n    group.from = { data: group.marks[0].from.data };\r\n    for (var i = 0; i < group.marks.length; i++) {\r\n        var mark = group.marks[i];\r\n        if (mark.from.transform) {\r\n            delete mark.from.data;\r\n        }\r\n        else {\r\n            delete mark.from;\r\n        }\r\n    }\r\n    if (hasRow) {\r\n        if (!model.isDimension(channel_1.ROW)) {\r\n            util.error('Row encoding should be ordinal.');\r\n        }\r\n        enter.y = { scale: channel_1.ROW, field: model.fieldRef(channel_1.ROW) };\r\n        enter.height = { 'value': layout.cellHeight };\r\n        facetKeys.push(model.fieldRef(channel_1.ROW));\r\n        if (hasCol) {\r\n            from = util.duplicate(group.from);\r\n            from.transform = from.transform || [];\r\n            from.transform.unshift({ type: 'facet', groupby: [model.fieldRef(channel_1.COLUMN)] });\r\n        }\r\n        axesGrp = groupdef('x-axes', {\r\n            axes: model.has(channel_1.X) ? [axis_1.compileAxis(channel_1.X, model, layout, stats)] : undefined,\r\n            x: hasCol ? { scale: channel_1.COLUMN, field: model.fieldRef(channel_1.COLUMN) } : { value: 0 },\r\n            width: hasCol && { 'value': layout.cellWidth },\r\n            from: from\r\n        });\r\n        output.marks.unshift(axesGrp);\r\n        (output.axes = output.axes || []);\r\n        output.axes.push(axis_1.compileAxis(channel_1.ROW, model, layout, stats));\r\n    }\r\n    else {\r\n        if (model.has(channel_1.X)) {\r\n            cellAxes.push(axis_1.compileAxis(channel_1.X, model, layout, stats));\r\n        }\r\n    }\r\n    if (hasCol) {\r\n        if (!model.isDimension(channel_1.COLUMN)) {\r\n            util.error('Col encoding should be ordinal.');\r\n        }\r\n        enter.x = { scale: channel_1.COLUMN, field: model.fieldRef(channel_1.COLUMN) };\r\n        enter.width = { 'value': layout.cellWidth };\r\n        facetKeys.push(model.fieldRef(channel_1.COLUMN));\r\n        if (hasRow) {\r\n            from = util.duplicate(group.from);\r\n            from.transform = from.transform || [];\r\n            from.transform.unshift({ type: 'facet', groupby: [model.fieldRef(channel_1.ROW)] });\r\n        }\r\n        axesGrp = groupdef('y-axes', {\r\n            axes: model.has(channel_1.Y) ? [axis_1.compileAxis(channel_1.Y, model, layout, stats)] : undefined,\r\n            y: hasRow && { scale: channel_1.ROW, field: model.fieldRef(channel_1.ROW) },\r\n            x: hasRow && { value: 0 },\r\n            height: hasRow && { 'value': layout.cellHeight },\r\n            from: from\r\n        });\r\n        output.marks.unshift(axesGrp);\r\n        (output.axes = output.axes || []);\r\n        output.axes.push(axis_1.compileAxis(channel_1.COLUMN, model, layout, stats));\r\n    }\r\n    else {\r\n        if (model.has(channel_1.Y)) {\r\n            cellAxes.push(axis_1.compileAxis(channel_1.Y, model, layout, stats));\r\n        }\r\n    }\r\n    output.scales = (output.scales || []).concat(scale_1.compileScales(scale_1.compileScaleNames(enter).concat(singleScaleNames), model, layout, stats, true));\r\n    if (cellAxes.length > 0) {\r\n        group.axes = cellAxes;\r\n    }\r\n    var trans = (group.from.transform || (group.from.transform = []));\r\n    trans.unshift({ type: 'facet', groupby: facetKeys });\r\n    return output;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = default_1;\r\n},{\"../channel\":17,\"../util\":51,\"./axis\":19,\"./scale\":26}],23:[function(require,module,exports){\n/// <reference path=\"../../typings/d3-format.d.ts\"/>\r\nvar d3_format = require('d3-format');\r\nvar util_1 = require('../util');\r\nvar channel_1 = require('../channel');\r\nvar time = require('./time');\r\nvar type_1 = require('../type');\r\nvar util_2 = require('../util');\r\nfunction default_1(model, stats) {\r\n    var layout = box(model, stats);\r\n    layout = offset(model, stats, layout);\r\n    return layout;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = default_1;\r\nfunction box(model, stats) {\r\n    var hasRow = model.has(channel_1.ROW), hasCol = model.has(channel_1.COLUMN), hasX = model.has(channel_1.X), hasY = model.has(channel_1.Y), marktype = model.marktype();\r\n    var xCardinality = hasX && model.isDimension(channel_1.X) ? model.cardinality(channel_1.X, stats) : 1, yCardinality = hasY && model.isDimension(channel_1.Y) ? model.cardinality(channel_1.Y, stats) : 1;\r\n    var useSmallBand = xCardinality > model.config('largeBandMaxCardinality') ||\r\n        yCardinality > model.config('largeBandMaxCardinality');\r\n    var cellWidth, cellHeight, cellPadding = model.config('cellPadding');\r\n    if (hasX) {\r\n        if (model.isOrdinalScale(channel_1.X)) {\r\n            cellWidth = (xCardinality + model.padding(channel_1.X)) * model.bandWidth(channel_1.X, useSmallBand);\r\n        }\r\n        else {\r\n            cellWidth = hasCol || hasRow ? model.fieldDef(channel_1.COLUMN).width : model.config('singleWidth');\r\n        }\r\n    }\r\n    else {\r\n        if (marktype === channel_1.TEXT) {\r\n            cellWidth = model.config('textCellWidth');\r\n        }\r\n        else {\r\n            cellWidth = model.bandWidth(channel_1.X);\r\n        }\r\n    }\r\n    if (hasY) {\r\n        if (model.isOrdinalScale(channel_1.Y)) {\r\n            cellHeight = (yCardinality + model.padding(channel_1.Y)) * model.bandWidth(channel_1.Y, useSmallBand);\r\n        }\r\n        else {\r\n            cellHeight = hasCol || hasRow ? model.fieldDef(channel_1.ROW).height : model.config('singleHeight');\r\n        }\r\n    }\r\n    else {\r\n        cellHeight = model.bandWidth(channel_1.Y);\r\n    }\r\n    var width = cellWidth, height = cellHeight;\r\n    if (hasCol) {\r\n        var colCardinality = model.cardinality(channel_1.COLUMN, stats);\r\n        width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\r\n    }\r\n    if (hasRow) {\r\n        var rowCardinality = model.cardinality(channel_1.ROW, stats);\r\n        height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\r\n    }\r\n    return {\r\n        cellWidth: util_2.roundFloat(cellWidth),\r\n        cellHeight: util_2.roundFloat(cellHeight),\r\n        cellPadding: cellPadding,\r\n        width: util_2.roundFloat(width),\r\n        height: util_2.roundFloat(height),\r\n        x: { useSmallBand: useSmallBand },\r\n        y: { useSmallBand: useSmallBand }\r\n    };\r\n}\r\nfunction getMaxNumberLength(model, channel, fieldStats) {\r\n    var format = model.numberFormat(channel);\r\n    return d3_format.format(format)(fieldStats.max).length;\r\n}\r\nfunction getMaxLength(model, stats, channel) {\r\n    var fieldDef = model.fieldDef(channel), fieldStats = stats[fieldDef.field];\r\n    if (fieldDef.bin) {\r\n        return getMaxNumberLength(model, channel, fieldStats);\r\n    }\r\n    if (fieldDef.type === type_1.QUANTITATIVE) {\r\n        return getMaxNumberLength(model, channel, fieldStats);\r\n    }\r\n    else if (fieldDef.type === type_1.TEMPORAL) {\r\n        return time.maxLength(model.fieldDef(channel).timeUnit, model);\r\n    }\r\n    else if (model.isTypes(channel, [type_1.NOMINAL, type_1.ORDINAL])) {\r\n        if (fieldStats.type === 'number') {\r\n            return getMaxNumberLength(model, channel, fieldStats);\r\n        }\r\n        else {\r\n            return Math.min(fieldStats.max, fieldDef.axis.labelMaxLength || Infinity);\r\n        }\r\n    }\r\n}\r\nfunction offset(model, stats, layout) {\r\n    [channel_1.X, channel_1.Y].forEach(function (channel) {\r\n        var extraOffset = channel === channel_1.X ? 20 : 22;\r\n        var fieldDef = model.fieldDef(channel);\r\n        var maxLength;\r\n        if (model.isDimension(channel) || fieldDef.type === type_1.TEMPORAL) {\r\n            maxLength = getMaxLength(model, stats, channel);\r\n        }\r\n        else if (fieldDef.type === type_1.QUANTITATIVE || fieldDef.aggregate === 'count') {\r\n            if (channel === channel_1.Y) {\r\n                maxLength = getMaxLength(model, stats, channel);\r\n            }\r\n        }\r\n        else {\r\n        }\r\n        if (maxLength) {\r\n            util_1.setter(layout, [channel, 'axisTitleOffset'], model.config('characterWidth') * maxLength + extraOffset);\r\n        }\r\n        else {\r\n            util_1.setter(layout, [channel, 'axisTitleOffset'], model.config('characterWidth') * 3 + extraOffset);\r\n        }\r\n    });\r\n    return layout;\r\n}\r\n},{\"../channel\":17,\"../type\":50,\"../util\":51,\"./time\":30,\"d3-format\":5}],24:[function(require,module,exports){\nvar util = require('../util');\r\nvar channel_1 = require('../channel');\r\nvar time = require('./time');\r\nvar type_1 = require('../type');\r\nfunction compileLegends(model, styleCfg) {\r\n    var defs = [];\r\n    if (model.has(channel_1.COLOR) && model.fieldDef(channel_1.COLOR).legend) {\r\n        defs.push(compileLegend(model, channel_1.COLOR, {\r\n            fill: channel_1.COLOR\r\n        }, styleCfg));\r\n    }\r\n    if (model.has(channel_1.SIZE) && model.fieldDef(channel_1.SIZE).legend) {\r\n        defs.push(compileLegend(model, channel_1.SIZE, {\r\n            size: channel_1.SIZE\r\n        }, styleCfg));\r\n    }\r\n    if (model.has(channel_1.SHAPE) && model.fieldDef(channel_1.SHAPE).legend) {\r\n        defs.push(compileLegend(model, channel_1.SHAPE, {\r\n            shape: channel_1.SHAPE\r\n        }, styleCfg));\r\n    }\r\n    return defs;\r\n}\r\nexports.compileLegends = compileLegends;\r\nfunction compileLegend(model, channel, def, styleCfg) {\r\n    var legend = model.fieldDef(channel).legend;\r\n    def.title = title(model, channel);\r\n    ['orient', 'format', 'values'].forEach(function (property) {\r\n        var value = legend[property];\r\n        if (value !== undefined) {\r\n            def[property] = value;\r\n        }\r\n    });\r\n    var props = legend.properties || {};\r\n    ['title', 'labels', 'symbols', 'legend'].forEach(function (group) {\r\n        var value = properties[group] ?\r\n            properties[group](model, channel, props[group], styleCfg) :\r\n            props[group];\r\n        if (value !== undefined) {\r\n            def.properties = def.properties || {};\r\n            def.properties[group] = value;\r\n        }\r\n    });\r\n    return def;\r\n}\r\nexports.compileLegend = compileLegend;\r\nfunction title(model, channel) {\r\n    var leg = model.fieldDef(channel).legend;\r\n    if (leg.title)\r\n        return leg.title;\r\n    return model.fieldTitle(channel);\r\n}\r\nexports.title = title;\r\nvar properties;\r\n(function (properties) {\r\n    function labels(model, channel, spec) {\r\n        var fieldDef = model.fieldDef(channel);\r\n        var timeUnit = fieldDef.timeUnit;\r\n        if (fieldDef.type === type_1.TEMPORAL && timeUnit && time.hasScale(timeUnit)) {\r\n            return util.extend({\r\n                text: {\r\n                    scale: 'time-' + timeUnit\r\n                }\r\n            }, spec || {});\r\n        }\r\n        return spec;\r\n    }\r\n    properties.labels = labels;\r\n    function symbols(model, channel, spec, styleCfg) {\r\n        var symbols = {};\r\n        var marktype = model.marktype();\r\n        switch (marktype) {\r\n            case 'bar':\r\n            case 'tick':\r\n            case 'text':\r\n                symbols.stroke = { value: 'transparent' };\r\n                symbols.shape = { value: 'square' };\r\n                break;\r\n            case 'circle':\r\n            case 'square':\r\n                symbols.shape = { value: marktype };\r\n            case 'point':\r\n                if (model.fieldDef(channel_1.SHAPE).filled) {\r\n                    if (model.has(channel_1.COLOR) && channel === channel_1.COLOR) {\r\n                        symbols.fill = { scale: channel_1.COLOR, field: 'data' };\r\n                    }\r\n                    else {\r\n                        symbols.fill = { value: model.fieldDef(channel_1.COLOR).value };\r\n                    }\r\n                    symbols.stroke = { value: 'transparent' };\r\n                }\r\n                else {\r\n                    if (model.has(channel_1.COLOR) && channel === channel_1.COLOR) {\r\n                        symbols.stroke = { scale: channel_1.COLOR, field: 'data' };\r\n                    }\r\n                    else {\r\n                        symbols.stroke = { value: model.fieldDef(channel_1.COLOR).value };\r\n                    }\r\n                    symbols.fill = { value: 'transparent' };\r\n                    symbols.strokeWidth = { value: model.config('strokeWidth') };\r\n                }\r\n                break;\r\n            case 'line':\r\n            case 'area':\r\n                break;\r\n        }\r\n        var opacity = model.fieldDef(channel_1.COLOR).opacity || styleCfg.opacity;\r\n        if (opacity) {\r\n            symbols.opacity = { value: opacity };\r\n        }\r\n        symbols = util.extend(symbols, spec || {});\r\n        return util.keys(symbols).length > 0 ? symbols : undefined;\r\n    }\r\n    properties.symbols = symbols;\r\n})(properties || (properties = {}));\r\n},{\"../channel\":17,\"../type\":50,\"../util\":51,\"./time\":30}],25:[function(require,module,exports){\nvar channel_1 = require('../channel');\r\nvar type_1 = require('../type');\r\nfunction compileMarks(model, layout, style) {\r\n    var defs = [], mark = exports[model.marktype()], from = model.dataTable();\r\n    if (model.marktype() === channel_1.TEXT && model.has(channel_1.COLOR)) {\r\n        var bg = {\r\n            x: { value: 0 },\r\n            y: { value: 0 },\r\n            x2: { value: layout.cellWidth },\r\n            y2: { value: layout.cellHeight },\r\n            fill: { scale: channel_1.COLOR, field: model.fieldRef(channel_1.COLOR) }\r\n        };\r\n        defs.push({\r\n            type: 'rect',\r\n            from: { data: from },\r\n            properties: { enter: bg, update: bg }\r\n        });\r\n    }\r\n    var p = mark.prop(model, layout, style);\r\n    defs.push({\r\n        type: mark.type,\r\n        from: { data: from },\r\n        properties: { update: p }\r\n    });\r\n    return defs;\r\n}\r\nexports.compileMarks = compileMarks;\r\nexports.bar = {\r\n    type: 'rect',\r\n    prop: bar_props\r\n};\r\nexports.line = {\r\n    type: 'line',\r\n    prop: line_props\r\n};\r\nexports.area = {\r\n    type: 'area',\r\n    prop: area_props\r\n};\r\nexports.tick = {\r\n    type: 'rect',\r\n    prop: tick_props\r\n};\r\nexports.circle = {\r\n    type: 'symbol',\r\n    prop: filled_point_props('circle')\r\n};\r\nexports.square = {\r\n    type: 'symbol',\r\n    prop: filled_point_props('square')\r\n};\r\nexports.point = {\r\n    type: 'symbol',\r\n    prop: point_props\r\n};\r\nexports.text = {\r\n    type: 'text',\r\n    prop: text_props\r\n};\r\nfunction bar_props(e, layout, style) {\r\n    var p = {};\r\n    if (e.fieldDef(channel_1.X).bin) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_start' }), offset: 1 };\r\n        p.x2 = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_end' }) };\r\n    }\r\n    else if (e.isMeasure(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X) };\r\n        if (!e.has(channel_1.Y) || e.isDimension(channel_1.Y)) {\r\n            p.x2 = { value: 0 };\r\n        }\r\n    }\r\n    else {\r\n        if (e.has(channel_1.X)) {\r\n            p.xc = { scale: channel_1.X, field: e.fieldRef(channel_1.X) };\r\n        }\r\n        else {\r\n            p.x = { value: 0, offset: e.config('singleBarOffset') };\r\n        }\r\n    }\r\n    if (!p.x2) {\r\n        if (!e.has(channel_1.X) || e.isOrdinalScale(channel_1.X)) {\r\n            if (e.has(channel_1.SIZE)) {\r\n                p.width = { scale: channel_1.SIZE, field: e.fieldRef(channel_1.SIZE) };\r\n            }\r\n            else {\r\n                p.width = {\r\n                    value: e.bandWidth(channel_1.X, layout.x.useSmallBand),\r\n                    offset: -1\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            p.width = { value: 2 };\r\n        }\r\n    }\r\n    if (e.fieldDef(channel_1.Y).bin) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_start' }) };\r\n        p.y2 = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_end' }), offset: 1 };\r\n    }\r\n    else if (e.isMeasure(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y) };\r\n        p.y2 = { field: { group: 'height' } };\r\n    }\r\n    else {\r\n        if (e.has(channel_1.Y)) {\r\n            p.yc = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y) };\r\n        }\r\n        else {\r\n            p.y2 = {\r\n                field: { group: 'height' },\r\n                offset: -e.config('singleBarOffset')\r\n            };\r\n        }\r\n        if (e.has(channel_1.SIZE)) {\r\n            p.height = { scale: channel_1.SIZE, field: e.fieldRef(channel_1.SIZE) };\r\n        }\r\n        else {\r\n            p.height = {\r\n                value: e.bandWidth(channel_1.Y, layout.y.useSmallBand),\r\n                offset: -1\r\n            };\r\n        }\r\n    }\r\n    if (e.has(channel_1.COLOR)) {\r\n        p.fill = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n    }\r\n    else {\r\n        p.fill = { value: e.fieldDef(channel_1.COLOR).value };\r\n    }\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    return p;\r\n}\r\nfunction point_props(e, layout, style) {\r\n    var p = {};\r\n    if (e.has(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.X)) {\r\n        p.x = { value: e.bandWidth(channel_1.X, layout.x.useSmallBand) / 2 };\r\n    }\r\n    if (e.has(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.Y)) {\r\n        p.y = { value: e.bandWidth(channel_1.Y, layout.y.useSmallBand) / 2 };\r\n    }\r\n    if (e.has(channel_1.SIZE)) {\r\n        p.size = { scale: channel_1.SIZE, field: e.fieldRef(channel_1.SIZE) };\r\n    }\r\n    else if (!e.has(channel_1.SIZE)) {\r\n        p.size = { value: e.fieldDef(channel_1.SIZE).value };\r\n    }\r\n    if (e.has(channel_1.SHAPE)) {\r\n        p.shape = { scale: channel_1.SHAPE, field: e.fieldRef(channel_1.SHAPE) };\r\n    }\r\n    else if (!e.has(channel_1.SHAPE)) {\r\n        p.shape = { value: e.fieldDef(channel_1.SHAPE).value };\r\n    }\r\n    if (e.fieldDef(channel_1.SHAPE).filled) {\r\n        if (e.has(channel_1.COLOR)) {\r\n            p.fill = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n        }\r\n        else if (!e.has(channel_1.COLOR)) {\r\n            p.fill = { value: e.fieldDef(channel_1.COLOR).value };\r\n        }\r\n    }\r\n    else {\r\n        if (e.has(channel_1.COLOR)) {\r\n            p.stroke = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n        }\r\n        else if (!e.has(channel_1.COLOR)) {\r\n            p.stroke = { value: e.fieldDef(channel_1.COLOR).value };\r\n        }\r\n        p.strokeWidth = { value: e.config('strokeWidth') };\r\n    }\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity || style.opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    return p;\r\n}\r\nfunction line_props(e, layout, style) {\r\n    var p = {};\r\n    if (e.has(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.X)) {\r\n        p.x = { value: 0 };\r\n    }\r\n    if (e.has(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.Y)) {\r\n        p.y = { field: { group: 'height' } };\r\n    }\r\n    if (e.has(channel_1.COLOR)) {\r\n        p.stroke = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n    }\r\n    else if (!e.has(channel_1.COLOR)) {\r\n        p.stroke = { value: e.fieldDef(channel_1.COLOR).value };\r\n    }\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    p.strokeWidth = { value: e.config('strokeWidth') };\r\n    return p;\r\n}\r\nfunction area_props(e, layout, style) {\r\n    var p = {};\r\n    if (e.isMeasure(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X) };\r\n        if (e.isDimension(channel_1.Y)) {\r\n            p.x2 = { scale: channel_1.X, value: 0 };\r\n            p.orient = { value: 'horizontal' };\r\n        }\r\n    }\r\n    else if (e.has(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n    }\r\n    else {\r\n        p.x = { value: 0 };\r\n    }\r\n    if (e.isMeasure(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y) };\r\n        p.y2 = { scale: channel_1.Y, value: 0 };\r\n    }\r\n    else if (e.has(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n    }\r\n    else {\r\n        p.y = { field: { group: 'height' } };\r\n    }\r\n    if (e.has(channel_1.COLOR)) {\r\n        p.fill = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n    }\r\n    else if (!e.has(channel_1.COLOR)) {\r\n        p.fill = { value: e.fieldDef(channel_1.COLOR).value };\r\n    }\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    return p;\r\n}\r\nfunction tick_props(e, layout, style) {\r\n    var p = {};\r\n    if (e.has(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n        if (e.isDimension(channel_1.X)) {\r\n            p.x.offset = -e.bandWidth(channel_1.X, layout.x.useSmallBand) / 3;\r\n        }\r\n    }\r\n    else if (!e.has(channel_1.X)) {\r\n        p.x = { value: 0 };\r\n    }\r\n    if (e.has(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n        if (e.isDimension(channel_1.Y)) {\r\n            p.y.offset = -e.bandWidth(channel_1.Y, layout.y.useSmallBand) / 3;\r\n        }\r\n    }\r\n    else if (!e.has(channel_1.Y)) {\r\n        p.y = { value: 0 };\r\n    }\r\n    if (!e.has(channel_1.X) || e.isDimension(channel_1.X)) {\r\n        p.width = { value: e.bandWidth(channel_1.X, layout.y.useSmallBand) / 1.5 };\r\n    }\r\n    else {\r\n        p.width = { value: 1 };\r\n    }\r\n    if (!e.has(channel_1.Y) || e.isDimension(channel_1.Y)) {\r\n        p.height = { value: e.bandWidth(channel_1.Y, layout.y.useSmallBand) / 1.5 };\r\n    }\r\n    else {\r\n        p.height = { value: 1 };\r\n    }\r\n    if (e.has(channel_1.COLOR)) {\r\n        p.fill = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n    }\r\n    else {\r\n        p.fill = { value: e.fieldDef(channel_1.COLOR).value };\r\n    }\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity || style.opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    return p;\r\n}\r\nfunction filled_point_props(shape) {\r\n    return function (e, layout, style) {\r\n        var p = {};\r\n        if (e.has(channel_1.X)) {\r\n            p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n        }\r\n        else if (!e.has(channel_1.X)) {\r\n            p.x = { value: e.bandWidth(channel_1.X, layout.x.useSmallBand) / 2 };\r\n        }\r\n        if (e.has(channel_1.Y)) {\r\n            p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n        }\r\n        else if (!e.has(channel_1.Y)) {\r\n            p.y = { value: e.bandWidth(channel_1.Y, layout.y.useSmallBand) / 2 };\r\n        }\r\n        if (e.has(channel_1.SIZE)) {\r\n            p.size = { scale: channel_1.SIZE, field: e.fieldRef(channel_1.SIZE) };\r\n        }\r\n        else if (!e.has(channel_1.X)) {\r\n            p.size = { value: e.fieldDef(channel_1.SIZE).value };\r\n        }\r\n        p.shape = { value: shape };\r\n        if (e.has(channel_1.COLOR)) {\r\n            p.fill = { scale: channel_1.COLOR, field: e.fieldRef(channel_1.COLOR) };\r\n        }\r\n        else if (!e.has(channel_1.COLOR)) {\r\n            p.fill = { value: e.fieldDef(channel_1.COLOR).value };\r\n        }\r\n        var opacity = e.fieldDef(channel_1.COLOR).opacity || style.opacity;\r\n        if (opacity)\r\n            p.opacity = { value: opacity };\r\n        return p;\r\n    };\r\n}\r\nfunction text_props(e, layout, style) {\r\n    var p = {}, fieldDef = e.fieldDef(channel_1.TEXT);\r\n    if (e.has(channel_1.X)) {\r\n        p.x = { scale: channel_1.X, field: e.fieldRef(channel_1.X, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.X)) {\r\n        if (e.has(channel_1.TEXT) && e.fieldDef(channel_1.TEXT).type === type_1.QUANTITATIVE) {\r\n            p.x = { value: layout.cellWidth - 5 };\r\n        }\r\n        else {\r\n            p.x = { value: e.bandWidth(channel_1.X, layout.x.useSmallBand) / 2 };\r\n        }\r\n    }\r\n    if (e.has(channel_1.Y)) {\r\n        p.y = { scale: channel_1.Y, field: e.fieldRef(channel_1.Y, { binSuffix: '_mid' }) };\r\n    }\r\n    else if (!e.has(channel_1.Y)) {\r\n        p.y = { value: e.bandWidth(channel_1.Y, layout.y.useSmallBand) / 2 };\r\n    }\r\n    if (e.has(channel_1.SIZE)) {\r\n        p.fontSize = { scale: channel_1.SIZE, field: e.fieldRef(channel_1.SIZE) };\r\n    }\r\n    else if (!e.has(channel_1.SIZE)) {\r\n        p.fontSize = { value: fieldDef.font.size };\r\n    }\r\n    p.fill = { value: fieldDef.color };\r\n    var opacity = e.fieldDef(channel_1.COLOR).opacity || style.opacity;\r\n    if (opacity)\r\n        p.opacity = { value: opacity };\r\n    if (e.has(channel_1.TEXT)) {\r\n        if (e.fieldDef(channel_1.TEXT).type === type_1.QUANTITATIVE) {\r\n            var numberFormat = fieldDef.format !== undefined ?\r\n                fieldDef.format : e.numberFormat(channel_1.TEXT);\r\n            p.text = { template: '{{' + e.fieldRef(channel_1.TEXT, { datum: true }) + ' | number:\\'' +\r\n                    numberFormat + '\\'}}' };\r\n            p.align = { value: fieldDef.align };\r\n        }\r\n        else {\r\n            p.text = { field: e.fieldRef(channel_1.TEXT) };\r\n        }\r\n    }\r\n    else {\r\n        p.text = { value: fieldDef.placeholder };\r\n    }\r\n    p.font = { value: fieldDef.font.family };\r\n    p.fontWeight = { value: fieldDef.font.weight };\r\n    p.fontStyle = { value: fieldDef.font.style };\r\n    p.baseline = { value: fieldDef.baseline };\r\n    return p;\r\n}\r\n},{\"../channel\":17,\"../type\":50}],26:[function(require,module,exports){\n/// <reference path=\"../../typings/colorbrewer.d.ts\"/>\r\n/// <reference path=\"../../typings/d3-color.d.ts\"/>\r\nvar colorbrewer = require('colorbrewer');\r\nvar d3_color_1 = require('d3-color');\r\nvar util = require('../util');\r\nvar aggregate_1 = require('../aggregate');\r\nvar channel_1 = require('../channel');\r\nvar data_1 = require('../data');\r\nvar time = require('./time');\r\nvar type_1 = require('../type');\r\nfunction compileScaleNames(props) {\r\n    return util.keys(util.keys(props).reduce(function (a, x) {\r\n        if (props[x] && props[x].scale)\r\n            a[props[x].scale] = 1;\r\n        return a;\r\n    }, {}));\r\n}\r\nexports.compileScaleNames = compileScaleNames;\r\nfunction compileScales(names, model, layout, stats, facet) {\r\n    return names.reduce(function (a, channel) {\r\n        var scaleDef = {};\r\n        scaleDef.name = channel;\r\n        var t = scaleDef.type = type(channel, model);\r\n        scaleDef.domain = domain(model, channel, t, facet);\r\n        [\r\n            'range', 'reverse', 'round',\r\n            'clamp', 'nice',\r\n            'exponent', 'zero',\r\n            'bandWidth', 'outerPadding', 'padding', 'points'\r\n        ].forEach(function (property) {\r\n            var value = exports[property](model, channel, t, layout, stats);\r\n            if (value !== undefined) {\r\n                scaleDef[property] = value;\r\n            }\r\n        });\r\n        return (a.push(scaleDef), a);\r\n    }, []);\r\n}\r\nexports.compileScales = compileScales;\r\nfunction type(channel, model) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    switch (fieldDef.type) {\r\n        case type_1.NOMINAL:\r\n        case type_1.ORDINAL:\r\n            return 'ordinal';\r\n        case type_1.TEMPORAL:\r\n            return fieldDef.timeUnit ? time.scale.type(fieldDef.timeUnit, channel) : 'time';\r\n        case type_1.QUANTITATIVE:\r\n            if (model.bin(channel)) {\r\n                return channel === channel_1.ROW || channel === channel_1.COLUMN || channel === channel_1.SHAPE ? 'ordinal' : 'linear';\r\n            }\r\n            return fieldDef.scale.type;\r\n    }\r\n}\r\nexports.type = type;\r\nfunction domain(model, channel, type, facet) {\r\n    if (facet === void 0) { facet = false; }\r\n    var fieldDef = model.fieldDef(channel);\r\n    if (fieldDef.scale.domain) {\r\n        return fieldDef.scale.domain;\r\n    }\r\n    if (fieldDef.type === type_1.TEMPORAL) {\r\n        var range = time.scale.domain(fieldDef.timeUnit, channel);\r\n        if (range)\r\n            return range;\r\n    }\r\n    var stack = model.stack();\r\n    if (stack && channel === stack.fieldChannel) {\r\n        return {\r\n            data: data_1.STACKED,\r\n            field: model.fieldRef(channel, {\r\n                prefn: (facet ? 'max_' : '') + 'sum_'\r\n            })\r\n        };\r\n    }\r\n    var useRawDomain = _useRawDomain(model, channel);\r\n    var sort = domainSort(model, channel, type);\r\n    if (useRawDomain) {\r\n        return {\r\n            data: data_1.SOURCE,\r\n            field: model.fieldRef(channel, { noAggregate: true })\r\n        };\r\n    }\r\n    else if (fieldDef.bin) {\r\n        return {\r\n            data: model.dataTable(),\r\n            field: type === 'ordinal' ?\r\n                model.fieldRef(channel, { binSuffix: '_start' }) :\r\n                [\r\n                    model.fieldRef(channel, { binSuffix: '_start' }),\r\n                    model.fieldRef(channel, { binSuffix: '_end' })\r\n                ]\r\n        };\r\n    }\r\n    else if (sort) {\r\n        return {\r\n            data: sort.op ? data_1.SOURCE : model.dataTable(),\r\n            field: model.fieldRef(channel),\r\n            sort: sort\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            data: model.dataTable(),\r\n            field: model.fieldRef(channel)\r\n        };\r\n    }\r\n}\r\nexports.domain = domain;\r\nfunction domainSort(model, channel, type) {\r\n    var sort = model.fieldDef(channel).sort;\r\n    if (sort === 'ascending' || sort === 'descending') {\r\n        return true;\r\n    }\r\n    if (type === 'ordinal' && util.isObject(sort)) {\r\n        return {\r\n            op: sort.op,\r\n            field: sort.field\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\nexports.domainSort = domainSort;\r\nfunction reverse(model, channel) {\r\n    var sort = model.fieldDef(channel).sort;\r\n    return sort && (sort === 'descending' || (sort.order === 'descending')) ? true : undefined;\r\n}\r\nexports.reverse = reverse;\r\nfunction _useRawDomain(model, channel) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    var scaleUseRawDomain = fieldDef.scale.useRawDomain;\r\n    var useRawDomainEnabled = scaleUseRawDomain !== undefined ?\r\n        scaleUseRawDomain : model.config('useRawDomain');\r\n    return useRawDomainEnabled &&\r\n        fieldDef.aggregate &&\r\n        aggregate_1.SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\r\n        ((fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) ||\r\n            (fieldDef.type === type_1.TEMPORAL &&\r\n                (!fieldDef.timeUnit || !time.isOrdinalFn(fieldDef.timeUnit))));\r\n}\r\nexports._useRawDomain = _useRawDomain;\r\nfunction bandWidth(model, channel, type, layout) {\r\n    // TODO: eliminate layout\r\n    switch (channel) {\r\n        case channel_1.X:\r\n        case channel_1.Y:\r\n            if (type === 'ordinal') {\r\n                return model.bandWidth(channel, layout[channel].useSmallBand);\r\n            }\r\n            break;\r\n        case channel_1.ROW:\r\n            return layout.cellHeight;\r\n        case channel_1.COLUMN:\r\n            return layout.cellWidth;\r\n    }\r\n    return undefined;\r\n}\r\nexports.bandWidth = bandWidth;\r\nfunction clamp(model, channel) {\r\n    return model.fieldDef(channel).scale.clamp;\r\n}\r\nexports.clamp = clamp;\r\nfunction exponent(model, channel) {\r\n    return model.fieldDef(channel).scale.exponent;\r\n}\r\nexports.exponent = exponent;\r\nfunction nice(model, channel, type) {\r\n    if (model.fieldDef(channel).scale.nice !== undefined) {\r\n        return model.fieldDef(channel).scale.nice;\r\n    }\r\n    switch (channel) {\r\n        case channel_1.X:\r\n        case channel_1.Y:\r\n            if (type === 'time' || type === 'ordinal') {\r\n                return undefined;\r\n            }\r\n            return true;\r\n        case channel_1.ROW:\r\n        case channel_1.COLUMN:\r\n            return true;\r\n    }\r\n    return undefined;\r\n}\r\nexports.nice = nice;\r\nfunction outerPadding(model, channel, type) {\r\n    if (type === 'ordinal') {\r\n        if (model.fieldDef(channel).scale.outerPadding !== undefined) {\r\n            return model.fieldDef(channel).scale.outerPadding;\r\n        }\r\n        if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\r\n            return 0;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.outerPadding = outerPadding;\r\nfunction padding(model, channel, type) {\r\n    if (type === 'ordinal') {\r\n        return model.padding(channel);\r\n    }\r\n    return undefined;\r\n}\r\nexports.padding = padding;\r\nfunction points(model, channel, type) {\r\n    if (type === 'ordinal') {\r\n        if (model.fieldDef(channel).scale.points !== undefined) {\r\n            return model.fieldDef(channel).scale.points;\r\n        }\r\n        switch (channel) {\r\n            case channel_1.X:\r\n            case channel_1.Y:\r\n                return true;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.points = points;\r\nfunction range(model, channel, type, layout, stats) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    if (fieldDef.scale.range) {\r\n        return fieldDef.scale.range;\r\n    }\r\n    switch (channel) {\r\n        case channel_1.X:\r\n            return layout.cellWidth ? [0, layout.cellWidth] : 'width';\r\n        case channel_1.Y:\r\n            if (type === 'ordinal') {\r\n                return layout.cellHeight ?\r\n                    (fieldDef.bin ? [layout.cellHeight, 0] : [0, layout.cellHeight]) :\r\n                    'height';\r\n            }\r\n            return layout.cellHeight ? [layout.cellHeight, 0] : 'height';\r\n        case channel_1.SIZE:\r\n            if (model.is('bar')) {\r\n                return [3, Math.max(model.bandWidth(channel_1.X), model.bandWidth(channel_1.Y))];\r\n            }\r\n            else if (model.is(channel_1.TEXT)) {\r\n                return [8, 40];\r\n            }\r\n            var bandWidth = Math.min(model.bandWidth(channel_1.X), model.bandWidth(channel_1.Y)) - 1;\r\n            return [10, 0.8 * bandWidth * bandWidth];\r\n        case channel_1.SHAPE:\r\n            return 'shapes';\r\n        case channel_1.COLOR:\r\n            return color(model, channel, type, stats);\r\n    }\r\n    return undefined;\r\n}\r\nexports.range = range;\r\nfunction round(model, channel) {\r\n    if (model.fieldDef(channel).scale.round !== undefined) {\r\n        return model.fieldDef(channel).scale.round;\r\n    }\r\n    switch (channel) {\r\n        case channel_1.X:\r\n        case channel_1.Y:\r\n        case channel_1.ROW:\r\n        case channel_1.COLUMN:\r\n        case channel_1.SIZE:\r\n            return true;\r\n    }\r\n    return undefined;\r\n}\r\nexports.round = round;\r\nfunction zero(model, channel) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    var timeUnit = fieldDef.timeUnit;\r\n    if (fieldDef.scale.zero !== undefined) {\r\n        return fieldDef.scale.zero;\r\n    }\r\n    if (fieldDef.type === type_1.TEMPORAL) {\r\n        if (timeUnit === 'year') {\r\n            return false;\r\n        }\r\n        return undefined;\r\n    }\r\n    if (fieldDef.bin) {\r\n        return false;\r\n    }\r\n    return channel === channel_1.X || channel === channel_1.Y ?\r\n        undefined :\r\n        false;\r\n}\r\nexports.zero = zero;\r\nfunction color(model, channel, scaleType, stats) {\r\n    var fieldDef = model.fieldDef(channel_1.COLOR), colorScale = fieldDef.scale, cardinality = model.cardinality(channel_1.COLOR, stats), type = fieldDef.type;\r\n    var range = colorScale.range;\r\n    if (range === undefined) {\r\n        var ordinalPalette = colorScale.ordinalPalette, quantitativeRange = colorScale.quantitativeRange;\r\n        if (scaleType === 'ordinal') {\r\n            if (type === type_1.NOMINAL) {\r\n                if (cardinality <= 10) {\r\n                    range = colorScale.c10palette;\r\n                }\r\n                else {\r\n                    range = colorScale.c20palette;\r\n                }\r\n                return colors.palette(range, cardinality, type);\r\n            }\r\n            else {\r\n                if (ordinalPalette) {\r\n                    return colors.palette(ordinalPalette, cardinality, type);\r\n                }\r\n                return colors.interpolate(quantitativeRange[0], quantitativeRange[1], cardinality);\r\n            }\r\n        }\r\n        else {\r\n            return [quantitativeRange[0], quantitativeRange[1]];\r\n        }\r\n    }\r\n}\r\nexports.color = color;\r\nvar colors;\r\n(function (colors) {\r\n    function palette(range, cardinality, type) {\r\n        switch (range) {\r\n            case 'category10k':\r\n                return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\r\n            case 'category10':\r\n                return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\r\n            case 'category20':\r\n                return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n            case 'category20b':\r\n                return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\r\n            case 'category20c':\r\n                return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\r\n        }\r\n        if (range in colorbrewer) {\r\n            var palette = colorbrewer[range];\r\n            if (cardinality in palette)\r\n                return palette[cardinality];\r\n            if (type === type_1.NOMINAL) {\r\n                return palette[Math.max.apply(null, util.keys(palette))];\r\n            }\r\n            var ps = cardinality < 3 ? 3 : Math.max.apply(null, util.keys(palette)), from = 0, to = ps - 1;\r\n            return colors.interpolate(palette[ps][from], palette[ps][to], cardinality);\r\n        }\r\n        return range;\r\n    }\r\n    colors.palette = palette;\r\n    function interpolate(start, end, cardinality) {\r\n        var interpolator = d3_color_1.interpolateHsl(start, end);\r\n        return util.range(cardinality).map(function (i) { return interpolator(i * 1.0 / (cardinality - 1)); });\r\n    }\r\n    colors.interpolate = interpolate;\r\n})(colors = exports.colors || (exports.colors = {}));\r\n},{\"../aggregate\":15,\"../channel\":17,\"../data\":31,\"../type\":50,\"../util\":51,\"./time\":30,\"colorbrewer\":3,\"d3-color\":4}],27:[function(require,module,exports){\nvar util = require('../util');\r\nfunction default_1(model, mdef, stackProps) {\r\n    var groupby = stackProps.groupbyChannel;\r\n    var fieldChannel = stackProps.fieldChannel;\r\n    var valName = model.fieldRef(fieldChannel);\r\n    var startField = valName + '_start';\r\n    var endField = valName + '_end';\r\n    var transforms = [];\r\n    if (model.marktype() === 'area') {\r\n        transforms.push({\r\n            type: 'impute',\r\n            field: model.fieldRef(fieldChannel),\r\n            groupby: [model.fieldRef(stackProps.stackChannel)],\r\n            orderby: [model.fieldRef(groupby)],\r\n            method: 'value',\r\n            value: 0\r\n        });\r\n    }\r\n    var sortby = stackProps.config.sort === 'descending' ?\r\n        '-' + model.fieldRef(stackProps.stackChannel) :\r\n        stackProps.config.sort === 'ascending' ?\r\n            model.fieldRef(stackProps.stackChannel) :\r\n            util.isObject(stackProps.config.sort) ?\r\n                stackProps.config.sort :\r\n                '-' + model.fieldRef(stackProps.stackChannel);\r\n    var stackTransform = {\r\n        type: 'stack',\r\n        groupby: [model.fieldRef(groupby)],\r\n        field: model.fieldRef(fieldChannel),\r\n        sortby: sortby,\r\n        output: { start: startField, end: endField }\r\n    };\r\n    if (stackProps.config.offset) {\r\n        stackTransform.offset = stackProps.config.offset;\r\n    }\r\n    transforms.push(stackTransform);\r\n    mdef.from.transform = transforms;\r\n    mdef.properties.update[fieldChannel] = {\r\n        scale: fieldChannel,\r\n        field: startField\r\n    };\r\n    mdef.properties.update[fieldChannel + '2'] = {\r\n        scale: fieldChannel,\r\n        field: endField\r\n    };\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = default_1;\r\n},{\"../util\":51}],28:[function(require,module,exports){\nvar vlFieldDef = require('../fielddef');\r\nvar channel_1 = require('../channel');\r\nfunction default_1(model, stats) {\r\n    return {\r\n        opacity: estimateOpacity(model, stats),\r\n    };\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = default_1;\r\n;\r\nfunction estimateOpacity(model, stats) {\r\n    if (!stats) {\r\n        return 1;\r\n    }\r\n    var numPoints = 0;\r\n    if (model.isAggregate()) {\r\n        numPoints = 1;\r\n        model.forEach(function (fieldDef, channel) {\r\n            if (channel !== channel_1.ROW && channel !== channel_1.COLUMN &&\r\n                !((channel === channel_1.X || channel === channel_1.Y) &&\r\n                    vlFieldDef.isOrdinalScale(fieldDef))) {\r\n                numPoints *= model.cardinality(channel, stats);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        if (!stats['*'])\r\n            return 1;\r\n        numPoints = stats['*'].max;\r\n        var numMultiples = 1;\r\n        if (model.has(channel_1.ROW)) {\r\n            numMultiples *= model.cardinality(channel_1.ROW, stats);\r\n        }\r\n        if (model.has(channel_1.COLUMN)) {\r\n            numMultiples *= model.cardinality(channel_1.COLUMN, stats);\r\n        }\r\n        numPoints /= numMultiples;\r\n    }\r\n    var opacity = 0;\r\n    if (numPoints <= 25) {\r\n        opacity = 1;\r\n    }\r\n    else if (numPoints < 200) {\r\n        opacity = 0.8;\r\n    }\r\n    else if (numPoints < 1000 || model.is('tick')) {\r\n        opacity = 0.7;\r\n    }\r\n    else {\r\n        opacity = 0.3;\r\n    }\r\n    return opacity;\r\n}\r\n},{\"../channel\":17,\"../fielddef\":33}],29:[function(require,module,exports){\nfunction default_1(group, mdef, details) {\r\n    var m = group.marks;\r\n    var g = {\r\n        name: 'subfacet',\r\n        type: 'group',\r\n        from: mdef.from,\r\n        properties: {\r\n            enter: {\r\n                width: { field: { group: 'width' } },\r\n                height: { field: { group: 'height' } }\r\n            }\r\n        },\r\n        marks: m\r\n    };\r\n    group.marks = [g];\r\n    delete mdef.from;\r\n    var trans = (g.from.transform || (g.from.transform = []));\r\n    trans.push({ type: 'facet', groupby: details });\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = default_1;\r\n},{}],30:[function(require,module,exports){\n/// <reference path=\"../../typings/d3-time-format.d.ts\"/>\r\nvar d3_time_format_1 = require('d3-time-format');\r\nvar util = require('../util');\r\nvar channel_1 = require('../channel');\r\nvar type_1 = require('../type');\r\nvar LONG_DATE = new Date(Date.UTC(2014, 8, 17));\r\nfunction cardinality(fieldDef, stats, filterNull, type) {\r\n    var timeUnit = fieldDef.timeUnit;\r\n    switch (timeUnit) {\r\n        case 'seconds': return 60;\r\n        case 'minutes': return 60;\r\n        case 'hours': return 24;\r\n        case 'day': return 7;\r\n        case 'date': return 31;\r\n        case 'month': return 12;\r\n        case 'year':\r\n            var stat = stats[fieldDef.field], yearstat = stats['year_' + fieldDef.field];\r\n            if (!yearstat) {\r\n                return null;\r\n            }\r\n            return yearstat.distinct -\r\n                (stat.missing > 0 && filterNull[type] ? 1 : 0);\r\n    }\r\n    return null;\r\n}\r\nexports.cardinality = cardinality;\r\nfunction formula(timeUnit, fieldRef) {\r\n    var fn = 'utc' + timeUnit;\r\n    return fn + '(' + fieldRef + ')';\r\n}\r\nexports.formula = formula;\r\nfunction maxLength(timeUnit, model) {\r\n    switch (timeUnit) {\r\n        case 'seconds':\r\n        case 'minutes':\r\n        case 'hours':\r\n        case 'date':\r\n            return 2;\r\n        case 'month':\r\n        case 'day':\r\n            var rng = range(timeUnit, model);\r\n            if (rng) {\r\n                return Math.max.apply(null, rng.map(function (r) { return r.length; }));\r\n            }\r\n            return 2;\r\n        case 'year':\r\n            return 4;\r\n    }\r\n    var timeFormat = model.config('timeFormat');\r\n    return d3_time_format_1.utcFormat(timeFormat)(LONG_DATE).length;\r\n}\r\nexports.maxLength = maxLength;\r\nfunction range(timeUnit, model) {\r\n    var labelLength = model.config('timeScaleLabelLength'), scaleLabel;\r\n    switch (timeUnit) {\r\n        case 'day':\r\n            scaleLabel = model.config('dayScaleLabel');\r\n            break;\r\n        case 'month':\r\n            scaleLabel = model.config('monthScaleLabel');\r\n            break;\r\n    }\r\n    if (scaleLabel) {\r\n        return labelLength ? scaleLabel.map(function (s) { return s.substr(0, labelLength); }) : scaleLabel;\r\n    }\r\n    return;\r\n}\r\nexports.range = range;\r\nfunction scales(model) {\r\n    var scales = model.reduce(function (scales, fieldDef) {\r\n        var timeUnit = fieldDef.timeUnit;\r\n        if (fieldDef.type === type_1.TEMPORAL && timeUnit && !scales[timeUnit]) {\r\n            var scaleDef = scale.def(fieldDef.timeUnit, model);\r\n            if (scaleDef)\r\n                scales[timeUnit] = scaleDef;\r\n        }\r\n        return scales;\r\n    }, {});\r\n    return util.vals(scales);\r\n}\r\nexports.scales = scales;\r\nfunction isOrdinalFn(timeUnit) {\r\n    switch (timeUnit) {\r\n        case 'seconds':\r\n        case 'minutes':\r\n        case 'hours':\r\n        case 'day':\r\n        case 'date':\r\n        case 'month':\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isOrdinalFn = isOrdinalFn;\r\nvar scale;\r\n(function (scale) {\r\n    function def(timeUnit, model) {\r\n        var rangeDef = range(timeUnit, model);\r\n        if (rangeDef) {\r\n            return {\r\n                name: 'time-' + timeUnit,\r\n                type: 'ordinal',\r\n                domain: scale.domain(timeUnit),\r\n                range: rangeDef\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    scale.def = def;\r\n    function type(timeUnit, channel) {\r\n        if (channel === channel_1.COLOR) {\r\n            return 'linear';\r\n        }\r\n        return isOrdinalFn(timeUnit) || channel === channel_1.COLUMN || channel === channel_1.ROW ? 'ordinal' : 'linear';\r\n    }\r\n    scale.type = type;\r\n    function domain(timeUnit, channel) {\r\n        var isColor = channel === channel_1.COLOR;\r\n        switch (timeUnit) {\r\n            case 'seconds':\r\n            case 'minutes': return isColor ? [0, 59] : util.range(0, 60);\r\n            case 'hours': return isColor ? [0, 23] : util.range(0, 24);\r\n            case 'day': return isColor ? [0, 6] : util.range(0, 7);\r\n            case 'date': return isColor ? [1, 31] : util.range(1, 32);\r\n            case 'month': return isColor ? [0, 11] : util.range(0, 12);\r\n        }\r\n        return null;\r\n    }\r\n    scale.domain = domain;\r\n})(scale = exports.scale || (exports.scale = {}));\r\nfunction hasScale(timeUnit) {\r\n    switch (timeUnit) {\r\n        case 'day':\r\n        case 'month':\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\nexports.hasScale = hasScale;\r\n},{\"../channel\":17,\"../type\":50,\"../util\":51,\"d3-time-format\":6}],31:[function(require,module,exports){\n/*\r\n * Constants and utilities for data.\r\n */\r\nvar util = require('./util');\r\nvar type_1 = require('./type');\r\nexports.SUMMARY = 'summary';\r\nexports.SOURCE = 'source';\r\nexports.STACKED = 'stacked';\r\nexports.types = {\r\n    'boolean': type_1.NOMINAL,\r\n    'number': type_1.QUANTITATIVE,\r\n    'integer': type_1.QUANTITATIVE,\r\n    'date': type_1.TEMPORAL,\r\n    'string': type_1.NOMINAL\r\n};\r\nfunction stats(data) {\r\n    var summary = util.summary(data);\r\n    return summary.reduce(function (s, profile) {\r\n        s[profile.field] = profile;\r\n        return s;\r\n    }, {\r\n        '*': {\r\n            max: data.length,\r\n            min: 0\r\n        }\r\n    });\r\n}\r\nexports.stats = stats;\r\n},{\"./type\":50,\"./util\":51}],32:[function(require,module,exports){\nvar channel_1 = require('./channel');\r\nfunction countRetinal(encoding) {\r\n    var count = 0;\r\n    if (encoding.color)\r\n        count++;\r\n    if (encoding.size)\r\n        count++;\r\n    if (encoding.shape)\r\n        count++;\r\n    return count;\r\n}\r\nexports.countRetinal = countRetinal;\r\nfunction has(encoding, channel) {\r\n    var fieldDef = encoding && encoding[channel];\r\n    return fieldDef && fieldDef.field;\r\n}\r\nexports.has = has;\r\nfunction isAggregate(encoding) {\r\n    for (var k in encoding) {\r\n        if (has(encoding, k) && encoding[k].aggregate) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isAggregate = isAggregate;\r\nfunction forEach(encoding, f) {\r\n    var i = 0;\r\n    channel_1.CHANNELS.forEach(function (channel) {\r\n        if (has(encoding, channel)) {\r\n            f(encoding[channel], channel, i++);\r\n        }\r\n    });\r\n}\r\nexports.forEach = forEach;\r\nfunction map(encoding, f) {\r\n    var arr = [];\r\n    channel_1.CHANNELS.forEach(function (k) {\r\n        if (has(encoding, k)) {\r\n            arr.push(f(encoding[k], k, encoding));\r\n        }\r\n    });\r\n    return arr;\r\n}\r\nexports.map = map;\r\nfunction reduce(encoding, f, init) {\r\n    var r = init;\r\n    channel_1.CHANNELS.forEach(function (k) {\r\n        if (has(encoding, k)) {\r\n            r = f(r, encoding[k], k, encoding);\r\n        }\r\n    });\r\n    return r;\r\n}\r\nexports.reduce = reduce;\r\nfunction fields(encoding) {\r\n    return reduce(encoding, function (m, fieldDef) {\r\n        var fieldList = m[fieldDef.field] = m[fieldDef.field] || [];\r\n        var containsType = fieldList.containsType = fieldList.containsType || {};\r\n        if (fieldList.indexOf(fieldDef) === -1) {\r\n            fieldList.push(fieldDef);\r\n            containsType[fieldDef.type] = true;\r\n        }\r\n        return m;\r\n    }, {});\r\n}\r\nexports.fields = fields;\r\n},{\"./channel\":17}],33:[function(require,module,exports){\n// utility for a field definition object\r\nvar bin_1 = require('./bin');\r\nvar util = require('./util');\r\nvar time = require('./compiler/time');\r\nvar type_1 = require('./type');\r\nfunction fieldRef(fieldDef, opt) {\r\n    opt = opt || {};\r\n    var f = (opt.datum ? 'datum.' : '') + (opt.prefn || ''), field = fieldDef.field;\r\n    if (isCount(fieldDef)) {\r\n        return f + 'count';\r\n    }\r\n    else if (opt.fn) {\r\n        return f + opt.fn + '_' + field;\r\n    }\r\n    else if (!opt.nofn && fieldDef.bin) {\r\n        var binSuffix = opt.binSuffix || '_start';\r\n        return f + 'bin_' + field + binSuffix;\r\n    }\r\n    else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\r\n        return f + fieldDef.aggregate + '_' + field;\r\n    }\r\n    else if (!opt.nofn && fieldDef.timeUnit) {\r\n        return f + fieldDef.timeUnit + '_' + field;\r\n    }\r\n    else {\r\n        return f + field;\r\n    }\r\n}\r\nexports.fieldRef = fieldRef;\r\nfunction isTypes(fieldDef, types) {\r\n    for (var t = 0; t < types.length; t++) {\r\n        if (fieldDef.type === types[t]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.isTypes = isTypes;\r\nfunction isOrdinalScale(fieldDef) {\r\n    return isTypes(fieldDef, [type_1.NOMINAL, type_1.ORDINAL]) ||\r\n        (fieldDef.type === type_1.TEMPORAL && fieldDef.timeUnit && time.isOrdinalFn(fieldDef.timeUnit));\r\n}\r\nexports.isOrdinalScale = isOrdinalScale;\r\nfunction _isFieldDimension(fieldDef) {\r\n    return isTypes(fieldDef, [type_1.NOMINAL, type_1.ORDINAL]) || !!fieldDef.bin ||\r\n        (fieldDef.type === type_1.TEMPORAL && !!fieldDef.timeUnit);\r\n}\r\nfunction isDimension(fieldDef) {\r\n    return fieldDef && _isFieldDimension(fieldDef);\r\n}\r\nexports.isDimension = isDimension;\r\nfunction isMeasure(fieldDef) {\r\n    return fieldDef && !_isFieldDimension(fieldDef);\r\n}\r\nexports.isMeasure = isMeasure;\r\nfunction count() {\r\n    return { field: '*', aggregate: 'count', type: type_1.QUANTITATIVE, displayName: exports.COUNT_DISPLAYNAME };\r\n}\r\nexports.count = count;\r\nexports.COUNT_DISPLAYNAME = 'Number of Records';\r\nfunction isCount(fieldDef) {\r\n    return fieldDef.aggregate === 'count';\r\n}\r\nexports.isCount = isCount;\r\nfunction cardinality(fieldDef, stats, filterNull) {\r\n    // FIXME need to take filter into account\r\n    if (filterNull === void 0) { filterNull = {}; }\r\n    var stat = stats[fieldDef.field];\r\n    var type = fieldDef.type;\r\n    if (fieldDef.bin) {\r\n        var bin = fieldDef.bin;\r\n        var maxbins = (typeof bin === 'boolean') ? bin_1.MAXBINS_DEFAULT : bin.maxbins;\r\n        var bins = util.getbins(stat, maxbins);\r\n        return (bins.stop - bins.start) / bins.step;\r\n    }\r\n    if (fieldDef.type === type_1.TEMPORAL) {\r\n        var cardinality = time.cardinality(fieldDef, stats, filterNull, type);\r\n        if (cardinality !== null)\r\n            return cardinality;\r\n    }\r\n    if (fieldDef.aggregate) {\r\n        return 1;\r\n    }\r\n    return stat.distinct -\r\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\r\n}\r\nexports.cardinality = cardinality;\r\n},{\"./bin\":16,\"./compiler/time\":30,\"./type\":50,\"./util\":51}],34:[function(require,module,exports){\nexports.AREA = 'area';\r\nexports.BAR = 'bar';\r\nexports.LINE = 'line';\r\nexports.POINT = 'point';\r\nexports.TEXT = 'text';\r\nexports.TICK = 'tick';\r\n},{}],35:[function(require,module,exports){\nexports.axis = {\r\n    type: 'object',\r\n    properties: {\r\n        format: {\r\n            type: 'string',\r\n            default: undefined,\r\n            description: 'The formatting pattern for axis labels. ' +\r\n                'If not undefined, this will be determined by ' +\r\n                'the max value ' +\r\n                'of the field.'\r\n        },\r\n        grid: {\r\n            type: 'boolean',\r\n            default: undefined,\r\n            description: 'A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.'\r\n        },\r\n        layer: {\r\n            type: 'string',\r\n            default: undefined,\r\n            description: 'A string indicating if the axis (and any gridlines) should be placed above or below the data marks.'\r\n        },\r\n        orient: {\r\n            type: 'string',\r\n            default: undefined,\r\n            enum: ['top', 'right', 'left', 'bottom'],\r\n            description: 'The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).'\r\n        },\r\n        ticks: {\r\n            type: 'integer',\r\n            default: undefined,\r\n            minimum: 0,\r\n            description: 'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale\\'s range.'\r\n        },\r\n        title: {\r\n            type: 'string',\r\n            default: undefined,\r\n            description: 'A title for the axis. (Shows field name and its function by default.)'\r\n        },\r\n        labelMaxLength: {\r\n            type: 'integer',\r\n            default: 25,\r\n            minimum: 0,\r\n            description: 'Truncate labels that are too long.'\r\n        },\r\n        titleMaxLength: {\r\n            type: 'integer',\r\n            default: undefined,\r\n            minimum: 0,\r\n            description: 'Max length for axis title if the title is automatically generated from the field\\'s description'\r\n        },\r\n        titleOffset: {\r\n            type: 'integer',\r\n            default: undefined,\r\n            description: 'A title offset value for the axis.'\r\n        },\r\n        properties: {\r\n            type: 'object',\r\n            default: undefined,\r\n            description: 'Optional mark property definitions for custom axis styling.'\r\n        }\r\n    }\r\n};\r\n},{}],36:[function(require,module,exports){\nvar bin_1 = require('../bin');\r\nvar type_1 = require('../type');\r\nvar util_1 = require('../util');\r\nexports.bin = {\r\n    type: ['boolean', 'object'],\r\n    default: false,\r\n    properties: {\r\n        maxbins: {\r\n            type: 'integer',\r\n            default: bin_1.MAXBINS_DEFAULT,\r\n            minimum: 2,\r\n            description: 'Maximum number of bins.'\r\n        }\r\n    },\r\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE])\r\n};\r\n},{\"../bin\":16,\"../type\":50,\"../util\":51}],37:[function(require,module,exports){\n// TODO: add interface Config\r\nexports.config = {\r\n    type: 'object',\r\n    properties: {\r\n        width: {\r\n            type: 'integer',\r\n            default: undefined\r\n        },\r\n        height: {\r\n            type: 'integer',\r\n            default: undefined\r\n        },\r\n        viewport: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'integer'\r\n            },\r\n            default: undefined\r\n        },\r\n        gridColor: {\r\n            type: 'string',\r\n            role: 'color',\r\n            default: '#000000'\r\n        },\r\n        gridOpacity: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 1,\r\n            default: 0.08\r\n        },\r\n        filterNull: {\r\n            type: 'object',\r\n            properties: {\r\n                nominal: { type: 'boolean', default: false },\r\n                ordinal: { type: 'boolean', default: false },\r\n                quantitative: { type: 'boolean', default: true },\r\n                temporal: { type: 'boolean', default: true }\r\n            }\r\n        },\r\n        autoSortLine: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        singleHeight: {\r\n            type: 'integer',\r\n            default: 200,\r\n            minimum: 0\r\n        },\r\n        singleWidth: {\r\n            type: 'integer',\r\n            default: 200,\r\n            minimum: 0\r\n        },\r\n        largeBandWidth: {\r\n            type: 'integer',\r\n            default: 21,\r\n            minimum: 0\r\n        },\r\n        smallBandWidth: {\r\n            type: 'integer',\r\n            default: 12,\r\n            minimum: 0\r\n        },\r\n        largeBandMaxCardinality: {\r\n            type: 'integer',\r\n            default: 10\r\n        },\r\n        padding: {\r\n            type: 'number',\r\n            default: 1,\r\n            description: 'default scale padding for ordinal x/y scales.'\r\n        },\r\n        cellPadding: {\r\n            type: 'number',\r\n            default: 0.1,\r\n            description: 'default scale padding for row/column scales.'\r\n        },\r\n        cellGridColor: {\r\n            type: 'string',\r\n            role: 'color',\r\n            default: '#000000'\r\n        },\r\n        cellGridOpacity: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 1,\r\n            default: 0.25\r\n        },\r\n        cellGridOffset: {\r\n            type: 'number',\r\n            default: 6\r\n        },\r\n        cellBackgroundColor: {\r\n            type: 'string',\r\n            role: 'color',\r\n            default: 'rgba(0,0,0,0)'\r\n        },\r\n        textCellWidth: {\r\n            type: 'integer',\r\n            default: 90,\r\n            minimum: 0\r\n        },\r\n        stack: {\r\n            type: ['boolean', 'object'],\r\n            default: {},\r\n            description: 'Enable stacking (for bar and area marks only).',\r\n            properties: {\r\n                sort: {\r\n                    oneOf: [{\r\n                            type: 'string',\r\n                            enum: ['ascending', 'descending']\r\n                        }, {\r\n                            type: 'array',\r\n                            items: { type: 'string' },\r\n                        }],\r\n                    description: 'Order of the stack. ' +\r\n                        'This can be either a string (either \"descending\" or \"ascending\")' +\r\n                        'or a list of fields to determine the order of stack layers.' +\r\n                        'By default, stack uses descending order.'\r\n                },\r\n                offset: {\r\n                    type: 'string',\r\n                    enum: ['zero', 'center', 'normalize']\r\n                }\r\n            }\r\n        },\r\n        strokeWidth: {\r\n            type: 'integer',\r\n            default: 2,\r\n            minimum: 0\r\n        },\r\n        singleBarOffset: {\r\n            type: 'integer',\r\n            default: 5,\r\n            minimum: 0\r\n        },\r\n        timeScaleLabelLength: {\r\n            type: 'integer',\r\n            default: 3,\r\n            minimum: 0,\r\n            description: 'Max length for values in dayScaleLabel and monthScaleLabel.  Zero means using full names in dayScaleLabel/monthScaleLabel.'\r\n        },\r\n        dayScaleLabel: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            },\r\n            default: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n            description: 'Axis labels for day of week, starting from Sunday.' +\r\n                '(Consistent with Javascript -- See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay.'\r\n        },\r\n        monthScaleLabel: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            },\r\n            default: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n            description: 'Axis labels for month.'\r\n        },\r\n        characterWidth: {\r\n            type: 'integer',\r\n            default: 6\r\n        },\r\n        numberFormat: {\r\n            type: 'string',\r\n            default: 's',\r\n            description: 'D3 Number format for axis labels and text tables.'\r\n        },\r\n        timeFormat: {\r\n            type: 'string',\r\n            default: '%Y-%m-%d',\r\n            description: 'Date format for axis labels.'\r\n        },\r\n        useRawDomain: {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: 'Use the source data range as scale domain instead of ' +\r\n                'aggregated data for aggregate axis. ' +\r\n                'This option does not work with sum or count aggregate' +\r\n                'as they might have a substantially larger scale range.' +\r\n                'By default, use value from config.useRawDomain.'\r\n        }\r\n    }\r\n};\r\n},{}],38:[function(require,module,exports){\nexports.data = {\r\n    type: 'object',\r\n    properties: {\r\n        formatType: {\r\n            type: 'string',\r\n            enum: ['json', 'csv', 'tsv'],\r\n            default: 'json'\r\n        },\r\n        url: {\r\n            type: 'string',\r\n            default: undefined\r\n        },\r\n        values: {\r\n            type: 'array',\r\n            default: undefined,\r\n            description: 'Pass array of objects instead of a url to a file.',\r\n            items: {\r\n                type: 'object',\r\n                additionalProperties: true\r\n            }\r\n        },\r\n        filter: {\r\n            type: 'string',\r\n            default: undefined,\r\n            description: 'A string containing the filter Vega expression. Use `datum` to refer to the current data object.'\r\n        },\r\n        calculate: {\r\n            type: 'array',\r\n            default: undefined,\r\n            description: 'Calculate new field(s) using the provided expresssion(s). Calculation are applied before filter.',\r\n            items: {\r\n                type: 'object',\r\n                properties: {\r\n                    field: {\r\n                        type: 'string',\r\n                        description: 'The field in which to store the computed formula value.'\r\n                    },\r\n                    expr: {\r\n                        type: 'string',\r\n                        description: 'A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object.'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n},{}],39:[function(require,module,exports){\n/// <reference path=\"../../typings/colorbrewer.d.ts\"/>\r\nvar colorbrewer = require('colorbrewer');\r\nvar schemautil_1 = require('./schemautil');\r\nvar util_1 = require('../util');\r\nvar vlUtil = require('../util');\r\nvar axis_schema_1 = require('./axis.schema');\r\nvar legend_schema_1 = require('./legend.schema');\r\nvar sort_schema_1 = require('./sort.schema');\r\nvar fielddef_schema_1 = require('./fielddef.schema');\r\nvar requiredNameType = {\r\n    required: ['field', 'type']\r\n};\r\nvar x = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.typicalField), requiredNameType, {\r\n    supportedMarktypes: { point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true },\r\n    properties: {\r\n        axis: axis_schema_1.axis,\r\n        sort: sort_schema_1.sort\r\n    }\r\n});\r\nvar y = util_1.duplicate(x);\r\nvar facet = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.onlyOrdinalField), requiredNameType, {\r\n    supportedMarktypes: { point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true },\r\n    properties: {\r\n        axis: axis_schema_1.axis,\r\n        sort: sort_schema_1.sort\r\n    }\r\n});\r\nvar row = schemautil_1.merge(util_1.duplicate(facet), {\r\n    properties: {\r\n        height: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            default: 150\r\n        }\r\n    }\r\n});\r\nvar column = schemautil_1.merge(util_1.duplicate(facet), {\r\n    properties: {\r\n        width: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            default: 150\r\n        }\r\n    }\r\n});\r\nvar size = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.typicalField), {\r\n    supportedMarktypes: { point: true, bar: true, circle: true, square: true, text: true },\r\n    properties: {\r\n        legend: legend_schema_1.legend,\r\n        sort: sort_schema_1.sort,\r\n        value: {\r\n            type: 'integer',\r\n            default: 30,\r\n            minimum: 0,\r\n            description: 'Size of marks.'\r\n        }\r\n    }\r\n});\r\nvar color = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.typicalField), {\r\n    supportedMarktypes: { point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true },\r\n    properties: {\r\n        legend: legend_schema_1.legend,\r\n        sort: sort_schema_1.sort,\r\n        value: {\r\n            type: 'string',\r\n            role: 'color',\r\n            default: '#4682b4',\r\n            description: 'Color to be used for marks.'\r\n        },\r\n        opacity: {\r\n            type: 'number',\r\n            default: undefined,\r\n            minimum: 0,\r\n            maximum: 1\r\n        },\r\n        scale: {\r\n            type: 'object',\r\n            properties: {\r\n                range: {\r\n                    type: ['string', 'array'],\r\n                    default: undefined,\r\n                    description: 'Color palette, if undefined vega-lite will use data property' +\r\n                        'to pick one from c10palette, c20palette, or ordinalPalette.'\r\n                },\r\n                c10palette: {\r\n                    type: 'string',\r\n                    default: 'category10',\r\n                    enum: [\r\n                        'category10', 'category10k',\r\n                        'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\r\n                    ]\r\n                },\r\n                c20palette: {\r\n                    type: 'string',\r\n                    default: 'category20',\r\n                    enum: ['category20', 'category20b', 'category20c']\r\n                },\r\n                ordinalPalette: {\r\n                    type: 'string',\r\n                    default: undefined,\r\n                    description: 'Color palette to encode ordinal variables.',\r\n                    enum: vlUtil.keys(colorbrewer)\r\n                },\r\n                quantitativeRange: {\r\n                    type: 'array',\r\n                    default: ['#AFC6A3', '#09622A'],\r\n                    description: 'Color range to encode quantitative variables.',\r\n                    minItems: 2,\r\n                    maxItems: 2,\r\n                    items: {\r\n                        type: 'string',\r\n                        role: 'color'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nvar shape = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.onlyOrdinalField), {\r\n    supportedMarktypes: { point: true, circle: true, square: true },\r\n    properties: {\r\n        legend: legend_schema_1.legend,\r\n        sort: sort_schema_1.sort,\r\n        value: {\r\n            type: 'string',\r\n            enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\r\n            default: 'circle',\r\n            description: 'Mark to be used.'\r\n        },\r\n        filled: {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: 'Whether the shape\\'s color should be used as fill color instead of stroke color.'\r\n        }\r\n    }\r\n});\r\nvar detail = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.onlyOrdinalField), {\r\n    supportedMarktypes: { point: true, tick: true, line: true, circle: true, square: true },\r\n    properties: {\r\n        sort: sort_schema_1.sort\r\n    }\r\n});\r\nvar text = schemautil_1.merge(util_1.duplicate(fielddef_schema_1.typicalField), {\r\n    supportedMarktypes: { 'text': true },\r\n    properties: {\r\n        sort: sort_schema_1.sort,\r\n        align: {\r\n            type: 'string',\r\n            default: 'right'\r\n        },\r\n        baseline: {\r\n            type: 'string',\r\n            default: 'middle'\r\n        },\r\n        color: {\r\n            type: 'string',\r\n            role: 'color',\r\n            default: '#000000'\r\n        },\r\n        margin: {\r\n            type: 'integer',\r\n            default: 4,\r\n            minimum: 0\r\n        },\r\n        placeholder: {\r\n            type: 'string',\r\n            default: 'Abc'\r\n        },\r\n        font: {\r\n            type: 'object',\r\n            properties: {\r\n                weight: {\r\n                    type: 'string',\r\n                    enum: ['normal', 'bold'],\r\n                    default: 'normal'\r\n                },\r\n                size: {\r\n                    type: 'integer',\r\n                    default: 10,\r\n                    minimum: 0\r\n                },\r\n                family: {\r\n                    type: 'string',\r\n                    default: 'Helvetica Neue'\r\n                },\r\n                style: {\r\n                    type: 'string',\r\n                    default: 'normal',\r\n                    enum: ['normal', 'italic']\r\n                }\r\n            }\r\n        },\r\n        format: {\r\n            type: 'string',\r\n            default: '',\r\n            description: 'The formatting pattern for text value.' +\r\n                'If not defined, this will be determined automatically'\r\n        },\r\n    }\r\n});\r\nexports.encoding = {\r\n    type: 'object',\r\n    properties: {\r\n        x: x,\r\n        y: y,\r\n        row: row,\r\n        column: column,\r\n        size: size,\r\n        color: color,\r\n        shape: shape,\r\n        text: text,\r\n        detail: detail\r\n    }\r\n};\r\n},{\"../util\":51,\"./axis.schema\":35,\"./fielddef.schema\":40,\"./legend.schema\":41,\"./schemautil\":45,\"./sort.schema\":46,\"colorbrewer\":3}],40:[function(require,module,exports){\nvar bin_schema_1 = require('./bin.schema');\r\nvar scale_schema_1 = require('./scale.schema');\r\nvar aggregate_1 = require('../aggregate');\r\nvar util_1 = require('../util');\r\nvar schemautil_1 = require('./schemautil');\r\nvar timeunit_1 = require('../timeunit');\r\nvar type_1 = require('../type');\r\nexports.fieldDef = {\r\n    type: 'object',\r\n    properties: {\r\n        field: {\r\n            type: 'string'\r\n        },\r\n        type: {\r\n            type: 'string',\r\n            enum: [type_1.NOMINAL, type_1.ORDINAL, type_1.QUANTITATIVE, type_1.TEMPORAL]\r\n        },\r\n        timeUnit: {\r\n            type: 'string',\r\n            enum: timeunit_1.TIMEUNITS,\r\n            supportedTypes: util_1.toMap([type_1.TEMPORAL])\r\n        },\r\n        bin: bin_schema_1.bin,\r\n    }\r\n};\r\nexports.aggregate = {\r\n    type: 'string',\r\n    enum: aggregate_1.AGGREGATE_OPS,\r\n    supportedEnums: {\r\n        quantitative: aggregate_1.AGGREGATE_OPS,\r\n        ordinal: ['median', 'min', 'max'],\r\n        nominal: [],\r\n        temporal: ['mean', 'median', 'min', 'max'],\r\n        '': ['count']\r\n    },\r\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.NOMINAL, type_1.ORDINAL, type_1.TEMPORAL, ''])\r\n};\r\nexports.typicalField = schemautil_1.merge(util_1.duplicate(exports.fieldDef), {\r\n    properties: {\r\n        aggregate: exports.aggregate,\r\n        scale: scale_schema_1.typicalScale\r\n    }\r\n});\r\nexports.onlyOrdinalField = schemautil_1.merge(util_1.duplicate(exports.fieldDef), {\r\n    properties: {\r\n        aggregate: {\r\n            type: 'string',\r\n            enum: ['count'],\r\n            supportedTypes: util_1.toMap([type_1.NOMINAL, type_1.ORDINAL])\r\n        },\r\n        scale: scale_schema_1.ordinalOnlyScale\r\n    }\r\n});\r\n},{\"../aggregate\":15,\"../timeunit\":49,\"../type\":50,\"../util\":51,\"./bin.schema\":36,\"./scale.schema\":43,\"./schemautil\":45}],41:[function(require,module,exports){\nexports.legend = {\r\n    default: true,\r\n    description: 'Properties of a legend or boolean flag for determining whether to show it.',\r\n    oneOf: [{\r\n            type: 'object',\r\n            properties: {\r\n                orient: {\r\n                    type: 'string',\r\n                    default: undefined,\r\n                    description: 'The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".'\r\n                },\r\n                title: {\r\n                    type: 'string',\r\n                    default: undefined,\r\n                    description: 'A title for the legend. (Shows field name and its function by default.)'\r\n                },\r\n                format: {\r\n                    type: 'string',\r\n                    default: undefined,\r\n                    description: 'An optional formatting pattern for legend labels. Vega uses D3\\'s format pattern.'\r\n                },\r\n                values: {\r\n                    type: 'array',\r\n                    default: undefined,\r\n                    description: 'Explicitly set the visible legend values.'\r\n                },\r\n                properties: {\r\n                    type: 'object',\r\n                    default: undefined,\r\n                    description: 'Optional mark property definitions for custom legend styling. '\r\n                }\r\n            }\r\n        }, {\r\n            type: 'boolean'\r\n        }]\r\n};\r\n},{}],42:[function(require,module,exports){\nexports.marktype = {\r\n    type: 'string',\r\n    enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\r\n};\r\n},{}],43:[function(require,module,exports){\nvar util_1 = require('../util');\r\nvar schemautil_1 = require('./schemautil');\r\nvar type_1 = require('../type');\r\nvar scale = {\r\n    type: 'object',\r\n    properties: {\r\n        type: {\r\n            type: 'string',\r\n            enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\r\n            default: 'linear',\r\n            supportedTypes: util_1.toMap([type_1.QUANTITATIVE])\r\n        },\r\n        domain: {\r\n            default: undefined,\r\n            type: ['array', 'object'],\r\n            description: 'The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source.'\r\n        },\r\n        range: {\r\n            default: undefined,\r\n            type: ['array', 'object'],\r\n            description: 'The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set.'\r\n        },\r\n        round: {\r\n            default: undefined,\r\n            type: 'boolean',\r\n            description: 'If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.'\r\n        }\r\n    }\r\n};\r\nvar ordinalScaleMixin = {\r\n    properties: {\r\n        bandWidth: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n            default: undefined\r\n        },\r\n        outerPadding: {\r\n            type: 'number',\r\n            default: undefined\r\n        },\r\n        padding: {\r\n            type: 'number',\r\n            default: undefined,\r\n            description: 'Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).'\r\n        },\r\n        points: {\r\n            type: 'boolean',\r\n            default: undefined,\r\n            description: 'If true, distributes the ordinal values over a quantitative range at uniformly spaced points. The spacing of the points can be adjusted using the padding property. If false, the ordinal scale will construct evenly-spaced bands, rather than points.'\r\n        }\r\n    }\r\n};\r\nvar typicalScaleMixin = {\r\n    properties: {\r\n        clamp: {\r\n            type: 'boolean',\r\n            default: true,\r\n            description: 'If true, values that exceed the data domain are clamped to either the minimum or maximum range value'\r\n        },\r\n        nice: {\r\n            default: undefined,\r\n            oneOf: [\r\n                {\r\n                    type: 'boolean',\r\n                    description: 'If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96).'\r\n                }, {\r\n                    type: 'string',\r\n                    enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\r\n                    description: 'If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\".'\r\n                }\r\n            ],\r\n            supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.TEMPORAL]),\r\n            description: ''\r\n        },\r\n        exponent: {\r\n            type: 'number',\r\n            default: undefined,\r\n            description: 'Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored.'\r\n        },\r\n        zero: {\r\n            type: 'boolean',\r\n            description: 'If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.',\r\n            default: undefined,\r\n            supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.TEMPORAL])\r\n        },\r\n        useRawDomain: {\r\n            type: 'boolean',\r\n            default: undefined,\r\n            description: 'Uses the source data range as scale domain instead of ' +\r\n                'aggregated data for aggregate axis. ' +\r\n                'This option does not work with sum or count aggregate' +\r\n                'as they might have a substantially larger scale range.' +\r\n                'By default, use value from config.useRawDomain.'\r\n        }\r\n    }\r\n};\r\nexports.ordinalOnlyScale = schemautil_1.merge(util_1.duplicate(scale), ordinalScaleMixin);\r\nexports.typicalScale = schemautil_1.merge(util_1.duplicate(scale), ordinalScaleMixin, typicalScaleMixin);\r\n},{\"../type\":50,\"../util\":51,\"./schemautil\":45}],44:[function(require,module,exports){\n// Package of defining Vega-lite Specification's json schema\r\n/// <reference path=\"../../typings/vega.d.ts\"/>\r\nvar schemaUtil = require('./schemautil');\r\nvar marktype_schema_1 = require('./marktype.schema');\r\nvar config_schema_1 = require('./config.schema');\r\nvar data_schema_1 = require('./data.schema');\r\nvar encoding_schema_1 = require('./encoding.schema');\r\nvar fielddef_schema_1 = require('./fielddef.schema');\r\nexports.aggregate = fielddef_schema_1.aggregate;\r\nexports.util = schemaUtil;\r\nexports.schema = {\r\n    $schema: 'http://json-schema.org/draft-04/schema#',\r\n    description: 'Schema for Vega-lite specification',\r\n    type: 'object',\r\n    required: ['marktype', 'encoding'],\r\n    properties: {\r\n        data: data_schema_1.data,\r\n        marktype: marktype_schema_1.marktype,\r\n        encoding: encoding_schema_1.encoding,\r\n        config: config_schema_1.config\r\n    }\r\n};\r\nfunction instantiate() {\r\n    return schemaUtil.instantiate(exports.schema);\r\n}\r\nexports.instantiate = instantiate;\r\n;\r\n},{\"./config.schema\":37,\"./data.schema\":38,\"./encoding.schema\":39,\"./fielddef.schema\":40,\"./marktype.schema\":42,\"./schemautil\":45}],45:[function(require,module,exports){\nvar util = require('../util');\r\nfunction isEmpty(obj) {\r\n    return Object.keys(obj).length === 0;\r\n}\r\n;\r\nfunction extend(instance, schema) {\r\n    return merge(instantiate(schema), instance);\r\n}\r\nexports.extend = extend;\r\n;\r\nfunction instantiate(schema) {\r\n    var val;\r\n    if (schema === undefined) {\r\n        return undefined;\r\n    }\r\n    else if ('default' in schema) {\r\n        val = schema.default;\r\n        return util.isObject(val) ? util.duplicate(val) : val;\r\n    }\r\n    else if (schema.type === 'object') {\r\n        var instance = {};\r\n        for (var name in schema.properties) {\r\n            val = instantiate(schema.properties[name]);\r\n            if (val !== undefined) {\r\n                instance[name] = val;\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    else if (schema.type === 'array') {\r\n        return undefined;\r\n    }\r\n    return undefined;\r\n}\r\nexports.instantiate = instantiate;\r\n;\r\nfunction subtract(instance, defaults) {\r\n    var changes = {};\r\n    for (var prop in instance) {\r\n        var def = defaults[prop];\r\n        var ins = instance[prop];\r\n        if (!defaults || def !== ins) {\r\n            if (typeof ins === 'object' && !util.isArray(ins) && def) {\r\n                var c = subtract(ins, def);\r\n                if (!isEmpty(c)) {\r\n                    changes[prop] = c;\r\n                }\r\n            }\r\n            else if (util.isArray(ins)) {\r\n                if (util.isArray(def)) {\r\n                    if (ins.length === def.length) {\r\n                        var equal = true;\r\n                        for (var i = 0; i < ins.length; i++) {\r\n                            if (ins[i] !== def[i]) {\r\n                                equal = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (equal) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                changes[prop] = ins;\r\n            }\r\n            else {\r\n                changes[prop] = ins;\r\n            }\r\n        }\r\n    }\r\n    return changes;\r\n}\r\nexports.subtract = subtract;\r\n;\r\nfunction merge(dest) {\r\n    var src = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        src[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < src.length; i++) {\r\n        dest = merge_(dest, src[i]);\r\n    }\r\n    return dest;\r\n}\r\nexports.merge = merge;\r\n;\r\nfunction merge_(dest, src) {\r\n    if (typeof src !== 'object' || src === null) {\r\n        return dest;\r\n    }\r\n    for (var p in src) {\r\n        if (!src.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (src[p] === undefined) {\r\n            continue;\r\n        }\r\n        if (typeof src[p] !== 'object' || src[p] === null) {\r\n            dest[p] = src[p];\r\n        }\r\n        else if (typeof dest[p] !== 'object' || dest[p] === null) {\r\n            dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\r\n        }\r\n        else {\r\n            merge(dest[p], src[p]);\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n},{\"../util\":51}],46:[function(require,module,exports){\nvar aggregate_1 = require('../aggregate');\r\nvar type_1 = require('../type');\r\nvar util_1 = require('../util');\r\nexports.sort = {\r\n    default: 'ascending',\r\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.ORDINAL]),\r\n    oneOf: [\r\n        {\r\n            type: 'string',\r\n            enum: ['ascending', 'descending', 'unsorted']\r\n        },\r\n        {\r\n            type: 'object',\r\n            required: ['field', 'op'],\r\n            properties: {\r\n                field: {\r\n                    type: 'string',\r\n                    description: 'The field name to aggregate over.'\r\n                },\r\n                op: {\r\n                    type: 'string',\r\n                    enum: aggregate_1.AGGREGATE_OPS,\r\n                    description: 'The field name to aggregate over.'\r\n                },\r\n                order: {\r\n                    type: 'string',\r\n                    enum: ['ascending', 'descending']\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n},{\"../aggregate\":15,\"../type\":50,\"../util\":51}],47:[function(require,module,exports){\n/** module for shorthand */\r\nvar aggregate_1 = require('./aggregate');\r\nvar timeunit_1 = require('./timeunit');\r\nvar type_1 = require('./type');\r\nvar vlEncoding = require('./encoding');\r\nexports.DELIM = '|';\r\nexports.ASSIGN = '=';\r\nexports.TYPE = ',';\r\nexports.FUNC = '_';\r\nfunction shorten(spec) {\r\n    return 'mark' + exports.ASSIGN + spec.marktype +\r\n        exports.DELIM + shortenEncoding(spec.encoding);\r\n}\r\nexports.shorten = shorten;\r\nfunction parse(shorthand, data, config) {\r\n    var split = shorthand.split(exports.DELIM), marktype = split.shift().split(exports.ASSIGN)[1].trim(), encoding = parseEncoding(split.join(exports.DELIM));\r\n    var spec = {\r\n        marktype: marktype,\r\n        encoding: encoding\r\n    };\r\n    if (data !== undefined) {\r\n        spec.data = data;\r\n    }\r\n    if (config !== undefined) {\r\n        spec.config = config;\r\n    }\r\n    return spec;\r\n}\r\nexports.parse = parse;\r\nfunction shortenEncoding(encoding) {\r\n    return vlEncoding.map(encoding, function (fieldDef, channel) {\r\n        return channel + exports.ASSIGN + shortenFieldDef(fieldDef);\r\n    }).join(exports.DELIM);\r\n}\r\nexports.shortenEncoding = shortenEncoding;\r\nfunction parseEncoding(encodingShorthand) {\r\n    return encodingShorthand.split(exports.DELIM).reduce(function (m, e) {\r\n        var split = e.split(exports.ASSIGN), enctype = split[0].trim(), fieldDefShorthand = split[1];\r\n        m[enctype] = parseFieldDef(fieldDefShorthand);\r\n        return m;\r\n    }, {});\r\n}\r\nexports.parseEncoding = parseEncoding;\r\nfunction shortenFieldDef(fieldDef) {\r\n    return (fieldDef.aggregate ? fieldDef.aggregate + exports.FUNC : '') +\r\n        (fieldDef.timeUnit ? fieldDef.timeUnit + exports.FUNC : '') +\r\n        (fieldDef.bin ? 'bin' + exports.FUNC : '') +\r\n        (fieldDef.field || '') + exports.TYPE + type_1.SHORT_TYPE[fieldDef.type];\r\n}\r\nexports.shortenFieldDef = shortenFieldDef;\r\nfunction shortenFieldDefs(fieldDefs, delim) {\r\n    if (delim === void 0) { delim = exports.DELIM; }\r\n    return fieldDefs.map(shortenFieldDef).join(delim);\r\n}\r\nexports.shortenFieldDefs = shortenFieldDefs;\r\nfunction parseFieldDef(fieldDefShorthand) {\r\n    var split = fieldDefShorthand.split(exports.TYPE), i;\r\n    var fieldDef = {\r\n        field: split[0].trim(),\r\n        type: type_1.TYPE_FROM_SHORT_TYPE[split[1].trim()]\r\n    };\r\n    for (i in aggregate_1.AGGREGATE_OPS) {\r\n        var a = aggregate_1.AGGREGATE_OPS[i];\r\n        if (fieldDef.field.indexOf(a + '_') === 0) {\r\n            fieldDef.field = fieldDef.field.substr(a.length + 1);\r\n            if (a === 'count' && fieldDef.field.length === 0)\r\n                fieldDef.field = '*';\r\n            fieldDef.aggregate = a;\r\n            break;\r\n        }\r\n    }\r\n    for (i in timeunit_1.TIMEUNITS) {\r\n        var tu = timeunit_1.TIMEUNITS[i];\r\n        if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\r\n            fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\r\n            fieldDef.timeUnit = tu;\r\n            break;\r\n        }\r\n    }\r\n    if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\r\n        fieldDef.field = fieldDef.field.substr(4);\r\n        fieldDef.bin = true;\r\n    }\r\n    return fieldDef;\r\n}\r\nexports.parseFieldDef = parseFieldDef;\r\n},{\"./aggregate\":15,\"./encoding\":32,\"./timeunit\":49,\"./type\":50}],48:[function(require,module,exports){\n/* Utilities for a Vega-Lite specificiation */\r\nvar vlEncoding = require('./encoding');\r\nvar util = require('./util');\r\nvar Model_1 = require('./compiler/Model');\r\nvar channel_1 = require('./channel');\r\nvar marktype_1 = require('./marktype');\r\nfunction alwaysNoOcclusion(spec) {\r\n    return vlEncoding.isAggregate(spec.encoding);\r\n}\r\nexports.alwaysNoOcclusion = alwaysNoOcclusion;\r\nfunction getCleanSpec(spec) {\r\n    return new Model_1.Model(spec).toSpec(true);\r\n}\r\nexports.getCleanSpec = getCleanSpec;\r\nfunction isStack(spec) {\r\n    return (spec.encoding[channel_1.COLOR].field || spec.encoding[channel_1.DETAIL].field) &&\r\n        (spec.marktype === marktype_1.BAR || spec.marktype === marktype_1.AREA) &&\r\n        (!spec.config || !spec.config.stack !== false) &&\r\n        vlEncoding.isAggregate(spec.encoding);\r\n}\r\nexports.isStack = isStack;\r\nfunction transpose(spec) {\r\n    var oldenc = spec.encoding, encoding = util.duplicate(spec.encoding);\r\n    encoding.x = oldenc.y;\r\n    encoding.y = oldenc.x;\r\n    encoding.row = oldenc.column;\r\n    encoding.column = oldenc.row;\r\n    spec.encoding = encoding;\r\n    return spec;\r\n}\r\nexports.transpose = transpose;\r\n},{\"./channel\":17,\"./compiler/Model\":18,\"./encoding\":32,\"./marktype\":34,\"./util\":51}],49:[function(require,module,exports){\nexports.TIMEUNITS = [\r\n    'year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'\r\n];\r\n},{}],50:[function(require,module,exports){\n/** Constants and utilities for data type */\r\nexports.QUANTITATIVE = 'quantitative';\r\nexports.ORDINAL = 'ordinal';\r\nexports.TEMPORAL = 'temporal';\r\nexports.NOMINAL = 'nominal';\r\nexports.SHORT_TYPE = {\r\n    quantitative: 'Q',\r\n    temporal: 'T',\r\n    nominal: 'N',\r\n    ordinal: 'O'\r\n};\r\nexports.TYPE_FROM_SHORT_TYPE = {\r\n    Q: exports.QUANTITATIVE,\r\n    T: exports.TEMPORAL,\r\n    O: exports.ORDINAL,\r\n    N: exports.NOMINAL\r\n};\r\nfunction getFullName(type) {\r\n    return exports.TYPE_FROM_SHORT_TYPE[type.toUpperCase()] ||\r\n        type.toLowerCase();\r\n}\r\nexports.getFullName = getFullName;\r\n},{}],51:[function(require,module,exports){\n/// <reference path=\"../typings/datalib.d.ts\"/>\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('datalib/src/util'));\r\n__export(require('datalib/src/generate'));\r\n__export(require('datalib/src/stats'));\r\nvar dlBin = require('datalib/src/bins/bins');\r\nexports.bin = dlBin;\r\nfunction roundFloat(x, digit) {\r\n    if (digit === void 0) { digit = 4; }\r\n    return +x.toFixed(digit);\r\n}\r\nexports.roundFloat = roundFloat;\r\nfunction forEach(obj, f, thisArg) {\r\n    if (obj.forEach) {\r\n        obj.forEach.call(thisArg, f);\r\n    }\r\n    else {\r\n        for (var k in obj) {\r\n            f.call(thisArg, obj[k], k, obj);\r\n        }\r\n    }\r\n}\r\nexports.forEach = forEach;\r\nfunction reduce(obj, f, init, thisArg) {\r\n    if (obj.reduce) {\r\n        return obj.reduce.call(thisArg, f, init);\r\n    }\r\n    else {\r\n        for (var k in obj) {\r\n            init = f.call(thisArg, init, obj[k], k, obj);\r\n        }\r\n        return init;\r\n    }\r\n}\r\nexports.reduce = reduce;\r\nfunction map(obj, f, thisArg) {\r\n    if (obj.map) {\r\n        return obj.map.call(thisArg, f);\r\n    }\r\n    else {\r\n        var output = [];\r\n        for (var k in obj) {\r\n            output.push(f.call(thisArg, obj[k], k, obj));\r\n        }\r\n        return output;\r\n    }\r\n}\r\nexports.map = map;\r\nfunction any(arr, f) {\r\n    var i = 0, k;\r\n    for (k in arr) {\r\n        if (f(arr[k], k, i++))\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\nexports.any = any;\r\nfunction all(arr, f) {\r\n    var i = 0, k;\r\n    for (k in arr) {\r\n        if (!f(arr[k], k, i++))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexports.all = all;\r\nfunction getbins(stats, maxbins) {\r\n    return dlBin({\r\n        min: stats.min,\r\n        max: stats.max,\r\n        maxbins: maxbins\r\n    });\r\n}\r\nexports.getbins = getbins;\r\nfunction setter(x, p, val, noaugment) {\r\n    if (noaugment === void 0) { noaugment = false; }\r\n    for (var i = 0; i < p.length - 1; ++i) {\r\n        if (!noaugment && !(p[i] in x)) {\r\n            x = x[p[i]] = {};\r\n        }\r\n        else {\r\n            x = x[p[i]];\r\n        }\r\n    }\r\n    x[p[i]] = val;\r\n}\r\nexports.setter = setter;\r\nfunction error(message) {\r\n    console.error('[VL Error]', message);\r\n}\r\nexports.error = error;\r\n},{\"datalib/src/bins/bins\":9,\"datalib/src/generate\":10,\"datalib/src/stats\":12,\"datalib/src/util\":14}],52:[function(require,module,exports){\nvar util_1 = require('./util');\r\nexports.DEFAULT_REQUIRED_CHANNEL_MAP = {\r\n    text: ['text'],\r\n    line: ['x', 'y'],\r\n    area: ['x', 'y']\r\n};\r\nexports.DEFAULT_SUPPORTED_CHANNEL_TYPE = {\r\n    bar: util_1.toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\r\n    line: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\r\n    area: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\r\n    tick: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\r\n    circle: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\r\n    square: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\r\n    point: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\r\n    text: util_1.toMap(['row', 'column', 'size', 'color', 'text'])\r\n};\r\nfunction getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {\r\n    if (requiredChannelMap === void 0) { requiredChannelMap = exports.DEFAULT_REQUIRED_CHANNEL_MAP; }\r\n    if (supportedChannelMap === void 0) { supportedChannelMap = exports.DEFAULT_SUPPORTED_CHANNEL_TYPE; }\r\n    var marktype = spec.marktype;\r\n    var encoding = spec.encoding;\r\n    var requiredChannels = requiredChannelMap[marktype];\r\n    var supportedChannels = supportedChannelMap[marktype];\r\n    for (var i in requiredChannels) {\r\n        if (!(requiredChannels[i] in encoding)) {\r\n            return 'Missing encoding channel \\\"' + requiredChannels[i] +\r\n                '\\\" for marktype \\\"' + marktype + '\\\"';\r\n        }\r\n    }\r\n    for (var channel in encoding) {\r\n        if (!supportedChannels[channel]) {\r\n            return 'Encoding channel \\\"' + channel +\r\n                '\\\" is not supported by mark type \\\"' + marktype + '\\\"';\r\n        }\r\n    }\r\n    if (marktype === 'bar' && !encoding.x && !encoding.y) {\r\n        return 'Missing both x and y for bar';\r\n    }\r\n    return null;\r\n}\r\nexports.getEncodingMappingError = getEncodingMappingError;\r\n},{\"./util\":51}],53:[function(require,module,exports){\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nvar vlBin = require('./bin');\r\nvar vlChannel = require('./channel');\r\nvar vlData = require('./data');\r\nvar vlEncoding = require('./encoding');\r\nvar vlFieldDef = require('./fielddef');\r\nvar vlCompiler = require('./compiler/compiler');\r\nvar vlSchema = require('./schema/schema');\r\nvar vlShorthand = require('./shorthand');\r\nvar vlSpec = require('./spec');\r\nvar vlTimeUnit = require('./timeunit');\r\nvar vlType = require('./type');\r\nvar vlValidate = require('./validate');\r\nvar d3_format_1 = require('d3-format');\r\n__export(require('./util'));\r\nexports.bin = vlBin;\r\nexports.channel = vlChannel;\r\nexports.compiler = vlCompiler;\r\nexports.compile = vlCompiler.compile;\r\nexports.data = vlData;\r\nexports.encoding = vlEncoding;\r\nexports.fieldDef = vlFieldDef;\r\nexports.schema = vlSchema;\r\nexports.shorthand = vlShorthand;\r\nexports.spec = vlSpec;\r\nexports.timeUnit = vlTimeUnit;\r\nexports.type = vlType;\r\nexports.format = d3_format_1.format;\r\nexports.validate = vlValidate;\r\nexports.version = '0.9.0';\r\n},{\"./bin\":16,\"./channel\":17,\"./compiler/compiler\":20,\"./data\":31,\"./encoding\":32,\"./fielddef\":33,\"./schema/schema\":44,\"./shorthand\":47,\"./spec\":48,\"./timeunit\":49,\"./type\":50,\"./util\":51,\"./validate\":52,\"d3-format\":5}]},{},[53])(53)\n});\n\n","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n","module.exports = require('./colorbrewer.js');\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-color', ['exports'], factory) :\n  factory((global.d3_color = {}));\n}(this, function (exports) { 'use strict';\n\n  function Color() {};\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  color.prototype = Color.prototype = {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : null;\n  };\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  var darker = .7;\n  var brighter = 1 / darker;\n\n  function rgb(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  };\n\n  function Rgb(r, g, b) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n  };\n\n  var prototype = rgb.prototype = Rgb.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  prototype.rgb = function() {\n    return this;\n  };\n\n  prototype.displayable = function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255);\n  };\n\n  prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  function format(r, g, b) {\n    return \"#\"\n        + (isNaN(r) ? \"00\" : (r = Math.round(r)) < 16 ? \"0\" + Math.max(0, r).toString(16) : Math.min(255, r).toString(16))\n        + (isNaN(g) ? \"00\" : (g = Math.round(g)) < 16 ? \"0\" + Math.max(0, g).toString(16) : Math.min(255, g).toString(16))\n        + (isNaN(b) ? \"00\" : (b = Math.round(b)) < 16 ? \"0\" + Math.max(0, b).toString(16) : Math.min(255, b).toString(16));\n  };\n\n  function hsl(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  };\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  };\n\n  var prototype$1 = hsl.prototype = Hsl.prototype = new Color;\n\n  prototype$1.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  prototype$1.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  prototype$1.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < .5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  prototype$1.displayable = function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1);\n  };\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var Kn = 18;\n\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function lab(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  };\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  };\n\n  var prototype$2 = lab.prototype = Lab.prototype = new Color;\n\n  prototype$2.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  prototype$2.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  prototype$2.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  function hcl(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  };\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  };\n\n  var prototype$3 = hcl.prototype = Hcl.prototype = new Color;\n\n  prototype$3.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  prototype$3.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  prototype$3.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelix(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  };\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  };\n\n  var prototype$4 = cubehelix.prototype = Cubehelix.prototype = new Color;\n\n  prototype$4.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype$4.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype$4.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n\n  function deltaHue(h1, h0) {\n    var delta = h1 - h0;\n    return delta > 180 || delta < -180\n        ? delta - 360 * Math.round(delta / 360)\n        : delta;\n  };\n\n  function interpolateCubehelixGamma(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  };\n\n  function interpolateCubehelixGammaLong(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : b.h - ah,\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  };\n\n  function interpolateRgb(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  };\n\n  function interpolateHsl(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHslLong(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateLab(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHcl(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  function interpolateHclLong(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  };\n\n  var interpolateCubehelix = interpolateCubehelixGamma(1);\n  var interpolateCubehelixLong = interpolateCubehelixGammaLong(1);\n\n  var version = \"0.2.8\";\n\n  exports.version = version;\n  exports.interpolateCubehelix = interpolateCubehelix;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateCubehelixGamma = interpolateCubehelixGamma;\n  exports.interpolateCubehelixGammaLong = interpolateCubehelixGammaLong;\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-format', ['exports'], factory) :\n  factory((global.d3_format = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  };\n\n  var svSe = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"SEK\"]\n  };\n\n  var ruRu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  };\n\n  var ptBr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  };\n\n  var plPl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  };\n\n  var nlNl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  };\n\n  var mkMk = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  };\n\n  var koKr = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₩\", \"\"]\n  };\n\n  var jaJp = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  };\n\n  var itIt = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  };\n\n  var huHu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Ft\"]\n  };\n\n  var heIl = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  };\n\n  var frFr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var frCa = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  };\n\n  var fiFi = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var esEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var enUs = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var enGb = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  };\n\n  var enCa = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var deDe = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var deCh = {\n    decimal: \",\",\n    thousands: \"'\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0CHF\"]\n  };\n\n  var caEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  };\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  };\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  };\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  };\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  };\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  };\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            var i = -1, n = value.length, c;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  };\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  };\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  };\n\n  function precisionRound(step, max) {\n    return Math.max(0, exponent(Math.abs(max)) - exponent(Math.abs(step))) + 1;\n  };\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-CH\": deCh,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"hu-HU\": huHu,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"ko-KR\": koKr,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"sv-SE\": svSe,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  var format = defaultLocale.format;\n  var formatPrefix = defaultLocale.formatPrefix;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  };\n\n  var version = \"0.3.6\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.formatPrefix = formatPrefix;\n  exports.localeFormat = localeFormat;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define('d3-time-format', ['exports', 'd3-time'], factory) :\n  factory((global.d3_time_format = {}),global.d3_time);\n}(this, function (exports,d3Time) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var svSe = {\n    dateTime: \"%A den %d %B %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"fm\", \"em\"],\n    days: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n    shortDays: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n    months: [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var koKr = {\n    dateTime: \"%Y/%m/%d %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"오전\", \"오후\"],\n    days: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n    shortDays: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n    months: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    shortMonths: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var huHu = {\n    dateTime: \"%Y. %B %-e., %A %X\",\n    date: \"%Y. %m. %d.\",\n    time: \"%H:%M:%S\",\n    periods: [\"de.\", \"du.\"], // unused\n    days: [\"vasárnap\", \"hétfő\", \"kedd\", \"szerda\", \"csütörtök\", \"péntek\", \"szombat\"],\n    shortDays: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n    months: [\"január\", \"február\", \"március\", \"április\", \"május\", \"június\", \"július\", \"augusztus\", \"szeptember\", \"október\", \"november\", \"december\"],\n    shortMonths: [\"jan.\", \"feb.\", \"már.\", \"ápr.\", \"máj.\", \"jún.\", \"júl.\", \"aug.\", \"szept.\", \"okt.\", \"nov.\", \"dec.\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var locale$1 = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var deCh = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup[string.slice(i, i += 2).toLowerCase()];\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  };\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    if (n) {\n      d.Z = n[1] ? 0              // 'Z' for UTC\n          : n[3] ? -(n[2] + n[3]) // sign differs from getTimezoneOffset!\n                 : -n[2] * 100;\n      return i + n[0].length;\n    }\n    return -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.day.count(d3Time.year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.sunday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.monday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : locale$1.utcFormat(isoSpecifier);\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-CH\": deCh,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": locale$1,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"hu-HU\": huHu,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"ko-KR\": koKr,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"sv-SE\": svSe,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(locale$1);\n  var format = defaultLocale.format;\n  var utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  };\n\n  var version = \"0.1.5\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.utcFormat = utcFormat;\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = formatIso;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.0.7\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));","var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, f);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance]\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n","var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n","var buffer = require('buffer'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports = {};\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (buffer.Buffer && buffer.Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\nu.$year   = u.$func('year', time.year.unit);\nu.$month  = u.$func('month', time.months.unit);\nu.$date   = u.$func('date', time.dates.unit);\nu.$day    = u.$func('day', time.weekdays.unit);\nu.$hour   = u.$func('hour', time.hours.unit);\nu.$minute = u.$func('minute', time.minutes.unit);\nu.$second = u.$func('second', time.seconds.unit);\n\nu.$utcYear   = u.$func('utcYear', utc.year.unit);\nu.$utcMonth  = u.$func('utcMonth', utc.months.unit);\nu.$utcDate   = u.$func('utcDate', utc.dates.unit);\nu.$utcDay    = u.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = u.$func('utcHour', utc.hours.unit);\nu.$utcMinute = u.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = u.$func('utcSecond', utc.seconds.unit);\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","export const AGGREGATE_OPS = [\r\n  'values', 'count', 'valid', 'missing', 'distinct',\r\n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\r\n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\r\n  'argmin', 'argmax'\r\n];\r\n\r\nexport const SHARED_DOMAIN_OPS = [\r\n  'mean', 'average', 'stdev', 'stdevp', 'median', 'q1', 'q3', 'min', 'max'\r\n];\r\n\r\n// TODO: move supportedTypes, supportedEnums from schema to here\r\n","export const MAXBINS_DEFAULT = 15;\r\n","/*\r\n * Constants and utilities for encoding channels (Visual variables)\r\n * such as 'x', 'y', 'color'.\r\n */\r\n\r\nexport const X = 'x';\r\nexport const Y = 'y';\r\nexport const ROW = 'row';\r\nexport const COLUMN = 'column';\r\nexport const SHAPE = 'shape';\r\nexport const SIZE = 'size';\r\nexport const COLOR = 'color';\r\nexport const TEXT = 'text';\r\nexport const DETAIL = 'detail';\r\n\r\nexport const CHANNELS = [X, Y, ROW, COLUMN, SIZE, SHAPE, COLOR, TEXT, DETAIL];\r\n\r\nexport type Channel = string;\r\n\r\ninterface SupportedRole {\r\n  [role:string]:boolean;\r\n};\r\n\r\n/**\r\n * Return whether a channel supports dimension / measure role\r\n * @param  {Enctype.Type}  channel\r\n * @return {SupportedRole} A dictionary mapping role to boolean values.\r\n */\r\nexport function getSupportedRole(channel: Channel): SupportedRole {\r\n  switch (channel) {\r\n    case X:\r\n    case Y:\r\n    case COLOR:\r\n      return {\r\n        measure: true,\r\n        dimension: true\r\n      };\r\n    case ROW:\r\n    case COLUMN:\r\n    case SHAPE:\r\n    case DETAIL:\r\n      return {\r\n        measure: false,\r\n        dimension: true\r\n      };\r\n    case SIZE:\r\n    case TEXT:\r\n      return {\r\n        measure: true,\r\n        dimension: false\r\n      };\r\n  }\r\n  throw new Error('Invalid encoding channel' + channel);\r\n}\r\n","import {Spec} from '../schema/schema';\r\nimport {Bin} from '../schema/bin.schema';\r\nimport {FieldDef} from '../schema/fielddef.schema';\r\n\r\nimport {MAXBINS_DEFAULT} from '../bin';\r\nimport {COLUMN, ROW, X, Y, COLOR, DETAIL, Channel} from '../channel';\r\nimport {SOURCE, SUMMARY} from '../data';\r\nimport * as vlFieldDef from '../fielddef';\r\nimport * as vlEncoding from '../encoding';\r\nimport {AREA, BAR} from '../marktype';\r\nimport * as schema from '../schema/schema';\r\nimport * as schemaUtil from '../schema/schemautil';\r\nimport {StackProperties} from './stack';\r\nimport {getFullName} from '../type';\r\nimport * as util from '../util';\r\n\r\n/**\r\n * Internal model of Vega-Lite specification for the compiler.\r\n */\r\n\r\nexport class Model {\r\n  _spec: Spec;\r\n  _stack: StackProperties;\r\n\r\n  // TODO: include _stack, _layout, _style, etc.\r\n\r\n  constructor(spec: Spec, theme?) {\r\n    var defaults = schema.instantiate();\r\n    this._spec = schemaUtil.merge(defaults, theme || {}, spec);\r\n    this._stack = this.getStackProperties();\r\n\r\n    // convert short type to full type\r\n    vlEncoding.forEach(this._spec.encoding, function(fieldDef) {\r\n      if (fieldDef.type) {\r\n        fieldDef.type = getFullName(fieldDef.type);\r\n      }\r\n    });\r\n\r\n    // calculate stack\r\n  }\r\n\r\n  private getStackProperties(): StackProperties {\r\n    var stack = (this.has(COLOR)) ? COLOR : (this.has(DETAIL)) ? DETAIL : null;\r\n\r\n    if (stack &&\r\n        (this.is(BAR) || this.is(AREA)) &&\r\n        this.config('stack') !== false &&\r\n        this.isAggregate()) {\r\n      var isXMeasure = this.isMeasure(X);\r\n      var isYMeasure = this.isMeasure(Y);\r\n\r\n      if (isXMeasure && !isYMeasure) {\r\n        return {\r\n          groupbyChannel: Y,\r\n          fieldChannel: X,\r\n          stackChannel: stack,\r\n          config: this.config('stack')\r\n        };\r\n      } else if (isYMeasure && !isXMeasure) {\r\n        return {\r\n          groupbyChannel: X,\r\n          fieldChannel: Y,\r\n          stackChannel: stack,\r\n          config: this.config('stack')\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  stack(): StackProperties {\r\n    return this._stack;\r\n  }\r\n\r\n  toSpec(excludeConfig?, excludeData?) {\r\n    var encoding = util.duplicate(this._spec.encoding),\r\n      spec: any;\r\n\r\n    spec = {\r\n      marktype: this._spec.marktype,\r\n      encoding: encoding\r\n    };\r\n\r\n    if (!excludeConfig) {\r\n      spec.config = util.duplicate(this._spec.config);\r\n    }\r\n\r\n    if (!excludeData) {\r\n      spec.data = util.duplicate(this._spec.data);\r\n    }\r\n\r\n    // remove defaults\r\n    var defaults = schema.instantiate();\r\n    return schemaUtil.subtract(spec, defaults);\r\n  }\r\n\r\n  marktype() {\r\n    return this._spec.marktype;\r\n  }\r\n\r\n  is(m) {\r\n    return this._spec.marktype === m;\r\n  }\r\n\r\n  has(channel: Channel) {\r\n    // equivalent to calling vlenc.has(this._spec.encoding, channel)\r\n    return this._spec.encoding[channel].field !== undefined;\r\n  }\r\n\r\n  fieldDef(channel: Channel) {\r\n    return this._spec.encoding[channel];\r\n  }\r\n\r\n  // get \"field\" reference for vega\r\n  fieldRef(channel: Channel, opt?) {\r\n    opt = opt || {};\r\n    return vlFieldDef.fieldRef(this._spec.encoding[channel], opt);\r\n  }\r\n\r\n  /*\r\n   * return key-value pairs of field name and list of fields of that field name\r\n   */\r\n  fields() {\r\n    return vlEncoding.fields(this._spec.encoding);\r\n  }\r\n\r\n  fieldTitle(channel: Channel) {\r\n    if (vlFieldDef.isCount(this._spec.encoding[channel])) {\r\n      return vlFieldDef.COUNT_DISPLAYNAME;\r\n    }\r\n    var fn = this._spec.encoding[channel].aggregate || this._spec.encoding[channel].timeUnit || (this._spec.encoding[channel].bin && 'bin');\r\n    if (fn) {\r\n      return fn.toUpperCase() + '(' + this._spec.encoding[channel].field + ')';\r\n    } else {\r\n      return this._spec.encoding[channel].field;\r\n    }\r\n  }\r\n\r\n  bandWidth(channel: Channel, useSmallBand?: boolean) {\r\n    if (this.fieldDef(channel).scale.bandWidth !== undefined) {\r\n      // explicit value\r\n      return this.fieldDef(channel).scale.bandWidth;\r\n    }\r\n\r\n    // If not specified, draw value from config.\r\n\r\n    useSmallBand = useSmallBand ||\r\n    //isBandInSmallMultiples\r\n    (channel === Y && this.has(ROW) && this.has(Y)) ||\r\n    (channel === X && this.has(COLUMN) && this.has(X));\r\n\r\n    return this.config(useSmallBand ? 'smallBandWidth' : 'largeBandWidth');\r\n  }\r\n\r\n  padding(channel: Channel) {\r\n    if (this.fieldDef(channel).scale.padding !== undefined) {\r\n      // explicit value\r\n      return this.fieldDef(channel).scale.padding;\r\n    }\r\n    if (channel === ROW || channel === COLUMN) {\r\n      return this.config('cellPadding');\r\n    }\r\n    return this.config('padding');\r\n  }\r\n\r\n  // returns false if binning is disabled, otherwise an object with binning properties\r\n  bin(channel: Channel): Bin | boolean {\r\n    var bin = this._spec.encoding[channel].bin;\r\n    if (bin === {})\r\n      return false;\r\n    if (bin === true)\r\n      return {\r\n        maxbins: MAXBINS_DEFAULT\r\n      };\r\n    return bin;\r\n  }\r\n\r\n  numberFormat = function(channel?: Channel) {\r\n    // TODO(#497): have different number format based on numberType (discrete/continuous)\r\n    return this.config('numberFormat');\r\n  };\r\n\r\n  map(f) {\r\n    return vlEncoding.map(this._spec.encoding, f);\r\n  }\r\n\r\n  reduce(f, init) {\r\n    return vlEncoding.reduce(this._spec.encoding, f, init);\r\n  }\r\n\r\n  forEach(f) {\r\n    return vlEncoding.forEach(this._spec.encoding, f);\r\n  }\r\n\r\n  isTypes(channel: Channel, type: Array<any>) {\r\n    var fieldDef = this.fieldDef(channel);\r\n    return fieldDef && vlFieldDef.isTypes(fieldDef, type);\r\n  }\r\n\r\n\r\n  isOrdinalScale(channel: Channel) {\r\n    return this.has(channel) &&\r\n      vlFieldDef.isOrdinalScale(this.fieldDef(channel));\r\n  }\r\n\r\n  isDimension(channel: Channel) {\r\n    return this.has(channel) &&\r\n      vlFieldDef.isDimension(this.fieldDef(channel));\r\n  }\r\n\r\n  isMeasure(channel: Channel) {\r\n    return this.has(channel) &&\r\n      vlFieldDef.isMeasure(this.fieldDef(channel));\r\n  }\r\n\r\n  isAggregate() {\r\n    return vlEncoding.isAggregate(this._spec.encoding);\r\n  }\r\n\r\n  dataTable() {\r\n    return this.isAggregate() ? SUMMARY : SOURCE;\r\n  }\r\n\r\n\r\n  details() {\r\n    var encoding = this;\r\n    return this.reduce(function(refs, fieldDef: FieldDef, channel: Channel) {\r\n      if (!fieldDef.aggregate && (channel !== X && channel !== Y)) {\r\n        refs.push(encoding.fieldRef(channel));\r\n      }\r\n      return refs;\r\n    }, []);\r\n  }\r\n\r\n  facets() {\r\n    var encoding = this;\r\n    return this.reduce(function(refs: string[], field: FieldDef, channel: Channel) {\r\n      if (!field.aggregate && (channel === ROW || channel === COLUMN)) {\r\n        refs.push(encoding.fieldRef(channel));\r\n      }\r\n      return refs;\r\n    }, []);\r\n  }\r\n\r\n  cardinality(channel: Channel, stats) {\r\n    return vlFieldDef.cardinality(this.fieldDef(channel), stats, this.config('filterNull'));\r\n  }\r\n\r\n  data() {\r\n    return this._spec.data;\r\n  }\r\n\r\n  // returns whether the encoding has values embedded\r\n  hasValues() {\r\n    var vals = this.data().values;\r\n    return vals && vals.length;\r\n  }\r\n\r\n  config(name: string) {\r\n    return this._spec.config[name];\r\n  }\r\n}\r\n","import {Model} from './Model';\r\nimport {roundFloat} from '../util';\r\nimport * as util from '../util';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\r\nimport {COLUMN, ROW, X, Y, Channel} from '../channel';\r\nimport * as time from './time';\r\n\r\n// https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#11-ambient-declarations\r\ndeclare var exports;\r\n\r\nexport function compileAxis(channel: Channel, model: Model, layout, stats) {\r\n  var isCol = channel === COLUMN,\r\n    isRow = channel === ROW,\r\n    type = isCol ? 'x' : isRow ? 'y': channel;\r\n\r\n  // TODO: rename def to axisDef and avoid side effects where possible.\r\n  // TODO: replace any with Vega Axis Interface\r\n  var def:any = {\r\n    type: type,\r\n    scale: channel\r\n  };\r\n\r\n  // 1. Add properties\r\n  [\r\n    // a) properties with special rules (so it has axis[property] methods) -- call rule functions\r\n    'format', 'grid', 'layer', 'offset', 'orient', 'tickSize', 'ticks', 'title', 'titleOffset',\r\n    // b) properties without rules, only produce default values in the schema, or explicit value if specified\r\n    'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'tickSizeEnd',\r\n    'values', 'subdivide'\r\n  ].forEach(function(property) {\r\n    let method: (model: Model, channel: Channel, layout:any, stats:any, def:any)=>any;\r\n\r\n    var value = (method = exports[property]) ?\r\n                  // calling axis.format, axis.grid, ...\r\n                  method(model, channel, layout, stats, def) :\r\n                  model.fieldDef(channel).axis[property];\r\n    if (value !== undefined) {\r\n      def[property] = value;\r\n    }\r\n  });\r\n\r\n  // 2) Add mark property definition groups\r\n  var props = model.fieldDef(channel).axis.properties || {};\r\n\r\n  [\r\n    'axis', 'grid', 'labels', 'title', // have special rules\r\n    'ticks', 'majorTicks', 'minorTicks' // only default values\r\n  ].forEach(function(group) {\r\n    var value = properties[group] ?\r\n      properties[group](model, channel, props[group], layout, def) :\r\n      props[group];\r\n    if (value !== undefined) {\r\n      def.properties = def.properties || {};\r\n      def.properties[group] = value;\r\n    }\r\n  });\r\n\r\n  return def;\r\n}\r\n\r\nexport function format(model: Model, channel: Channel) {\r\n  const fieldDef = model.fieldDef(channel);\r\n  var format = fieldDef.axis.format;\r\n  if (format !== undefined)  {\r\n    return format;\r\n  }\r\n\r\n  if (fieldDef.type === QUANTITATIVE) {\r\n    return model.numberFormat(channel);\r\n  } else if (fieldDef.type === TEMPORAL) {\r\n    const timeUnit = fieldDef.timeUnit;\r\n    if (!timeUnit) {\r\n      return model.config('timeFormat');\r\n    } else if (timeUnit === 'year') {\r\n      return 'd';\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function grid(model: Model, channel: Channel) {\r\n  var grid = model.fieldDef(channel).axis.grid;\r\n  if (grid !== undefined) {\r\n    return grid;\r\n  }\r\n\r\n  // If `grid` is unspecified, the default value is `true` for\r\n  // - ROW and COL.\r\n  // - X and Y that have (1) quantitative fields that are not binned or (2) time fields.\r\n  // Otherwise, the default value is `false`.\r\n  return channel === ROW || channel === COLUMN ||\r\n    (model.isTypes(channel, [QUANTITATIVE, TEMPORAL]) && !model.fieldDef(channel).bin);\r\n}\r\n\r\nexport function layer(model: Model, channel: Channel, layout, stats, def) {\r\n  var layer = model.fieldDef(channel).axis.layer;\r\n  if (layer !== undefined) {\r\n    return layer;\r\n  }\r\n  if (def.grid) {\r\n    // if grid is true, need to put layer on the back so that grid is behind marks\r\n    return 'back';\r\n  }\r\n  return undefined; // otherwise return undefined and use Vega's default.\r\n};\r\n\r\nexport function offset(model: Model, channel: Channel, layout) {\r\n  var offset = model.fieldDef(channel).axis.offset;\r\n  if (offset) {\r\n    return offset;\r\n  }\r\n\r\n  if(channel === ROW) {\r\n   return layout.y.axisTitleOffset + 20;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function orient(model: Model, channel: Channel, layout, stats) {\r\n  var orient = model.fieldDef(channel).axis.orient;\r\n  if (orient) {\r\n    return orient;\r\n  } else if (channel === COLUMN) {\r\n    return 'top';\r\n  } else if (channel === X && model.has(Y) && model.isOrdinalScale(Y) && model.cardinality(Y, stats) > 30) {\r\n    // FIXME remove this case and migrate this logic to vega-lite-ui\r\n    // x-axis for long y - put on top\r\n    return 'top';\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function ticks(model: Model, channel: Channel) {\r\n  var ticks = model.fieldDef(channel).axis.ticks;\r\n  if (ticks !== undefined) {\r\n    return ticks;\r\n  }\r\n\r\n  // FIXME depends on scale type too\r\n  if (channel === X && !model.fieldDef(channel).bin) {\r\n    return 5;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function tickSize(model: Model, channel: Channel) {\r\n  var tickSize = model.fieldDef(channel).axis.tickSize;\r\n  if (tickSize !== undefined) {\r\n    return tickSize;\r\n  }\r\n  if (channel === ROW || channel === COLUMN) {\r\n    return 0;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\nexport function title(model: Model, channel: Channel, layout) {\r\n  var axisSpec = model.fieldDef(channel).axis;\r\n  if (axisSpec.title !== undefined) {\r\n    return axisSpec.title;\r\n  }\r\n\r\n  // if not defined, automatically determine axis title from field def\r\n  var fieldTitle = model.fieldTitle(channel);\r\n\r\n  var maxLength;\r\n  if (axisSpec.titleMaxLength) {\r\n  maxLength = axisSpec.titleMaxLength;\r\n  } else if (channel === X) {\r\n    maxLength = layout.cellWidth / model.config('characterWidth');\r\n  } else if (channel === Y) {\r\n    maxLength = layout.cellHeight / model.config('characterWidth');\r\n  }\r\n\r\n  return maxLength ? util.truncate(fieldTitle, maxLength) : fieldTitle;\r\n}\r\n\r\n\r\nexport function titleOffset(model: Model, channel: Channel) {\r\n  // return specified value if specified\r\n  var value = model.fieldDef(channel).axis.titleOffset;\r\n  if (value)  return value;\r\n\r\n  switch (channel) {\r\n    case ROW: return 0;\r\n    case COLUMN: return 35;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nnamespace properties {\r\n  export function axis(model: Model, channel: Channel, spec) {\r\n    if (channel === ROW || channel === COLUMN) {\r\n      // hide axis for facets\r\n      return util.extend({\r\n        opacity: {value: 0}\r\n      }, spec || {});\r\n    }\r\n    return spec || undefined;\r\n  }\r\n\r\n  export function grid(model: Model, channel: Channel, spec, layout, def) {\r\n    var cellPadding = layout.cellPadding;\r\n\r\n    if (def.grid) {\r\n      if (channel === COLUMN) {\r\n        // set grid property -- put the lines on the right the cell\r\n        var yOffset = model.config('cellGridOffset');\r\n\r\n        var sign = model.fieldDef(channel).axis.orient === 'bottom' ? -1 : 1;\r\n\r\n        // TODO(#677): this should depend on orient\r\n        return util.extend({\r\n          x: {\r\n            offset: roundFloat(layout.cellWidth * (1+ cellPadding/2.0)),\r\n            // default value(s) -- vega doesn't do recursive merge\r\n            scale: 'column',\r\n            field: 'data'\r\n          },\r\n          y: {\r\n            value: - sign * yOffset,\r\n          },\r\n          y2: {\r\n            field: {group: 'mark.group.height'},\r\n            offset: sign * yOffset,\r\n            mult: sign\r\n          },\r\n          stroke: { value: model.config('cellGridColor') },\r\n          strokeOpacity: { value: model.config('cellGridOpacity') }\r\n        }, spec || {});\r\n      } else if (channel === ROW) {\r\n        var xOffset = model.config('cellGridOffset');\r\n\r\n        var sign = model.fieldDef(channel).axis.orient === 'right' ? -1 : 1;\r\n\r\n        // TODO(#677): this should depend on orient\r\n        // set grid property -- put the lines on the top\r\n        return util.extend({\r\n          y: {\r\n            offset: roundFloat(-layout.cellHeight * (cellPadding/2)),\r\n            // default value(s) -- vega doesn't do recursive merge\r\n            scale: 'row',\r\n            field: 'data'\r\n          },\r\n          x: {\r\n            value: sign * (def.offset - xOffset)\r\n          },\r\n          x2: {\r\n            field: {group: 'mark.group.width'},\r\n            offset: sign * (def.offset + xOffset),\r\n            // default value(s) -- vega doesn't do recursive merge\r\n            mult: sign\r\n          },\r\n          stroke: { value: model.config('cellGridColor') },\r\n          strokeOpacity: { value: model.config('cellGridOpacity') }\r\n        }, spec || {});\r\n      } else {\r\n        return util.extend({\r\n          stroke: { value: model.config('gridColor') },\r\n          strokeOpacity: { value: model.config('gridOpacity') }\r\n        }, spec || {});\r\n      }\r\n    }\r\n    return spec || undefined;\r\n  }\r\n\r\n  export function labels(model: Model, channel: Channel, spec, layout, def) {\r\n    let fieldDef = model.fieldDef(channel);\r\n    var timeUnit = fieldDef.timeUnit;\r\n    if (fieldDef.type === TEMPORAL && timeUnit && (time.hasScale(timeUnit))) {\r\n      spec = util.extend({\r\n        text: {scale: 'time-' + timeUnit, field: 'data'}\r\n      }, spec || {});\r\n    }\r\n\r\n    if (model.isTypes(channel, [NOMINAL, ORDINAL]) && fieldDef.axis.labelMaxLength) {\r\n      // TODO replace this with Vega's labelMaxLength once it is introduced\r\n      spec = util.extend({\r\n        text: {\r\n          template: '{{ datum.data | truncate:' + fieldDef.axis.labelMaxLength + '}}'\r\n        }\r\n      }, spec || {});\r\n    }\r\n\r\n     // for x-axis, set ticks for Q or rotate scale for ordinal scale\r\n    if (channel === X) {\r\n      if ((model.isDimension(X) || fieldDef.type === TEMPORAL)) {\r\n        spec = util.extend({\r\n          angle: {value: 270},\r\n          align: {value: def.orient === 'top' ? 'left': 'right'},\r\n          baseline: {value: 'middle'}\r\n        }, spec || {});\r\n      }\r\n    }\r\n    return spec || undefined;\r\n  }\r\n\r\n  export function title(model: Model, channel: Channel, spec, layout) {\r\n    if (channel === ROW) {\r\n      return util.extend({\r\n        angle: {value: 0},\r\n        align: {value: 'right'},\r\n        baseline: {value: 'middle'},\r\n        dy: {value: (-layout.height / 2) - 20}\r\n      }, spec || {});\r\n    }\r\n    return spec || undefined;\r\n  }\r\n}\r\n","/**\r\n * Module for compiling Vega-lite spec into Vega spec.\r\n */\r\nimport {Model} from './Model';\r\n\r\nimport * as vlTime from './time';\r\nimport {compileAxis} from './axis';\r\nimport {compileData} from './data';\r\nimport {compileLegends} from './legend';\r\nimport {compileMarks} from './marks';\r\nimport {compileScales, compileScaleNames} from './scale';\r\n\r\n// TODO: stop using default if we were to keep these files\r\nimport vlFacet from './facet';\r\nimport vlLayout from './layout';\r\nimport vlStack from './stack';\r\nimport vlStyle from './style';\r\nimport vlSubfacet from './subfacet';\r\n\r\nimport {stats as vlDataStats} from '../data';\r\nimport {COLUMN, ROW, X, Y} from '../channel';\r\n\r\nexport {Model} from './Model';\r\n\r\nexport function compile(spec, stats, theme?) {\r\n  var model = new Model(spec, theme);\r\n  // no need to pass stats if you pass in the data\r\n  if (!stats) {\r\n    if (model.hasValues()) {\r\n        stats = vlDataStats(model.data().values);\r\n    } else {\r\n      console.error('No stats provided and data is not embedded.');\r\n    }\r\n  }\r\n\r\n  var layout = vlLayout(model, stats);\r\n\r\n  // TODO: change type to become VgSpec\r\n  var output:any = {\r\n      width: layout.width,\r\n      height: layout.height,\r\n      padding: 'auto',\r\n      data: compileData(model),\r\n      marks: [{\r\n        name: 'cell',\r\n        type: 'group',\r\n        properties: {\r\n          enter: {\r\n            width: layout.cellWidth ?\r\n                     {value: layout.cellWidth} :\r\n                     {field: {group: 'width'}},\r\n            height: layout.cellHeight ?\r\n                    {value: layout.cellHeight} :\r\n                    {field: {group: 'height'}}\r\n          }\r\n        }\r\n      }]\r\n    };\r\n\r\n  // global scales contains only time unit scales\r\n  var timeScales = vlTime.scales(model);\r\n  if (timeScales.length > 0) {\r\n    output.scales = timeScales;\r\n  }\r\n\r\n  var group = output.marks[0];\r\n\r\n  // marks\r\n  var styleCfg = vlStyle(model, stats),\r\n    mdefs = group.marks = compileMarks(model, layout, styleCfg),\r\n    mdef = mdefs[mdefs.length - 1];  // TODO: remove this dirty hack by refactoring the whole flow\r\n\r\n  var stack = model.stack();\r\n  if (stack) {\r\n    // modify mdef.{from,properties}\r\n    vlStack(model, mdef, stack);\r\n  }\r\n\r\n  const marktype = model.marktype();\r\n  const isLineType = marktype === 'line' || marktype === 'area';\r\n\r\n  // handle subfacets\r\n  var details = model.details();\r\n\r\n  if (details.length > 0 && isLineType) {\r\n    //subfacet to group area / line together in one group\r\n    vlSubfacet(group, mdef, details);\r\n  }\r\n\r\n  // auto-sort line/area values\r\n  if (isLineType && model.config('autoSortLine')) { // TODO: remove autoSortLine\r\n    var f = (model.isMeasure(X) && model.isDimension(Y)) ? Y : X;\r\n    if (!mdef.from) {\r\n      mdef.from = {};\r\n    }\r\n    // TODO: why - ?\r\n    mdef.from.transform = [{type: 'sort', by: '-' + model.fieldRef(f)}];\r\n  }\r\n\r\n  // get a flattened list of all scale names that are used in the vl spec\r\n  var singleScaleNames = [].concat.apply([], mdefs.map(function(markProps) {\r\n    return compileScaleNames(markProps.properties.update);\r\n  }));\r\n\r\n  var legends = compileLegends(model, styleCfg);\r\n\r\n  // Small Multiples\r\n  if (model.has(ROW) || model.has(COLUMN)) {\r\n    output = vlFacet(group, model, layout, output, singleScaleNames, stats);\r\n    if (legends.length > 0) {\r\n      output.legends = legends;\r\n    }\r\n  } else {\r\n    group.scales = compileScales(singleScaleNames, model, layout, stats);\r\n\r\n    var axes = [];\r\n    if (model.has(X)) {\r\n      axes.push(compileAxis(X, model, layout, stats));\r\n    }\r\n    if (model.has(Y)) {\r\n      axes.push(compileAxis(Y, model, layout, stats));\r\n    }\r\n    if (axes.length > 0) {\r\n      group.axes = axes;\r\n    }\r\n\r\n    if (legends.length > 0) {\r\n      group.legends = legends;\r\n    }\r\n  }\r\n\r\n  return {\r\n    spec: output\r\n    // TODO: add warning / errors here\r\n  };\r\n}\r\n","import * as vlFieldDef from '../fielddef';\r\nimport * as util from '../util';\r\nimport {Model} from './Model';\r\nimport {FieldDef} from '../schema/fielddef.schema';\r\nimport {StackProperties} from './stack';\r\n\r\nimport {MAXBINS_DEFAULT} from '../bin';\r\nimport {Channel} from '../channel';\r\nimport {SOURCE, STACKED, SUMMARY} from '../data';\r\nimport * as time from './time';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\r\n\r\n/**\r\n * Create Vega's data array from a given encoding.\r\n *\r\n * @param  {Encoding} encoding\r\n * @return {Array} Array of Vega data.\r\n *                 This always includes a \"source\" data table.\r\n *                 If the encoding contains aggregate value, this will also create\r\n *                 aggregate table as well.\r\n */\r\nexport function compileData(model: Model) {\r\n  var def = [source.def(model)];\r\n\r\n  var summaryDef = summary.def(model);\r\n  if (summaryDef) {\r\n    def.push(summaryDef);\r\n  }\r\n\r\n  // TODO add \"having\" filter here\r\n\r\n  // append non-positive filter at the end for the data table\r\n  filterNonPositive(def[def.length - 1], model);\r\n\r\n  // Stack\r\n  var stackDef = model.stack();\r\n  if (stackDef) {\r\n    def.push(stack.def(model, stackDef));\r\n  }\r\n\r\n  return def;\r\n}\r\n\r\n// TODO: Consolidate all Vega interface\r\ninterface VgData {\r\n  name: string;\r\n  source?: string;\r\n  values?: any;\r\n  format?: any;\r\n  url?: any;\r\n  transform?: any;\r\n}\r\n\r\nexport namespace source {\r\n  export function def(model: Model): VgData {\r\n    var source:VgData = {name: SOURCE};\r\n\r\n    // Data source (url or inline)\r\n    if (model.hasValues()) {\r\n      source.values = model.data().values;\r\n      source.format = {type: 'json'};\r\n    } else {\r\n      source.url = model.data().url;\r\n      source.format = {type: model.data().formatType};\r\n    }\r\n\r\n    // Set data's format.parse if needed\r\n    var parse = formatParse(model);\r\n    if (parse) {\r\n      source.format.parse = parse;\r\n    }\r\n\r\n    source.transform = transform(model);\r\n    return source;\r\n  }\r\n\r\n  function formatParse(model: Model) {\r\n    var parse;\r\n\r\n    model.forEach(function(fieldDef: FieldDef) {\r\n      if (fieldDef.type === TEMPORAL) {\r\n        parse = parse || {};\r\n        parse[fieldDef.field] = 'date';\r\n      } else if (fieldDef.type === QUANTITATIVE) {\r\n        if (vlFieldDef.isCount(fieldDef)) return;\r\n        parse = parse || {};\r\n        parse[fieldDef.field] = 'number';\r\n      }\r\n    });\r\n\r\n    return parse;\r\n  }\r\n\r\n  /**\r\n   * Generate Vega transforms for the source data table.  This can include\r\n   * transforms for time unit, binning and filtering.\r\n   */\r\n  export function transform(model: Model) {\r\n    // null filter comes first so transforms are not performed on null values\r\n    // time and bin should come before filter so we can filter by time and bin\r\n    return nullFilterTransform(model).concat(\r\n      formulaTransform(model),\r\n      timeTransform(model),\r\n      binTransform(model),\r\n      filterTransform(model)\r\n    );\r\n  }\r\n\r\n  export function timeTransform(model: Model) {\r\n    return model.reduce(function(transform, fieldDef: FieldDef, channel: Channel) {\r\n      if (fieldDef.type === TEMPORAL && fieldDef.timeUnit) {\r\n        var fieldRef = model.fieldRef(channel, {nofn: true, datum: true});\r\n\r\n        transform.push({\r\n          type: 'formula',\r\n          field: model.fieldRef(channel),\r\n          expr: time.formula(fieldDef.timeUnit, fieldRef)\r\n        });\r\n      }\r\n      return transform;\r\n    }, []);\r\n  }\r\n\r\n  export function binTransform(model: Model) {\r\n    return model.reduce(function(transform, fieldDef: FieldDef, channel: Channel) {\r\n      const bin = model.bin(channel);\r\n      if (bin) {\r\n        transform.push({\r\n          type: 'bin',\r\n          field: fieldDef.field,\r\n          output: {\r\n            start: model.fieldRef(channel, {binSuffix: '_start'}),\r\n            end: model.fieldRef(channel, {binSuffix: '_end'})\r\n          },\r\n          maxbins: typeof bin === 'boolean' ? MAXBINS_DEFAULT : bin.maxbins\r\n        });\r\n        // temporary fix for adding missing `bin_mid` from the bin transform\r\n        transform.push({\r\n          type: 'formula',\r\n          field: model.fieldRef(channel, {binSuffix: '_mid'}),\r\n          expr: '(' + model.fieldRef(channel, {datum:1, binSuffix: '_start'}) + '+' + model.fieldRef(channel, {datum:1, binSuffix: '_end'}) + ')/2'\r\n        });\r\n      }\r\n      return transform;\r\n    }, []);\r\n  }\r\n\r\n  /**\r\n   * @return {Array} An array that might contain a filter transform for filtering null value based on filterNul config\r\n   */\r\n  export function nullFilterTransform(model: Model) {\r\n    var filteredFields = util.reduce(model.fields(),\r\n      function(filteredFields, fieldList, fieldName) {\r\n        if (fieldName === '*') return filteredFields; //count\r\n\r\n        // TODO(#597) revise how filterNull is structured.\r\n        if ((model.config('filterNull').quantitative && fieldList.containsType[QUANTITATIVE]) ||\r\n            (model.config('filterNull').temporal && fieldList.containsType[TEMPORAL]) ||\r\n            (model.config('filterNull').ordinal && fieldList.containsType[ORDINAL]) ||\r\n            (model.config('filterNull').nominal && fieldList.containsType[NOMINAL])) {\r\n          filteredFields.push(fieldName);\r\n        }\r\n        return filteredFields;\r\n      }, []);\r\n\r\n    return filteredFields.length > 0 ?\r\n      [{\r\n        type: 'filter',\r\n        test: filteredFields.map(function(fieldName) {\r\n          return 'datum.' + fieldName + '!==null';\r\n        }).join(' && ')\r\n      }] : [];\r\n  }\r\n\r\n  export function filterTransform(model: Model) {\r\n    var filter = model.data().filter;\r\n    return filter ? [{\r\n        type: 'filter',\r\n        test: filter\r\n    }] : [];\r\n  }\r\n\r\n  export function formulaTransform(model: Model) {\r\n    var calculate = model.data().calculate;\r\n    if (calculate === undefined) {\r\n      return [];\r\n    }\r\n\r\n    return calculate.reduce(function(transform, formula) {\r\n      transform.push(util.extend({type: formula}, formula));\r\n      return transform;\r\n    }, []);\r\n  }\r\n}\r\n\r\nexport namespace summary {\r\n  export function def(model: Model):VgData {\r\n    /* dict set for dimensions */\r\n    var dims = {};\r\n\r\n    /* dictionary mapping field name => dict set of aggregation functions */\r\n    var meas = {};\r\n\r\n    var hasAggregate = false;\r\n\r\n    model.forEach(function(fieldDef, channel: Channel) {\r\n      if (fieldDef.aggregate) {\r\n        hasAggregate = true;\r\n        if (fieldDef.aggregate === 'count') {\r\n          meas['*'] = meas['*'] || {};\r\n          meas['*'].count = true;\r\n        } else {\r\n          meas[fieldDef.field] = meas[fieldDef.field] || {};\r\n          meas[fieldDef.field][fieldDef.aggregate] = true;\r\n        }\r\n      } else {\r\n        if (fieldDef.bin) {\r\n          // TODO(#694) only add dimension for the required ones.\r\n          dims[model.fieldRef(channel, {binSuffix: '_start'})] = model.fieldRef(channel, {binSuffix: '_start'});\r\n          dims[model.fieldRef(channel, {binSuffix: '_mid'})] = model.fieldRef(channel, {binSuffix: '_mid'});\r\n          dims[model.fieldRef(channel, {binSuffix: '_end'})] = model.fieldRef(channel, {binSuffix: '_end'});\r\n        } else {\r\n          dims[fieldDef.field] = model.fieldRef(channel);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n    var groupby = util.vals(dims);\r\n\r\n    // short-format summarize object for Vega's aggregate transform\r\n    // https://github.com/vega/vega/wiki/Data-Transforms#-aggregate\r\n    var summarize = util.reduce(meas, function(summarize, fnDictSet, field) {\r\n      summarize[field] = util.keys(fnDictSet);\r\n      return summarize;\r\n    }, {});\r\n\r\n    if (hasAggregate) {\r\n      return {\r\n        name: SUMMARY,\r\n        source: SOURCE,\r\n        transform: [{\r\n          type: 'aggregate',\r\n          groupby: groupby,\r\n          summarize: summarize\r\n        }]\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n\r\nexport namespace stack {\r\n  /**\r\n   * Add stacked data source, for feeding the shared scale.\r\n   */\r\n  export function def(model: Model, stackProps: StackProperties):VgData {\r\n    var groupbyChannel = stackProps.groupbyChannel;\r\n    var fieldChannel = stackProps.fieldChannel;\r\n    var facets = model.facets();\r\n\r\n    var stacked:VgData = {\r\n      name: STACKED,\r\n      source: model.dataTable(),\r\n      transform: [{\r\n        type: 'aggregate',\r\n        // group by channel and other facets\r\n        groupby: [model.fieldRef(groupbyChannel)].concat(facets),\r\n        summarize: [{ops: ['sum'], field: model.fieldRef(fieldChannel)}]\r\n      }]\r\n    };\r\n\r\n    if (facets && facets.length > 0) {\r\n      stacked.transform.push({ //calculate max for each facet\r\n        type: 'aggregate',\r\n        groupby: facets,\r\n        summarize: [{\r\n          ops: ['max'],\r\n          // we want max of sum from above transform\r\n          field: model.fieldRef(fieldChannel, {prefn: 'sum_'})\r\n        }]\r\n      });\r\n    }\r\n    return stacked;\r\n  };\r\n}\r\n\r\nexport function filterNonPositive(dataTable, model: Model) {\r\n  model.forEach(function(_, channel) {\r\n    if (model.fieldDef(channel).scale.type === 'log') {\r\n      dataTable.transform.push({\r\n        type: 'filter',\r\n        test: model.fieldRef(channel, {datum: 1}) + ' > 0'\r\n      });\r\n    }\r\n  });\r\n}\r\n","import * as util from '../util';\r\nimport {COLUMN, ROW, X, Y} from '../channel';\r\nimport {Model} from './Model';\r\n\r\nimport {compileAxis} from './axis';\r\nimport {compileScales, compileScaleNames} from './scale';\r\n\r\nfunction groupdef(name, opt) {\r\n  opt = opt || {};\r\n\r\n  // TODO: Vega's Marks interface\r\n  var group:any = {\r\n    name: name || undefined,\r\n    type: 'group',\r\n    properties: {\r\n      enter: {\r\n        width: opt.width || {field: {group: 'width'}},\r\n        height: opt.height || {field: {group: 'height'}}\r\n      }\r\n    }\r\n  };\r\n\r\n  if (opt.from) {\r\n    group.from = opt.from;\r\n  }\r\n  if (opt.x) {\r\n    group.properties.enter.x = opt.x;\r\n  }\r\n  if (opt.y) {\r\n    group.properties.enter.y = opt.y;\r\n  }\r\n  if (opt.axes) {\r\n    group.axes = opt.axes;\r\n  }\r\n\r\n  return group;\r\n}\r\n\r\nexport default function(group, model: Model, layout, output, singleScaleNames, stats) {\r\n  var enter = group.properties.enter;\r\n  var facetKeys = [], cellAxes = [], from, axesGrp;\r\n\r\n  var hasRow = model.has(ROW), hasCol = model.has(COLUMN);\r\n\r\n  enter.fill = {value: model.config('cellBackgroundColor')};\r\n\r\n  //move \"from\" to cell level and add facet transform\r\n  group.from = {data: group.marks[0].from.data};\r\n\r\n  // Hack, this needs to be refactored\r\n  for (var i = 0; i < group.marks.length; i++) {\r\n    var mark = group.marks[i];\r\n    if (mark.from.transform) {\r\n      delete mark.from.data; //need to keep transform for subfacetting case\r\n    } else {\r\n      delete mark.from;\r\n    }\r\n  }\r\n\r\n  if (hasRow) {\r\n    if (!model.isDimension(ROW)) {\r\n      util.error('Row encoding should be ordinal.');\r\n    }\r\n    enter.y = {scale: ROW, field: model.fieldRef(ROW)};\r\n    enter.height = {'value': layout.cellHeight}; // HACK\r\n\r\n    facetKeys.push(model.fieldRef(ROW));\r\n\r\n    if (hasCol) {\r\n      from = util.duplicate(group.from);\r\n      from.transform = from.transform || [];\r\n      from.transform.unshift({type: 'facet', groupby: [model.fieldRef(COLUMN)]});\r\n    }\r\n\r\n    axesGrp = groupdef('x-axes', {\r\n        axes: model.has(X) ? [compileAxis(X, model, layout, stats)] : undefined,\r\n        x: hasCol ? {scale: COLUMN, field: model.fieldRef(COLUMN)} : {value: 0},\r\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\r\n        from: from\r\n      });\r\n\r\n    output.marks.unshift(axesGrp); // need to prepend so it appears under the plots\r\n    (output.axes = output.axes || []);\r\n    output.axes.push(compileAxis(ROW, model, layout, stats));\r\n  } else { // doesn't have row\r\n    if (model.has(X)) {\r\n      //keep x axis in the cell\r\n      cellAxes.push(compileAxis(X, model, layout, stats));\r\n    }\r\n  }\r\n\r\n  if (hasCol) {\r\n    if (!model.isDimension(COLUMN)) {\r\n      util.error('Col encoding should be ordinal.');\r\n    }\r\n    enter.x = {scale: COLUMN, field: model.fieldRef(COLUMN)};\r\n    enter.width = {'value': layout.cellWidth}; // HACK\r\n\r\n    facetKeys.push(model.fieldRef(COLUMN));\r\n\r\n    if (hasRow) {\r\n      from = util.duplicate(group.from);\r\n      from.transform = from.transform || [];\r\n      from.transform.unshift({type: 'facet', groupby: [model.fieldRef(ROW)]});\r\n    }\r\n\r\n    axesGrp = groupdef('y-axes', {\r\n      axes: model.has(Y) ? [compileAxis(Y, model, layout, stats)] : undefined,\r\n      y: hasRow && {scale: ROW, field: model.fieldRef(ROW)},\r\n      x: hasRow && {value: 0},\r\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\r\n      from: from\r\n    });\r\n\r\n    output.marks.unshift(axesGrp); // need to prepend so it appears under the plots\r\n    (output.axes = output.axes || []);\r\n    output.axes.push(compileAxis(COLUMN, model, layout, stats));\r\n  } else { // doesn't have column\r\n    if (model.has(Y)) {\r\n      cellAxes.push(compileAxis(Y, model, layout, stats));\r\n    }\r\n  }\r\n\r\n  // assuming equal cellWidth here\r\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\r\n  output.scales = (output.scales || []).concat(compileScales(\r\n    compileScaleNames(enter).concat(singleScaleNames),\r\n    model,\r\n    layout,\r\n    stats,\r\n    true\r\n  )); // row/column scales + cell scales\r\n\r\n  if (cellAxes.length > 0) {\r\n    group.axes = cellAxes;\r\n  }\r\n\r\n  // add facet transform\r\n  var trans = (group.from.transform || (group.from.transform = []));\r\n  trans.unshift({type: 'facet', groupby: facetKeys});\r\n\r\n  return output;\r\n}\r\n","/// <reference path=\"../../typings/d3-format.d.ts\"/>\r\n\r\nimport {FieldDef} from '../schema/fielddef.schema';\r\n\r\nimport * as d3_format from 'd3-format';\r\nimport {setter} from '../util';\r\nimport {COLUMN, ROW, X, Y, TEXT, Channel} from '../channel';\r\nimport {Model} from './Model';\r\nimport * as time from './time';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\r\nimport {roundFloat} from '../util';\r\n\r\nexport default function(model: Model, stats) {\r\n  var layout = box(model, stats);\r\n  layout = offset(model, stats, layout);\r\n  return layout;\r\n}\r\n\r\n/*\r\n  HACK to set chart size\r\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\r\n  One solution is to update Vega to support auto-sizing\r\n  In the meantime, auto-padding (mostly) does the trick\r\n */\r\nfunction box(model: Model, stats) {\r\n  var hasRow = model.has(ROW),\r\n      hasCol = model.has(COLUMN),\r\n      hasX = model.has(X),\r\n      hasY = model.has(Y),\r\n      marktype = model.marktype();\r\n\r\n  // FIXME/HACK we need to take filter into account\r\n  var xCardinality = hasX && model.isDimension(X) ? model.cardinality(X, stats) : 1,\r\n    yCardinality = hasY && model.isDimension(Y) ? model.cardinality(Y, stats) : 1;\r\n\r\n  var useSmallBand = xCardinality > model.config('largeBandMaxCardinality') ||\r\n    yCardinality > model.config('largeBandMaxCardinality');\r\n\r\n  var cellWidth, cellHeight, cellPadding = model.config('cellPadding');\r\n\r\n  // set cellWidth\r\n  if (hasX) {\r\n    if (model.isOrdinalScale(X)) {\r\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\r\n      cellWidth = (xCardinality + model.padding(X)) * model.bandWidth(X, useSmallBand);\r\n    } else {\r\n      cellWidth = hasCol || hasRow ? model.fieldDef(COLUMN).width :  model.config('singleWidth');\r\n    }\r\n  } else {\r\n    if (marktype === TEXT) {\r\n      cellWidth = model.config('textCellWidth');\r\n    } else {\r\n      cellWidth = model.bandWidth(X);\r\n    }\r\n  }\r\n\r\n  // set cellHeight\r\n  if (hasY) {\r\n    if (model.isOrdinalScale(Y)) {\r\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\r\n      cellHeight = (yCardinality + model.padding(Y)) * model.bandWidth(Y, useSmallBand);\r\n    } else {\r\n      cellHeight = hasCol || hasRow ? model.fieldDef(ROW).height :  model.config('singleHeight');\r\n    }\r\n  } else {\r\n    cellHeight = model.bandWidth(Y);\r\n  }\r\n\r\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\r\n\r\n  var width = cellWidth, height = cellHeight;\r\n  if (hasCol) {\r\n    var colCardinality = model.cardinality(COLUMN, stats);\r\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\r\n  }\r\n  if (hasRow) {\r\n    var rowCardinality =  model.cardinality(ROW, stats);\r\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\r\n  }\r\n\r\n  return {\r\n    // width and height of the whole cell\r\n    cellWidth: roundFloat(cellWidth),\r\n    cellHeight: roundFloat(cellHeight),\r\n    cellPadding: cellPadding,\r\n    // width and height of the chart\r\n    width: roundFloat(width),\r\n    height: roundFloat(height),\r\n    // information about x and y, such as band size\r\n    x: {useSmallBand: useSmallBand},\r\n    y: {useSmallBand: useSmallBand}\r\n  };\r\n}\r\n\r\nfunction getMaxNumberLength(model: Model, channel: Channel, fieldStats) {\r\n  var format = model.numberFormat(channel);\r\n  return d3_format.format(format)(fieldStats.max).length;\r\n}\r\n\r\n// TODO(#600) revise this\r\nfunction getMaxLength(model: Model, stats, channel: Channel) {\r\n  var fieldDef: FieldDef = model.fieldDef(channel),\r\n    fieldStats = stats[fieldDef.field];\r\n\r\n  if (fieldDef.bin) {\r\n    // TODO once bin support range, need to update this\r\n    return getMaxNumberLength(model, channel, fieldStats);\r\n  } if (fieldDef.type === QUANTITATIVE) {\r\n    return getMaxNumberLength(model, channel, fieldStats);\r\n  } else if (fieldDef.type === TEMPORAL) {\r\n    return time.maxLength(model.fieldDef(channel).timeUnit, model);\r\n  } else if (model.isTypes(channel, [NOMINAL, ORDINAL])) {\r\n    if(fieldStats.type === 'number') {\r\n      return getMaxNumberLength(model, channel, fieldStats);\r\n    } else {\r\n      return Math.min(fieldStats.max, fieldDef.axis.labelMaxLength || Infinity);\r\n    }\r\n  }\r\n}\r\n\r\nfunction offset(model: Model, stats, layout) {\r\n  [X, Y].forEach(function (channel) {\r\n    // TODO(kanitw): Jul 19, 2015 - create a set of visual test for extraOffset\r\n    let extraOffset = channel === X ? 20 : 22;\r\n    let fieldDef = model.fieldDef(channel);\r\n    let maxLength;\r\n\r\n    if (model.isDimension(channel) || fieldDef.type === TEMPORAL) {\r\n      maxLength = getMaxLength(model, stats, channel);\r\n    } else if (\r\n      // TODO once we have #512 (allow using inferred type)\r\n      // Need to adjust condition here.\r\n      fieldDef.type === QUANTITATIVE || fieldDef.aggregate === 'count'\r\n    ) {\r\n      if (\r\n        channel===Y\r\n        // || (channel===X && false)\r\n        // FIXME determine when X would rotate, but should move this to axis.js first #506\r\n      ) {\r\n        maxLength = getMaxLength(model, stats, channel);\r\n      }\r\n    } else {\r\n      // nothing\r\n    }\r\n\r\n    if (maxLength) {\r\n      setter(layout,[channel, 'axisTitleOffset'], model.config('characterWidth') *  maxLength + extraOffset);\r\n    } else {\r\n      // if no max length (no rotation case), use maxLength = 3\r\n      setter(layout,[channel, 'axisTitleOffset'], model.config('characterWidth') * 3 + extraOffset);\r\n    }\r\n\r\n  });\r\n  return layout;\r\n}\r\n","import * as util from '../util';\r\nimport {COLOR, SIZE, SHAPE, Channel} from '../channel';\r\nimport {Model} from './Model';\r\nimport * as time from './time';\r\nimport {TEMPORAL} from '../type';\r\n\r\nexport function compileLegends(model: Model, styleCfg) {\r\n  var defs = [];\r\n\r\n  if (model.has(COLOR) && model.fieldDef(COLOR).legend) {\r\n    defs.push(compileLegend(model, COLOR, {\r\n      fill: COLOR\r\n      // TODO: consider if this should be stroke for line\r\n    }, styleCfg));\r\n  }\r\n\r\n  if (model.has(SIZE) && model.fieldDef(SIZE).legend) {\r\n    defs.push(compileLegend(model, SIZE, {\r\n      size: SIZE\r\n    }, styleCfg));\r\n  }\r\n\r\n  if (model.has(SHAPE) && model.fieldDef(SHAPE).legend) {\r\n    defs.push(compileLegend(model, SHAPE, {\r\n      shape: SHAPE\r\n    }, styleCfg));\r\n  }\r\n  return defs;\r\n}\r\n\r\nexport function compileLegend(model: Model, channel: Channel, def, styleCfg) {\r\n  let legend = model.fieldDef(channel).legend;\r\n\r\n  // 1.1 Add properties with special rules\r\n  def.title = title(model, channel);\r\n\r\n  // 1.2 Add properties without rules\r\n  ['orient', 'format', 'values'].forEach(function(property) {\r\n    let value = legend[property];\r\n    if (value !== undefined) {\r\n      def[property] = value;\r\n    }\r\n  });\r\n\r\n  // 2) Add mark property definition groups\r\n  let props = legend.properties || {};\r\n  ['title', 'labels', 'symbols', 'legend'].forEach(function(group) {\r\n    let value = properties[group] ?\r\n      properties[group](model, channel, props[group], styleCfg) : // apply rule\r\n      props[group]; // no rule -- just default values\r\n    if (value !== undefined) {\r\n      def.properties = def.properties || {};\r\n      def.properties[group] = value;\r\n    }\r\n  });\r\n\r\n  return def;\r\n}\r\n\r\nexport function title(model: Model, channel: Channel) {\r\n  let leg = model.fieldDef(channel).legend;\r\n\r\n  if (leg.title) return leg.title;\r\n\r\n  return model.fieldTitle(channel);\r\n}\r\n\r\nnamespace properties {\r\n  export function labels(model: Model, channel: Channel, spec) {\r\n    var fieldDef = model.fieldDef(channel);\r\n    var timeUnit = fieldDef.timeUnit;\r\n    if (fieldDef.type === TEMPORAL && timeUnit && time.hasScale(timeUnit)) {\r\n      return util.extend({\r\n        text: {\r\n          scale: 'time-'+ timeUnit\r\n        }\r\n      }, spec || {});\r\n    }\r\n    return spec;\r\n  }\r\n\r\n  export function symbols(model: Model, channel: Channel, spec, styleCfg) {\r\n    let symbols:any = {};\r\n    let marktype = model.marktype();\r\n\r\n    switch (marktype) {\r\n      case 'bar':\r\n      case 'tick':\r\n      case 'text':\r\n        symbols.stroke = {value: 'transparent'};\r\n        symbols.shape = {value: 'square'};\r\n        break;\r\n\r\n      case 'circle':\r\n      case 'square':\r\n        symbols.shape = {value: marktype};\r\n        /* fall through */\r\n      case 'point':\r\n        // fill or stroke\r\n        if (model.fieldDef(SHAPE).filled) {\r\n          if (model.has(COLOR) && channel === COLOR) {\r\n            symbols.fill = {scale: COLOR, field: 'data'};\r\n          } else {\r\n            symbols.fill = {value: model.fieldDef(COLOR).value};\r\n          }\r\n          symbols.stroke = {value: 'transparent'};\r\n        } else {\r\n          if (model.has(COLOR) && channel === COLOR) {\r\n            symbols.stroke = {scale: COLOR, field: 'data'};\r\n          } else {\r\n            symbols.stroke = {value: model.fieldDef(COLOR).value};\r\n          }\r\n          symbols.fill = {value: 'transparent'};\r\n          symbols.strokeWidth = {value: model.config('strokeWidth')};\r\n        }\r\n\r\n        break;\r\n      case 'line':\r\n      case 'area':\r\n        // TODO use shape here after implementing #508\r\n        break;\r\n    }\r\n\r\n    var opacity = model.fieldDef(COLOR).opacity || styleCfg.opacity;\r\n    if (opacity) {\r\n      symbols.opacity = {value: opacity};\r\n    }\r\n\r\n    symbols = util.extend(symbols, spec || {});\r\n\r\n    return util.keys(symbols).length > 0 ? symbols : undefined;\r\n  }\r\n}\r\n","import {Model} from './Model';\r\nimport {COLUMN, ROW, X, Y, COLOR, TEXT, SIZE, SHAPE} from '../channel';\r\nimport {QUANTITATIVE} from '../type';\r\n\r\n// https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#11-ambient-declarations\r\ndeclare var exports;\r\n\r\nexport function compileMarks(model: Model, layout, style) {\r\n  var defs = [],\r\n    mark = exports[model.marktype()],\r\n    from = model.dataTable();\r\n\r\n  // to add a background to text, we need to add it before the text\r\n  if (model.marktype() === TEXT && model.has(COLOR)) {\r\n    var bg = {\r\n      x: {value: 0},\r\n      y: {value: 0},\r\n      x2: {value: layout.cellWidth},\r\n      y2: {value: layout.cellHeight},\r\n      fill: {scale: COLOR, field: model.fieldRef(COLOR)}\r\n    };\r\n    defs.push({\r\n      type: 'rect',\r\n      from: {data: from},\r\n      properties: {enter: bg, update: bg}\r\n    });\r\n  }\r\n\r\n  // add the mark def for the main thing\r\n  var p = mark.prop(model, layout, style);\r\n  defs.push({\r\n    type: mark.type,\r\n    from: {data: from},\r\n    properties: {update: p}\r\n  });\r\n\r\n  return defs;\r\n}\r\n\r\nexport const bar = {\r\n  type: 'rect',\r\n  prop: bar_props\r\n};\r\n\r\nexport const line = {\r\n  type: 'line',\r\n  prop: line_props\r\n};\r\n\r\nexport const area = {\r\n  type: 'area',\r\n  prop: area_props\r\n};\r\n\r\nexport const tick = {\r\n  type: 'rect',\r\n  prop: tick_props\r\n};\r\n\r\nexport const circle = {\r\n  type: 'symbol',\r\n  prop: filled_point_props('circle')\r\n};\r\n\r\nexport const square = {\r\n  type: 'symbol',\r\n  prop: filled_point_props('square')\r\n};\r\n\r\nexport const point = {\r\n  type: 'symbol',\r\n  prop: point_props\r\n};\r\n\r\nexport const text = {\r\n  type: 'text',\r\n  prop: text_props\r\n};\r\n\r\nfunction bar_props(e: Model, layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {};\r\n\r\n  // x's and width\r\n  if (e.fieldDef(X).bin) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_start'}), offset: 1};\r\n    p.x2 = {scale: X, field: e.fieldRef(X, {binSuffix: '_end'})};\r\n  } else if (e.isMeasure(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X)};\r\n    if (!e.has(Y) || e.isDimension(Y)) {\r\n      p.x2 = {value: 0};\r\n    }\r\n  } else {\r\n    if (e.has(X)) { // is ordinal\r\n       p.xc = {scale: X, field: e.fieldRef(X)};\r\n    } else {\r\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\r\n    }\r\n  }\r\n\r\n  // width\r\n  if (!p.x2) {\r\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\r\n      if (e.has(SIZE)) {\r\n        p.width = {scale: SIZE, field: e.fieldRef(SIZE)};\r\n      } else {\r\n        p.width = {\r\n          value: e.bandWidth(X, layout.x.useSmallBand),\r\n          offset: -1\r\n        };\r\n      }\r\n    } else { // X is Quant or Time Scale\r\n      p.width = {value: 2};\r\n    }\r\n  }\r\n\r\n  // y's & height\r\n  if (e.fieldDef(Y).bin) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_start'})};\r\n    p.y2 = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_end'}), offset: 1};\r\n  } else if (e.isMeasure(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y)};\r\n    p.y2 = {field: {group: 'height'}};\r\n  } else {\r\n    if (e.has(Y)) { // is ordinal\r\n      p.yc = {scale: Y, field: e.fieldRef(Y)};\r\n    } else {\r\n      p.y2 = {\r\n        field: {group: 'height'},\r\n        offset: -e.config('singleBarOffset')\r\n      };\r\n    }\r\n\r\n    if (e.has(SIZE)) {\r\n      p.height = {scale: SIZE, field: e.fieldRef(SIZE)};\r\n    } else {\r\n      p.height = {\r\n        value: e.bandWidth(Y, layout.y.useSmallBand),\r\n        offset: -1\r\n      };\r\n    }\r\n  }\r\n\r\n  // fill\r\n  if (e.has(COLOR)) {\r\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n  } else {\r\n    p.fill = {value: e.fieldDef(COLOR).value};\r\n  }\r\n\r\n  // opacity\r\n  var opacity = e.fieldDef(COLOR).opacity;\r\n  if (opacity) p.opacity = {value: opacity};\r\n\r\n  return p;\r\n}\r\n\r\nfunction point_props(e: Model, layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {};\r\n\r\n  // x\r\n  if (e.has(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n  } else if (!e.has(X)) {\r\n    p.x = {value: e.bandWidth(X, layout.x.useSmallBand) / 2};\r\n  }\r\n\r\n  // y\r\n  if (e.has(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n  } else if (!e.has(Y)) {\r\n    p.y = {value: e.bandWidth(Y, layout.y.useSmallBand) / 2};\r\n  }\r\n\r\n  // size\r\n  if (e.has(SIZE)) {\r\n    p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\r\n  } else if (!e.has(SIZE)) {\r\n    p.size = {value: e.fieldDef(SIZE).value};\r\n  }\r\n\r\n  // shape\r\n  if (e.has(SHAPE)) {\r\n    p.shape = {scale: SHAPE, field: e.fieldRef(SHAPE)};\r\n  } else if (!e.has(SHAPE)) {\r\n    p.shape = {value: e.fieldDef(SHAPE).value};\r\n  }\r\n\r\n  // fill or stroke\r\n  if (e.fieldDef(SHAPE).filled) {\r\n    if (e.has(COLOR)) {\r\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n    } else if (!e.has(COLOR)) {\r\n      p.fill = {value: e.fieldDef(COLOR).value};\r\n    }\r\n  } else {\r\n    if (e.has(COLOR)) {\r\n      p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n    } else if (!e.has(COLOR)) {\r\n      p.stroke = {value: e.fieldDef(COLOR).value};\r\n    }\r\n    p.strokeWidth = {value: e.config('strokeWidth')};\r\n  }\r\n\r\n  // opacity\r\n  var opacity = e.fieldDef(COLOR).opacity || style.opacity;\r\n  if (opacity) p.opacity = {value: opacity};\r\n\r\n  return p;\r\n}\r\n\r\nfunction line_props(e: Model,layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {};\r\n\r\n  // x\r\n  if (e.has(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n  } else if (!e.has(X)) {\r\n    p.x = {value: 0};\r\n  }\r\n\r\n  // y\r\n  if (e.has(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n  } else if (!e.has(Y)) {\r\n    p.y = {field: {group: 'height'}};\r\n  }\r\n\r\n  // stroke\r\n  if (e.has(COLOR)) {\r\n    p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n  } else if (!e.has(COLOR)) {\r\n    p.stroke = {value: e.fieldDef(COLOR).value};\r\n  }\r\n\r\n  var opacity = e.fieldDef(COLOR).opacity;\r\n  if (opacity) p.opacity = {value: opacity};\r\n\r\n  p.strokeWidth = {value: e.config('strokeWidth')};\r\n\r\n  return p;\r\n}\r\n\r\n// TODO(#694): optimize area's usage with bin\r\nfunction area_props(e: Model, layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {};\r\n\r\n  // x\r\n  if (e.isMeasure(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X)};\r\n    if (e.isDimension(Y)) {\r\n      p.x2 = {scale: X, value: 0};\r\n      p.orient = {value: 'horizontal'};\r\n    }\r\n  } else if (e.has(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n  } else {\r\n    p.x = {value: 0};\r\n  }\r\n\r\n  // y\r\n  if (e.isMeasure(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y)};\r\n    p.y2 = {scale: Y, value: 0};\r\n  } else if (e.has(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n  } else {\r\n    p.y = {field: {group: 'height'}};\r\n  }\r\n\r\n  // fill\r\n  if (e.has(COLOR)) {\r\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n  } else if (!e.has(COLOR)) {\r\n    p.fill = {value: e.fieldDef(COLOR).value};\r\n  }\r\n\r\n  var opacity = e.fieldDef(COLOR).opacity;\r\n  if (opacity) p.opacity = {value: opacity};\r\n\r\n  return p;\r\n}\r\n\r\nfunction tick_props(e: Model, layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {};\r\n\r\n  // x\r\n  if (e.has(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n    if (e.isDimension(X)) {\r\n      p.x.offset = -e.bandWidth(X, layout.x.useSmallBand) / 3;\r\n    }\r\n  } else if (!e.has(X)) {\r\n    p.x = {value: 0};\r\n  }\r\n\r\n  // y\r\n  if (e.has(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n    if (e.isDimension(Y)) {\r\n      p.y.offset = -e.bandWidth(Y, layout.y.useSmallBand) / 3;\r\n    }\r\n  } else if (!e.has(Y)) {\r\n    p.y = {value: 0};\r\n  }\r\n\r\n  // width\r\n  if (!e.has(X) || e.isDimension(X)) {\r\n    // TODO(#694): optimize tick's width for bin\r\n    p.width = {value: e.bandWidth(X, layout.y.useSmallBand) / 1.5};\r\n  } else {\r\n    p.width = {value: 1};\r\n  }\r\n\r\n  // height\r\n  if (!e.has(Y) || e.isDimension(Y)) {\r\n    // TODO(#694): optimize tick's height for bin\r\n    p.height = {value: e.bandWidth(Y, layout.y.useSmallBand) / 1.5};\r\n  } else {\r\n    p.height = {value: 1};\r\n  }\r\n\r\n  // fill\r\n  if (e.has(COLOR)) {\r\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n  } else {\r\n    p.fill = {value: e.fieldDef(COLOR).value};\r\n  }\r\n\r\n  var opacity = e.fieldDef(COLOR).opacity  || style.opacity;\r\n  if(opacity) p.opacity = {value: opacity};\r\n\r\n  return p;\r\n}\r\n\r\nfunction filled_point_props(shape) {\r\n  return function(e: Model, layout, style) {\r\n    // TODO Use Vega's marks properties interface\r\n    var p:any = {};\r\n\r\n    // x\r\n    if (e.has(X)) {\r\n      p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n    } else if (!e.has(X)) {\r\n      p.x = {value: e.bandWidth(X, layout.x.useSmallBand) / 2};\r\n    }\r\n\r\n    // y\r\n    if (e.has(Y)) {\r\n      p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n    } else if (!e.has(Y)) {\r\n      p.y = {value: e.bandWidth(Y, layout.y.useSmallBand) / 2};\r\n    }\r\n\r\n    // size\r\n    if (e.has(SIZE)) {\r\n      p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\r\n    } else if (!e.has(X)) {\r\n      p.size = {value: e.fieldDef(SIZE).value};\r\n    }\r\n\r\n    // shape\r\n    p.shape = {value: shape};\r\n\r\n    // fill\r\n    if (e.has(COLOR)) {\r\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\r\n    } else if (!e.has(COLOR)) {\r\n      p.fill = {value: e.fieldDef(COLOR).value};\r\n    }\r\n\r\n    var opacity = e.fieldDef(COLOR).opacity  || style.opacity;\r\n    if(opacity) p.opacity = {value: opacity};\r\n\r\n    return p;\r\n  };\r\n}\r\n\r\nfunction text_props(e: Model, layout, style) {\r\n  // TODO Use Vega's marks properties interface\r\n  var p:any = {},\r\n    fieldDef = e.fieldDef(TEXT);\r\n\r\n  // x\r\n  if (e.has(X)) {\r\n    p.x = {scale: X, field: e.fieldRef(X, {binSuffix: '_mid'})};\r\n  } else if (!e.has(X)) {\r\n    if (e.has(TEXT) && e.fieldDef(TEXT).type === QUANTITATIVE) {\r\n      p.x = {value: layout.cellWidth-5};\r\n    } else {\r\n      p.x = {value: e.bandWidth(X, layout.x.useSmallBand) / 2};\r\n    }\r\n  }\r\n\r\n  // y\r\n  if (e.has(Y)) {\r\n    p.y = {scale: Y, field: e.fieldRef(Y, {binSuffix: '_mid'})};\r\n  } else if (!e.has(Y)) {\r\n    p.y = {value: e.bandWidth(Y, layout.y.useSmallBand) / 2};\r\n  }\r\n\r\n  // size\r\n  if (e.has(SIZE)) {\r\n    p.fontSize = {scale: SIZE, field: e.fieldRef(SIZE)};\r\n  } else if (!e.has(SIZE)) {\r\n    p.fontSize = {value: fieldDef.font.size};\r\n  }\r\n\r\n  // fill\r\n  // color should be set to background\r\n  p.fill = {value: fieldDef.color};\r\n\r\n  var opacity = e.fieldDef(COLOR).opacity  || style.opacity;\r\n  if(opacity) p.opacity = {value: opacity};\r\n\r\n  // text\r\n  if (e.has(TEXT)) {\r\n    if (e.fieldDef(TEXT).type === QUANTITATIVE) {\r\n      var numberFormat = fieldDef.format !== undefined ?\r\n                         fieldDef.format : e.numberFormat(TEXT);\r\n\r\n      p.text = {template: '{{' + e.fieldRef(TEXT, {datum: true}) + ' | number:\\'' +\r\n        numberFormat +'\\'}}'};\r\n      p.align = {value: fieldDef.align};\r\n    } else {\r\n      p.text = {field: e.fieldRef(TEXT)};\r\n    }\r\n  } else {\r\n    p.text = {value: fieldDef.placeholder};\r\n  }\r\n\r\n  p.font = {value: fieldDef.font.family};\r\n  p.fontWeight = {value: fieldDef.font.weight};\r\n  p.fontStyle = {value: fieldDef.font.style};\r\n  p.baseline = {value: fieldDef.baseline};\r\n\r\n  return p;\r\n}\r\n","/// <reference path=\"../../typings/colorbrewer.d.ts\"/>\r\n/// <reference path=\"../../typings/d3-color.d.ts\"/>\r\n\r\n// https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#11-ambient-declarations\r\ndeclare var exports;\r\n\r\nimport * as colorbrewer from 'colorbrewer';\r\nimport {interpolateHsl} from 'd3-color';\r\n\r\nimport * as util from '../util';\r\nimport {Model} from './Model';\r\nimport {SHARED_DOMAIN_OPS} from '../aggregate';\r\nimport {COLUMN, ROW, X, Y, SHAPE, SIZE, COLOR, TEXT, Channel} from '../channel';\r\nimport {SOURCE, STACKED} from '../data';\r\nimport * as time from './time';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\r\n\r\n// TODO: consider if we can remove this and simplify the codebase\r\nexport function compileScaleNames(props) {\r\n  return util.keys(util.keys(props).reduce(function(a, x) {\r\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\r\n    return a;\r\n  }, {}));\r\n}\r\n\r\nexport function compileScales(names: Array<string>, model: Model, layout, stats, facet?) {\r\n  return names.reduce(function(a, channel: Channel) {\r\n    var scaleDef: any = {};\r\n\r\n    scaleDef.name = channel;\r\n    var t = scaleDef.type = type(channel, model);\r\n    scaleDef.domain = domain(model, channel, t, facet);\r\n\r\n    // Add optional properties\r\n    [\r\n      // general properties\r\n      'range', 'reverse', 'round',\r\n      // quantitative / time\r\n      'clamp', 'nice',\r\n      // quantitative\r\n      'exponent', 'zero',\r\n      // ordinal\r\n      'bandWidth', 'outerPadding', 'padding', 'points'\r\n    ].forEach(function(property) {\r\n      var value = exports[property](model, channel, t, layout, stats);\r\n      if (value !== undefined) {\r\n        scaleDef[property] = value;\r\n      }\r\n    });\r\n\r\n    return (a.push(scaleDef), a);\r\n  }, []);\r\n}\r\n\r\nexport function type(channel: Channel, model: Model) {\r\n  const fieldDef = model.fieldDef(channel);\r\n  switch (fieldDef.type) {\r\n    case NOMINAL: //fall through\r\n    case ORDINAL:\r\n      return 'ordinal';\r\n    case TEMPORAL:\r\n      return fieldDef.timeUnit ? time.scale.type(fieldDef.timeUnit, channel) : 'time';\r\n    case QUANTITATIVE:\r\n      if (model.bin(channel)) {\r\n        return channel === ROW || channel === COLUMN || channel === SHAPE ? 'ordinal' : 'linear';\r\n      }\r\n      return fieldDef.scale.type;\r\n  }\r\n}\r\n\r\nexport function domain(model: Model, channel:Channel, type, facet:boolean = false) {\r\n  var fieldDef = model.fieldDef(channel);\r\n\r\n  if (fieldDef.scale.domain) { // explicit value\r\n    return fieldDef.scale.domain;\r\n  }\r\n\r\n  // special case for temporal scale\r\n  if (fieldDef.type === TEMPORAL) {\r\n    var range = time.scale.domain(fieldDef.timeUnit, channel);\r\n    if (range) return range;\r\n  }\r\n\r\n  // For stack, use STACKED data.\r\n  var stack = model.stack();\r\n  if (stack && channel === stack.fieldChannel) {\r\n    return {\r\n      data: STACKED,\r\n      field: model.fieldRef(channel, {\r\n        // If faceted, scale is determined by the max of sum in each facet.\r\n        prefn: (facet ? 'max_' : '') + 'sum_'\r\n      })\r\n    };\r\n  }\r\n\r\n  var useRawDomain = _useRawDomain(model, channel);\r\n  var sort = domainSort(model, channel, type);\r\n\r\n  if (useRawDomain) { // useRawDomain - only Q/T\r\n    return {\r\n      data: SOURCE,\r\n      field: model.fieldRef(channel, {noAggregate:true})\r\n    };\r\n  } else if (fieldDef.bin) { // bin\r\n\r\n    return {\r\n      data: model.dataTable(),\r\n      field: type === 'ordinal' ?\r\n        // ordinal scale only use bin start for now\r\n        model.fieldRef(channel, { binSuffix: '_start' }) :\r\n        // need to merge both bin_start and bin_end for non-ordinal scale\r\n        [\r\n          model.fieldRef(channel, { binSuffix: '_start' }),\r\n          model.fieldRef(channel, { binSuffix: '_end' })\r\n        ]\r\n    };\r\n  } else if (sort) { // have sort -- only for ordinal\r\n    return {\r\n      // If sort by aggregation of a specified sort field, we need to use SOURCE table,\r\n      // so we can aggregate values for the scale independently from the main aggregation.\r\n      data: sort.op ? SOURCE : model.dataTable(),\r\n      field: model.fieldRef(channel),\r\n      sort: sort\r\n    };\r\n  } else {\r\n    return {\r\n      data: model.dataTable(),\r\n      field: model.fieldRef(channel)\r\n    };\r\n  }\r\n}\r\n\r\nexport function domainSort(model: Model, channel: Channel, type):any {\r\n  var sort = model.fieldDef(channel).sort;\r\n  if (sort === 'ascending' || sort === 'descending') {\r\n    return true;\r\n  }\r\n\r\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\r\n  if (type === 'ordinal' && util.isObject(sort)) {\r\n    return {\r\n      op: sort.op,\r\n      field: sort.field\r\n    };\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function reverse(model: Model, channel: Channel) {\r\n  var sort = model.fieldDef(channel).sort;\r\n  return sort && (sort === 'descending' || (sort.order === 'descending')) ? true : undefined;\r\n}\r\n\r\n/**\r\n * Determine if useRawDomain should be activated for this scale.\r\n * @return {Boolean} Returns true if all of the following conditons applies:\r\n * 1. `useRawDomain` is enabled either through scale or config\r\n * 2. Aggregation function is not `count` or `sum`\r\n * 3. The scale is quantitative or time scale.\r\n */\r\nexport function _useRawDomain (model: Model, channel: Channel) {\r\n  const fieldDef = model.fieldDef(channel);\r\n  const scaleUseRawDomain = fieldDef.scale.useRawDomain;\r\n\r\n  // Determine if useRawDomain is enabled. If scale value is specified, use scale value.\r\n  // Otherwise, use config value.\r\n  var useRawDomainEnabled = scaleUseRawDomain !== undefined ?\r\n      scaleUseRawDomain : model.config('useRawDomain');\r\n\r\n  return  useRawDomainEnabled &&\r\n    // only applied to aggregate table\r\n    fieldDef.aggregate &&\r\n    // only activated if used with aggregate functions that produces values ranging in the domain of the source data\r\n    SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\r\n    (\r\n      // Q always uses quantitative scale except when it's binned.\r\n      // Binned field has similar values in both the source table and the summary table\r\n      // but the summary table has fewer values, therefore binned fields draw\r\n      // domain values from the summary table.\r\n      (fieldDef.type === QUANTITATIVE && !fieldDef.bin) ||\r\n      // T uses non-ordinal scale when there's no unit or when the unit is not ordinal.\r\n      (fieldDef.type === TEMPORAL &&\r\n        (!fieldDef.timeUnit || !time.isOrdinalFn(fieldDef.timeUnit))\r\n      )\r\n    );\r\n}\r\n\r\nexport function bandWidth(model: Model, channel: Channel, type, layout) {\r\n  // TODO: eliminate layout\r\n\r\n  switch (channel) {\r\n    case X: /* fall through */\r\n    case Y:\r\n      if (type === 'ordinal') {\r\n        return model.bandWidth(channel, layout[channel].useSmallBand);\r\n      }\r\n      break;\r\n    case ROW: // support only ordinal\r\n      return layout.cellHeight;\r\n    case COLUMN: // support only ordinal\r\n      return layout.cellWidth;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function clamp(model: Model, channel: Channel) {\r\n  // only return value if explicit value is specified.\r\n  return model.fieldDef(channel).scale.clamp;\r\n}\r\n\r\nexport function exponent(model: Model, channel: Channel) {\r\n  // only return value if explicit value is specified.\r\n  return model.fieldDef(channel).scale.exponent;\r\n}\r\n\r\nexport function nice(model: Model, channel: Channel, type) {\r\n  if (model.fieldDef(channel).scale.nice !== undefined) {\r\n    // explicit value\r\n    return model.fieldDef(channel).scale.nice;\r\n  }\r\n\r\n  switch (channel) {\r\n    case X: /* fall through */\r\n    case Y:\r\n      if (type === 'time' || type === 'ordinal') {\r\n        return undefined;\r\n      }\r\n      return true;\r\n\r\n    case ROW: /* fall through */\r\n    case COLUMN:\r\n      return true;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function outerPadding(model: Model, channel: Channel, type) {\r\n  if (type === 'ordinal') {\r\n    if (model.fieldDef(channel).scale.outerPadding !== undefined) {\r\n      return model.fieldDef(channel).scale.outerPadding; // explicit value\r\n    }\r\n    if (channel === ROW || channel === COLUMN) {\r\n      return 0;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function padding(model: Model, channel: Channel, type) {\r\n  if (type === 'ordinal') {\r\n    // Both explicit and non-explicit values are handled by the helper method.\r\n    return model.padding(channel);\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function points(model: Model, channel: Channel, type) {\r\n  if (type === 'ordinal') {\r\n    if (model.fieldDef(channel).scale.points !== undefined) {\r\n      // explicit value\r\n      return model.fieldDef(channel).scale.points;\r\n    }\r\n\r\n    switch (channel) {\r\n      case X:\r\n      case Y:\r\n        return true;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\nexport function range(model: Model, channel: Channel, type, layout, stats) {\r\n  var fieldDef = model.fieldDef(channel);\r\n\r\n  if (fieldDef.scale.range) { // explicit value\r\n    return fieldDef.scale.range;\r\n  }\r\n\r\n  switch (channel) {\r\n    case X:\r\n      return layout.cellWidth ? [0, layout.cellWidth] : 'width';\r\n    case Y:\r\n      if (type === 'ordinal') {\r\n        return layout.cellHeight ?\r\n          (fieldDef.bin ? [layout.cellHeight, 0] : [0, layout.cellHeight]) :\r\n          'height';\r\n      }\r\n      return layout.cellHeight ? [layout.cellHeight, 0] : 'height';\r\n    case SIZE:\r\n      if (model.is('bar')) {\r\n        // FIXME this is definitely incorrect\r\n        // but let's fix it later since bar size is a bad encoding anyway\r\n        return [3, Math.max(model.bandWidth(X), model.bandWidth(Y))];\r\n      } else if (model.is(TEXT)) {\r\n        return [8, 40];\r\n      }\r\n      // else -- point\r\n      var bandWidth = Math.min(model.bandWidth(X), model.bandWidth(Y)) - 1;\r\n      return [10, 0.8 * bandWidth*bandWidth];\r\n    case SHAPE:\r\n      return 'shapes';\r\n    case COLOR:\r\n      return color(model, channel, type, stats);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function round(model: Model, channel: Channel) {\r\n  if (model.fieldDef(channel).scale.round !== undefined) {\r\n    return model.fieldDef(channel).scale.round;\r\n  }\r\n\r\n  // FIXME: revise if round is already the default value\r\n  switch (channel) {\r\n    case X: /* fall through */\r\n    case Y:\r\n    case ROW:\r\n    case COLUMN:\r\n    case SIZE:\r\n      return true;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function zero(model: Model, channel: Channel) {\r\n  var fieldDef = model.fieldDef(channel);\r\n  var timeUnit = fieldDef.timeUnit;\r\n\r\n  if (fieldDef.scale.zero !== undefined) {\r\n    // explicit value\r\n    return fieldDef.scale.zero;\r\n  }\r\n\r\n  if (fieldDef.type === TEMPORAL) {\r\n    if (timeUnit === 'year') {\r\n      // year is using linear scale, but should not include zero\r\n      return false;\r\n    }\r\n    // If there is no timeUnit or the timeUnit uses ordinal scale,\r\n    // zero property is ignored by vega so we should not generate them any way\r\n    return undefined;\r\n  }\r\n  if (fieldDef.bin) {\r\n    // Returns false (undefined) by default of bin\r\n    return false;\r\n  }\r\n\r\n  return channel === X || channel === Y ?\r\n    // if not bin / temporal, returns undefined for X and Y encoding\r\n    // since zero is true by default in vega for linear scale\r\n    undefined :\r\n    false;\r\n}\r\n\r\nexport function color(model: Model, channel: Channel, scaleType, stats) {\r\n  const fieldDef = model.fieldDef(COLOR),\r\n    colorScale = fieldDef.scale,\r\n    cardinality = model.cardinality(COLOR, stats),\r\n    type = fieldDef.type;\r\n\r\n  let range = colorScale.range;\r\n\r\n  if (range === undefined) {\r\n    var ordinalPalette = colorScale.ordinalPalette,\r\n      quantitativeRange = colorScale.quantitativeRange;\r\n\r\n    if (scaleType === 'ordinal') {\r\n      if (type === NOMINAL) {\r\n        // use categorical color scale\r\n        if (cardinality <= 10) {\r\n          range = colorScale.c10palette;\r\n        } else {\r\n          range = colorScale.c20palette;\r\n        }\r\n        return colors.palette(range, cardinality, type);\r\n      } else {\r\n        if (ordinalPalette) {\r\n          return colors.palette(ordinalPalette, cardinality, type);\r\n        }\r\n        return colors.interpolate(quantitativeRange[0], quantitativeRange[1], cardinality);\r\n      }\r\n    } else { //time or quantitative\r\n      return [quantitativeRange[0], quantitativeRange[1]];\r\n    }\r\n  }\r\n}\r\n\r\nexport namespace colors {\r\n  export function palette(range, cardinality?, type?: String) {\r\n    // FIXME(kanitw): Jul 29, 2015 - check range is string\r\n    switch (range) {\r\n      case 'category10k':\r\n        // tableau's category 10, ordered by perceptual kernel study results\r\n        // https://github.com/uwdata/perceptual-kernels\r\n        return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\r\n\r\n      // d3/tableau category10/20/20b/20c\r\n      case 'category10':\r\n        return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\r\n\r\n      case 'category20':\r\n        return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\n      case 'category20b':\r\n        return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\r\n\r\n      case 'category20c':\r\n        return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\r\n    }\r\n\r\n    // TODO add our own set of custom ordinal color palette\r\n\r\n    if (range in colorbrewer) {\r\n      var palette = colorbrewer[range];\r\n\r\n      // if cardinality pre-defined, use it.\r\n      if (cardinality in palette) return palette[cardinality];\r\n\r\n      // if not, use the highest cardinality one for nominal\r\n      if (type === NOMINAL) {\r\n        return palette[Math.max.apply(null, util.keys(palette))];\r\n      }\r\n\r\n      // otherwise, interpolate\r\n      var ps = cardinality < 3 ? 3 : Math.max.apply(null, util.keys(palette)),\r\n        from = 0 , to = ps - 1;\r\n      // FIXME add config for from / to\r\n\r\n      return colors.interpolate(palette[ps][from], palette[ps][to], cardinality);\r\n    }\r\n\r\n    return range;\r\n  }\r\n\r\n  export function interpolate(start, end, cardinality) {\r\n    var interpolator = interpolateHsl(start, end);\r\n    return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\r\n  }\r\n}\r\n","import {Model} from './Model';\r\nimport {Channel} from '../channel';\r\nimport * as util from '../util';\r\n\r\nexport interface StackProperties {\r\n  groupbyChannel: Channel;\r\n  fieldChannel: Channel;\r\n  stackChannel: Channel; // COLOR or DETAIL\r\n  config: any;\r\n}\r\n\r\n// TODO: put all vega interface in one place\r\ninterface StackTransform {\r\n  type: string;\r\n  offset?: any;\r\n  groupby: any;\r\n  field: any;\r\n  sortby: any;\r\n  output: any;\r\n}\r\n\r\nexport default function(model: Model, mdef, stackProps: StackProperties) {\r\n  var groupby = stackProps.groupbyChannel;\r\n  var fieldChannel = stackProps.fieldChannel;\r\n\r\n  var valName = model.fieldRef(fieldChannel);\r\n  var startField = valName + '_start';\r\n  var endField = valName + '_end';\r\n\r\n  var transforms = [];\r\n\r\n  if (model.marktype() === 'area') {\r\n    // Add impute transform to ensure we have all values for each series\r\n    transforms.push({\r\n      type: 'impute',\r\n      field: model.fieldRef(fieldChannel),\r\n      groupby: [model.fieldRef(stackProps.stackChannel)],\r\n      orderby: [model.fieldRef(groupby)],\r\n      method: 'value',\r\n      value: 0\r\n    });\r\n  }\r\n\r\n  const sortby = stackProps.config.sort === 'descending' ?\r\n                   '-' + model.fieldRef(stackProps.stackChannel) :\r\n                 stackProps.config.sort === 'ascending' ?\r\n                   model.fieldRef(stackProps.stackChannel) :\r\n                 util.isObject(stackProps.config.sort) ?\r\n                   stackProps.config.sort :\r\n                   '-' + model.fieldRef(stackProps.stackChannel); // default\r\n\r\n  // add stack transform to mark\r\n  var stackTransform: StackTransform = {\r\n    type: 'stack',\r\n    groupby: [model.fieldRef(groupby)],\r\n    field: model.fieldRef(fieldChannel),\r\n    sortby: sortby,\r\n    output: {start: startField, end: endField}\r\n  };\r\n\r\n  if (stackProps.config.offset) {\r\n    stackTransform.offset = stackProps.config.offset;\r\n  }\r\n\r\n  transforms.push(stackTransform);\r\n\r\n  mdef.from.transform = transforms;\r\n\r\n  // TODO(#276): This is super hack-ish -- consolidate into modular mark properties?\r\n  mdef.properties.update[fieldChannel] = {\r\n    scale: fieldChannel,\r\n    field: startField\r\n  };\r\n  mdef.properties.update[fieldChannel + '2'] = {\r\n    scale: fieldChannel,\r\n    field: endField\r\n  };\r\n}\r\n","import {Model} from './Model';\r\nimport {FieldDef} from '../schema/fielddef.schema';\r\n\r\nimport * as vlFieldDef from '../fielddef';\r\nimport {ROW, COLUMN, X, Y, Channel} from '../channel';\r\n\r\nexport default function(model: Model, stats) {\r\n  return {\r\n    opacity: estimateOpacity(model, stats),\r\n  };\r\n};\r\n\r\nfunction estimateOpacity(model: Model, stats) {\r\n  if (!stats) {\r\n    return 1;\r\n  }\r\n\r\n  var numPoints = 0;\r\n\r\n  if (model.isAggregate()) { // aggregate plot\r\n    numPoints = 1;\r\n\r\n    //  get number of points in each \"cell\"\r\n    //  by calculating product of cardinality\r\n    //  for each non faceting and non-ordinal X / Y fields\r\n    //  note that ordinal x,y are not include since we can\r\n    //  consider that ordinal x are subdividing the cell into subcells anyway\r\n    model.forEach(function(fieldDef: FieldDef, channel: Channel) {\r\n\r\n      if (channel !== ROW && channel !== COLUMN &&\r\n          !((channel === X || channel === Y) &&\r\n          vlFieldDef.isOrdinalScale(fieldDef))\r\n        ) {\r\n        numPoints *= model.cardinality(channel, stats);\r\n      }\r\n    });\r\n\r\n  } else { // raw plot\r\n\r\n    // TODO: error handling\r\n    if (!stats['*'])\r\n      return 1;\r\n\r\n    numPoints = stats['*'].max;  // count\r\n\r\n    // small multiples divide number of points\r\n    var numMultiples = 1;\r\n    if (model.has(ROW)) {\r\n      numMultiples *= model.cardinality(ROW, stats);\r\n    }\r\n    if (model.has(COLUMN)) {\r\n      numMultiples *= model.cardinality(COLUMN, stats);\r\n    }\r\n    numPoints /= numMultiples;\r\n  }\r\n\r\n  var opacity = 0;\r\n  if (numPoints <= 25) {\r\n    opacity = 1;\r\n  } else if (numPoints < 200) {\r\n    opacity = 0.8;\r\n  } else if (numPoints < 1000 || model.is('tick')) {\r\n    opacity = 0.7;\r\n  } else {\r\n    opacity = 0.3;\r\n  }\r\n\r\n  return opacity;\r\n}\r\n","export default function(group, mdef, details) {\r\n  var m = group.marks;\r\n  var g = {\r\n    name: 'subfacet',\r\n    type: 'group',\r\n    from: mdef.from,\r\n    properties: {\r\n      enter: {\r\n        width: {field: {group: 'width'}},\r\n        height: {field: {group: 'height'}}\r\n      }\r\n    },\r\n    marks: m\r\n  };\r\n\r\n  group.marks = [g];\r\n  delete mdef.from; // (move to the new g)\r\n\r\n  //TODO test LOD -- we should support stack / line without color (LOD) field\r\n  var trans = (g.from.transform || (g.from.transform = []));\r\n  trans.push({type: 'facet', groupby: details});\r\n}\r\n","/// <reference path=\"../../typings/d3-time-format.d.ts\"/>\r\n\r\nimport {utcFormat} from 'd3-time-format';\r\n\r\nimport {Model} from './Model';\r\nimport {FieldDef} from '../schema/fielddef.schema';\r\nimport * as vlFieldDef from '../fielddef';\r\nimport * as util from '../util';\r\nimport {COLOR, COLUMN, ROW, Channel} from '../channel';\r\nimport {TEMPORAL} from '../type';\r\n\r\n// 'Wednesday September 17 04:00:00 2014'\r\n// Wednesday is the longest date\r\n// September is the longest month (8 in javascript as it is zero-indexed).\r\nconst LONG_DATE = new Date(Date.UTC(2014, 8, 17));\r\n\r\nexport function cardinality(fieldDef: FieldDef, stats, filterNull, type) {\r\n  var timeUnit = fieldDef.timeUnit;\r\n  switch (timeUnit) {\r\n    case 'seconds': return 60;\r\n    case 'minutes': return 60;\r\n    case 'hours': return 24;\r\n    case 'day': return 7;\r\n    case 'date': return 31;\r\n    case 'month': return 12;\r\n    case 'year':\r\n      var stat = stats[fieldDef.field],\r\n        yearstat = stats['year_' + fieldDef.field];\r\n\r\n      if (!yearstat) { return null; }\r\n\r\n      return yearstat.distinct -\r\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function formula(timeUnit, fieldRef: string) {\r\n  // TODO(kanitw): add formula to other time format\r\n  var fn = 'utc' + timeUnit;\r\n  return fn + '(' + fieldRef + ')';\r\n}\r\n\r\nexport function maxLength(timeUnit, model: Model) {\r\n  switch (timeUnit) {\r\n    case 'seconds':\r\n    case 'minutes':\r\n    case 'hours':\r\n    case 'date':\r\n      return 2;\r\n    case 'month':\r\n    case 'day':\r\n      var rng = range(timeUnit, model);\r\n      if (rng) {\r\n        // return the longest name in the range\r\n        return Math.max.apply(null, rng.map(function(r) {return r.length;}));\r\n      }\r\n      return 2;\r\n    case 'year':\r\n      return 4; //'1998'\r\n  }\r\n  // TODO(#600) revise this\r\n  // no time unit\r\n  var timeFormat = model.config('timeFormat');\r\n  return utcFormat(timeFormat)(LONG_DATE).length;\r\n}\r\n\r\nexport function range(timeUnit, model: Model) {\r\n  var labelLength = model.config('timeScaleLabelLength'),\r\n    scaleLabel;\r\n  switch (timeUnit) {\r\n    case 'day':\r\n      scaleLabel = model.config('dayScaleLabel');\r\n      break;\r\n    case 'month':\r\n      scaleLabel = model.config('monthScaleLabel');\r\n      break;\r\n  }\r\n  if (scaleLabel) {\r\n    return labelLength ? scaleLabel.map(\r\n        function(s) { return s.substr(0, labelLength);}\r\n      ) : scaleLabel;\r\n  }\r\n  return;\r\n}\r\n\r\n\r\n/**\r\n * @param  {Model} model\r\n * @return {Array}  scales for time unit names\r\n */\r\nexport function scales(model: Model) {\r\n  var scales = model.reduce(function(scales, fieldDef) {\r\n    var timeUnit = fieldDef.timeUnit;\r\n    if (fieldDef.type === TEMPORAL && timeUnit && !scales[timeUnit]) {\r\n      var scaleDef = scale.def(fieldDef.timeUnit, model);\r\n      if (scaleDef) scales[timeUnit] = scaleDef;\r\n    }\r\n    return scales;\r\n  }, {});\r\n\r\n  return util.vals(scales);\r\n}\r\n\r\nexport function isOrdinalFn(timeUnit) {\r\n  switch (timeUnit) {\r\n    case 'seconds':\r\n    case 'minutes':\r\n    case 'hours':\r\n    case 'day':\r\n    case 'date':\r\n    case 'month':\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\nexport namespace scale {\r\n  /** append custom time scales for axis label */\r\n  export function def(timeUnit, model: Model) {\r\n    var rangeDef = range(timeUnit, model);\r\n\r\n    if (rangeDef) {\r\n      return {\r\n        name: 'time-'+timeUnit,\r\n        type: 'ordinal',\r\n        domain: scale.domain(timeUnit),\r\n        range: rangeDef\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  export function type(timeUnit, channel: Channel) {\r\n    if (channel === COLOR) {\r\n      return 'linear'; // time has order, so use interpolated ordinal color scale.\r\n    }\r\n\r\n    // FIXME revise this -- should 'year' be linear too?\r\n    return isOrdinalFn(timeUnit) || channel === COLUMN || channel === ROW ? 'ordinal' : 'linear';\r\n  }\r\n\r\n  export function domain(timeUnit, channel?: Channel) {\r\n    var isColor = channel === COLOR;\r\n    switch (timeUnit) {\r\n      case 'seconds':\r\n      case 'minutes': return isColor ? [0,59] : util.range(0, 60);\r\n      case 'hours': return isColor ? [0,23] : util.range(0, 24);\r\n      case 'day': return isColor ? [0,6] : util.range(0, 7);\r\n      case 'date': return isColor ? [1,31] : util.range(1, 32);\r\n      case 'month': return isColor ? [0,11] : util.range(0, 12);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n/** whether a particular time function has custom scale for labels implemented in time.scale */\r\nexport function hasScale(timeUnit) {\r\n  switch (timeUnit) {\r\n    case 'day':\r\n    case 'month':\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n","/*\r\n * Constants and utilities for data.\r\n */\r\n\r\nimport * as util from './util';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from './type';\r\n\r\nexport const SUMMARY = 'summary';\r\nexport const SOURCE = 'source';\r\nexport const STACKED = 'stacked';\r\n\r\n/** Mapping from datalib's inferred type to Vega-lite's type */\r\n// TODO: ALL_CAPS\r\nexport const types = {\r\n  'boolean': NOMINAL,\r\n  'number': QUANTITATIVE,\r\n  'integer': QUANTITATIVE,\r\n  'date': TEMPORAL,\r\n  'string': NOMINAL\r\n};\r\n\r\nexport function stats(data: Array<Array<any>>) {\r\n  var summary = util.summary(data);\r\n\r\n  return summary.reduce(function(s, profile) {\r\n    s[profile.field] = profile;\r\n    return s;\r\n  }, {\r\n    '*': {\r\n      max: data.length,\r\n      min: 0\r\n    }\r\n  });\r\n}\r\n","// utility for encoding mapping\r\nimport {Encoding} from './schema/encoding.schema';\r\nimport {FieldDef} from './schema/fielddef.schema';\r\n\r\nimport {Channel, CHANNELS} from './channel';\r\nimport * as vlFieldDef from './fielddef';\r\nimport * as util from './util';\r\n\r\nexport function countRetinal(encoding: Encoding) {\r\n  var count = 0;\r\n  if (encoding.color) count++;\r\n  if (encoding.size) count++;\r\n  if (encoding.shape) count++;\r\n  return count;\r\n}\r\n\r\nexport function has(encoding: Encoding, channel: Channel) {\r\n  var fieldDef: FieldDef = encoding && encoding[channel];\r\n  return fieldDef && fieldDef.field;\r\n}\r\n\r\nexport function isAggregate(encoding: Encoding) {\r\n  for (var k in encoding) {\r\n    if (has(encoding, k) && encoding[k].aggregate) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function forEach(encoding: Encoding,\r\n                        f: (fd: FieldDef, c: Channel, i:number) => void) {\r\n  var i = 0;\r\n  CHANNELS.forEach(function(channel) {\r\n    if (has(encoding, channel)) {\r\n      f(encoding[channel], channel, i++);\r\n    }\r\n  });\r\n}\r\n\r\nexport function map(encoding: Encoding,\r\n                    f: (fd: FieldDef, c: Channel, e: Encoding) => any) {\r\n  var arr = [];\r\n  CHANNELS.forEach(function(k) {\r\n    if (has(encoding, k)) {\r\n      arr.push(f(encoding[k], k, encoding));\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nexport function reduce(encoding: Encoding,\r\n                  f: (acc: any, fd: FieldDef, c: Channel, e: Encoding) => any,\r\n                  init) {\r\n  var r = init;\r\n  CHANNELS.forEach(function(k) {\r\n    if (has(encoding, k)) {\r\n      r = f(r, encoding[k], k,  encoding);\r\n    }\r\n  });\r\n  return r;\r\n}\r\n\r\n// FIXME: revise this / consider if we should remove\r\n/**\r\n * return key-value pairs of field name and list of fields of that field name\r\n */\r\nexport function fields(encoding: Encoding) {\r\n  return reduce(encoding, function (m, fieldDef: FieldDef) {\r\n    var fieldList = m[fieldDef.field] = m[fieldDef.field] || [];\r\n    var containsType = fieldList.containsType = fieldList.containsType || {};\r\n\r\n    if (fieldList.indexOf(fieldDef) === -1) {\r\n      fieldList.push(fieldDef);\r\n      // augment the array with containsType.Q / O / N / T\r\n      containsType[fieldDef.type] = true;\r\n    }\r\n    return m;\r\n  }, {});\r\n}\r\n","// utility for a field definition object\r\n\r\nimport {FieldDef} from './schema/fielddef.schema';\r\nimport {Bin} from './schema/bin.schema';\r\n\r\nimport {MAXBINS_DEFAULT} from './bin';\r\nimport {AGGREGATE_OPS} from './aggregate';\r\nimport * as util from './util';\r\nimport * as time from './compiler/time';\r\nimport {TIMEUNITS} from './timeunit';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL, SHORT_TYPE, TYPE_FROM_SHORT_TYPE} from './type';\r\n\r\nexport interface FieldRefOption {\r\n  /** exclude bin, aggregate, timeUnit */\r\n  nofn?: boolean;\r\n  /** exclude aggregation function */\r\n  noAggregate?: boolean;\r\n  /** include 'datum.' */\r\n  datum?: boolean;\r\n  /** replace fn with custom function prefix */\r\n  fn?: string;\r\n  /** prepend fn with custom function prefix */\r\n  prefn?: string;\r\n  /** append suffix to the field ref for bin (default='_start') */\r\n  binSuffix?: string;\r\n}\r\n\r\nexport function fieldRef(fieldDef: FieldDef, opt?: FieldRefOption) {\r\n  opt = opt || {};\r\n\r\n  var f = (opt.datum ? 'datum.' : '') + (opt.prefn || ''),\r\n    field = fieldDef.field;\r\n\r\n  if (isCount(fieldDef)) {\r\n    return f + 'count';\r\n  } else if (opt.fn) {\r\n    return f + opt.fn + '_' + field;\r\n  } else if (!opt.nofn && fieldDef.bin) {\r\n    var binSuffix = opt.binSuffix || '_start';\r\n    return f + 'bin_' + field + binSuffix;\r\n  } else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\r\n    return f + fieldDef.aggregate + '_' + field;\r\n  } else if (!opt.nofn && fieldDef.timeUnit) {\r\n    return f + fieldDef.timeUnit + '_' + field;\r\n  }  else {\r\n    return f + field;\r\n  }\r\n}\r\n\r\nexport function isTypes(fieldDef: FieldDef, types: Array<String>) {\r\n  for (var t = 0; t < types.length; t++) {\r\n    if (fieldDef.type === types[t]) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/*\r\n * Most fields that use ordinal scale are dimensions.\r\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\r\n */\r\nexport function isOrdinalScale(fieldDef: FieldDef) {\r\n  return  isTypes(fieldDef, [NOMINAL, ORDINAL]) ||\r\n    (fieldDef.type === TEMPORAL && fieldDef.timeUnit && time.isOrdinalFn(fieldDef.timeUnit) );\r\n}\r\n\r\n\r\n// TODO remove these \"isDimension/isMeasure\" stuff\r\nfunction _isFieldDimension(fieldDef: FieldDef) {\r\n  return  isTypes(fieldDef, [NOMINAL, ORDINAL]) || !!fieldDef.bin ||\r\n    (fieldDef.type === TEMPORAL && !!fieldDef.timeUnit );\r\n}\r\n\r\nexport function isDimension(fieldDef: FieldDef) {\r\n  return fieldDef && _isFieldDimension(fieldDef);\r\n}\r\n\r\nexport function isMeasure(fieldDef: FieldDef) {\r\n  return fieldDef && !_isFieldDimension(fieldDef);\r\n}\r\n\r\nexport function count(): FieldDef {\r\n  return {field:'*', aggregate: 'count', type: QUANTITATIVE, displayName: COUNT_DISPLAYNAME};\r\n}\r\n\r\nexport const COUNT_DISPLAYNAME = 'Number of Records';\r\n\r\nexport function isCount(fieldDef: FieldDef) {\r\n  return fieldDef.aggregate === 'count';\r\n}\r\n\r\nexport function cardinality(fieldDef: FieldDef, stats, filterNull = {}) {\r\n  // FIXME need to take filter into account\r\n\r\n  var stat = stats[fieldDef.field];\r\n  var type = fieldDef.type;\r\n\r\n  if (fieldDef.bin) {\r\n    // need to reassign bin, otherwise compilation will fail due to a TS bug.\r\n    const bin = fieldDef.bin;\r\n    const maxbins = (typeof bin === 'boolean') ? MAXBINS_DEFAULT : bin.maxbins;\r\n\r\n    var bins = util.getbins(stat, maxbins);\r\n    return (bins.stop - bins.start) / bins.step;\r\n  }\r\n  if (fieldDef.type === TEMPORAL) {\r\n    var cardinality = time.cardinality(fieldDef, stats, filterNull, type);\r\n    if(cardinality !== null) return cardinality;\r\n    //otherwise use calculation below\r\n  }\r\n  if (fieldDef.aggregate) {\r\n    return 1;\r\n  }\r\n\r\n  // remove null\r\n  return stat.distinct -\r\n    (stat.missing > 0 && filterNull[type] ? 1 : 0);\r\n}\r\n","export const AREA = 'area';\r\nexport const BAR = 'bar';\r\nexport const LINE = 'line';\r\nexport const POINT = 'point';\r\nexport const TEXT = 'text';\r\nexport const TICK = 'tick';\r\n","export interface Axis {\r\n  // Vega Axis Properties\r\n  format?: string;\r\n  grid?: boolean;\r\n  layer?: string;\r\n  orient?: string;\r\n  ticks?: string;\r\n  title?: string;\r\n  // Vega-Lite only\r\n  labelMaxLength?: number;\r\n  titleMaxLength?: number;\r\n  titleOffset?: number;\r\n  properties?: any; // TODO: declare VgAxisProperties\r\n}\r\n\r\nexport var axis = {\r\n  type: 'object',\r\n  properties: {\r\n    /* Vega Axis Properties */\r\n    format: {\r\n      type: 'string',\r\n      default: undefined,  // auto\r\n      description: 'The formatting pattern for axis labels. '+\r\n                   'If not undefined, this will be determined by ' +\r\n                   'the max value ' +\r\n                   'of the field.'\r\n    },\r\n    grid: {\r\n      type: 'boolean',\r\n      default: undefined,\r\n      description: 'A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.'\r\n    },\r\n    layer: {\r\n      type: 'string',\r\n      default: undefined,\r\n      description: 'A string indicating if the axis (and any gridlines) should be placed above or below the data marks.'\r\n    },\r\n    orient: {\r\n      type: 'string',\r\n      default: undefined,\r\n      enum: ['top', 'right', 'left', 'bottom'],\r\n      description: 'The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).'\r\n    },\r\n    ticks: {\r\n      type: 'integer',\r\n      default: undefined,\r\n      minimum: 0,\r\n      description: 'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale\\'s range.'\r\n    },\r\n    /* Vega Axis Properties that are automatically populated by Vega-lite */\r\n    title: {\r\n      type: 'string',\r\n      default: undefined,\r\n      description: 'A title for the axis. (Shows field name and its function by default.)'\r\n    },\r\n    /* Vega-lite only */\r\n    labelMaxLength: {\r\n      type: 'integer',\r\n      default: 25,\r\n      minimum: 0,\r\n      description: 'Truncate labels that are too long.'\r\n    },\r\n    titleMaxLength: {\r\n      type: 'integer',\r\n      default: undefined,\r\n      minimum: 0,\r\n      description: 'Max length for axis title if the title is automatically generated from the field\\'s description'\r\n    },\r\n    titleOffset: {\r\n      type: 'integer',\r\n      default: undefined,  // auto\r\n      description: 'A title offset value for the axis.'\r\n    },\r\n    properties: {\r\n      type: 'object',\r\n      default: undefined,\r\n      description: 'Optional mark property definitions for custom axis styling.'\r\n    }\r\n  }\r\n};\r\n","import {MAXBINS_DEFAULT} from '../bin';\r\nimport {QUANTITATIVE} from '../type';\r\nimport {toMap} from '../util';\r\n\r\n// TODO: add other bin properties\r\n\r\nexport interface Bin {\r\n  maxbins: number;\r\n}\r\n\r\nexport var bin = {\r\n  type: ['boolean', 'object'],\r\n  default: false,\r\n  properties: {\r\n    maxbins: {\r\n      type: 'integer',\r\n      default: MAXBINS_DEFAULT,\r\n      minimum: 2,\r\n      description: 'Maximum number of bins.'\r\n    }\r\n  },\r\n  supportedTypes: toMap([QUANTITATIVE]) // TODO: add O after finishing #81\r\n};\r\n","// TODO: add interface Config\r\n\r\nexport var config = {\r\n  type: 'object',\r\n  properties: {\r\n    // template\r\n    width: {\r\n      type: 'integer',\r\n      default: undefined\r\n    },\r\n    height: {\r\n      type: 'integer',\r\n      default: undefined\r\n    },\r\n    viewport: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'integer'\r\n      },\r\n      default: undefined\r\n    },\r\n    gridColor: {\r\n      type: 'string',\r\n      role: 'color',\r\n      default: '#000000'\r\n    },\r\n    gridOpacity: {\r\n      type: 'number',\r\n      minimum: 0,\r\n      maximum: 1,\r\n      default: 0.08\r\n    },\r\n\r\n    // filter null\r\n    // TODO(#597) revise this config\r\n    filterNull: {\r\n      type: 'object',\r\n      properties: {\r\n        nominal: {type:'boolean', default: false},\r\n        ordinal: {type:'boolean', default: false},\r\n        quantitative: {type:'boolean', default: true},\r\n        temporal: {type:'boolean', default: true}\r\n      }\r\n    },\r\n    autoSortLine: {\r\n      type: 'boolean',\r\n      default: true\r\n    },\r\n\r\n    // single plot\r\n    singleHeight: {\r\n      // will be overwritten by bandWidth * (cardinality + padding)\r\n      type: 'integer',\r\n      default: 200,\r\n      minimum: 0\r\n    },\r\n    singleWidth: {\r\n      // will be overwritten by bandWidth * (cardinality + padding)\r\n      type: 'integer',\r\n      default: 200,\r\n      minimum: 0\r\n    },\r\n    // band size\r\n    largeBandWidth: {\r\n      type: 'integer',\r\n      default: 21,\r\n      minimum: 0\r\n    },\r\n    smallBandWidth: {\r\n      //small multiples or single plot with high cardinality\r\n      type: 'integer',\r\n      default: 12,\r\n      minimum: 0\r\n    },\r\n    largeBandMaxCardinality: {\r\n      type: 'integer',\r\n      default: 10\r\n    },\r\n    padding: {\r\n      type: 'number',\r\n      default: 1,\r\n      description: 'default scale padding for ordinal x/y scales.'\r\n    },\r\n    // small multiples\r\n    cellPadding: {\r\n      type: 'number',\r\n      default: 0.1,\r\n      description: 'default scale padding for row/column scales.'\r\n    },\r\n    cellGridColor: {\r\n      type: 'string',\r\n      role: 'color',\r\n      default: '#000000'\r\n    },\r\n    cellGridOpacity: {\r\n      type: 'number',\r\n      minimum: 0,\r\n      maximum: 1,\r\n      default: 0.25\r\n    },\r\n    cellGridOffset: {\r\n      type: 'number',\r\n      default: 6 // equal to tickSize\r\n    },\r\n    cellBackgroundColor: {\r\n      type: 'string',\r\n      role: 'color',\r\n      default: 'rgba(0,0,0,0)'\r\n    },\r\n    textCellWidth: {\r\n      type: 'integer',\r\n      default: 90,\r\n      minimum: 0\r\n    },\r\n\r\n    // layout\r\n    stack: {\r\n      type: ['boolean', 'object'],\r\n      default: {},\r\n      description: 'Enable stacking (for bar and area marks only).',\r\n      properties: {\r\n        sort: {\r\n          oneOf: [{\r\n            type: 'string',\r\n            enum: ['ascending', 'descending']\r\n          },{\r\n            type: 'array',\r\n            items: {type: 'string'},\r\n          }],\r\n          description: 'Order of the stack. ' +\r\n            'This can be either a string (either \"descending\" or \"ascending\")' +\r\n            'or a list of fields to determine the order of stack layers.' +\r\n            'By default, stack uses descending order.'\r\n        },\r\n        offset: {\r\n          type: 'string',\r\n          enum: ['zero', 'center', 'normalize']\r\n          // TODO(#620) refer to Vega spec once it doesn't throw error\r\n          // enum: vgStackSchema.properties.offset.oneOf[0].enum\r\n        }\r\n      }\r\n    },\r\n\r\n    // marks\r\n    strokeWidth: {\r\n      type: 'integer',\r\n      default: 2,\r\n      minimum: 0\r\n    },\r\n    singleBarOffset: {\r\n      type: 'integer',\r\n      default: 5,\r\n      minimum: 0\r\n    },\r\n    // scales\r\n    timeScaleLabelLength: {\r\n      type: 'integer',\r\n      default: 3,\r\n      minimum: 0,\r\n      description: 'Max length for values in dayScaleLabel and monthScaleLabel.  Zero means using full names in dayScaleLabel/monthScaleLabel.'\r\n    },\r\n    dayScaleLabel: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'string'\r\n      },\r\n      default: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n      description: 'Axis labels for day of week, starting from Sunday.' +\r\n        '(Consistent with Javascript -- See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay.'\r\n    },\r\n    monthScaleLabel: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'string'\r\n      },\r\n      default: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n      description: 'Axis labels for month.'\r\n    },\r\n    // other\r\n    characterWidth: {\r\n      type: 'integer',\r\n      default: 6\r\n    },\r\n    numberFormat: {\r\n      type: 'string',\r\n      default: 's',\r\n      description: 'D3 Number format for axis labels and text tables.'\r\n    },\r\n    timeFormat: {\r\n      type: 'string',\r\n      default: '%Y-%m-%d',\r\n      description: 'Date format for axis labels.'\r\n    },\r\n    useRawDomain: {\r\n      type: 'boolean',\r\n      default: false,\r\n      description: 'Use the source data range as scale domain instead of ' +\r\n                   'aggregated data for aggregate axis. ' +\r\n                   'This option does not work with sum or count aggregate' +\r\n                   'as they might have a substantially larger scale range.' +\r\n                   'By default, use value from config.useRawDomain.'\r\n    }\r\n  }\r\n};\r\n","export interface Data {\r\n  formatType?: string;\r\n  url?: string;\r\n  values?: any[];\r\n  filter?: string;\r\n  calculate?: VgFormula[];\r\n}\r\n\r\n// TODO move this to one central position\r\nexport interface VgFormula {\r\n  field: string;\r\n  expr: string;\r\n}\r\n\r\nexport var data = {\r\n  type: 'object',\r\n  properties: {\r\n    // data source\r\n    formatType: {\r\n      type: 'string',\r\n      enum: ['json', 'csv', 'tsv'],\r\n      default: 'json'\r\n    },\r\n    url: {\r\n      type: 'string',\r\n      default: undefined\r\n    },\r\n    values: {\r\n      type: 'array',\r\n      default: undefined,\r\n      description: 'Pass array of objects instead of a url to a file.',\r\n      items: {\r\n        type: 'object',\r\n        additionalProperties: true\r\n      }\r\n    },\r\n    // we generate a vega filter transform\r\n    filter: {\r\n      type: 'string',\r\n      default: undefined,\r\n      description: 'A string containing the filter Vega expression. Use `datum` to refer to the current data object.'\r\n    },\r\n    // we generate a vega formula transform\r\n    calculate: {\r\n      type: 'array',\r\n      default: undefined,\r\n      description: 'Calculate new field(s) using the provided expresssion(s). Calculation are applied before filter.',\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          field: {\r\n            type: 'string',\r\n            description: 'The field in which to store the computed formula value.'\r\n          },\r\n          expr: {\r\n            type: 'string',\r\n            description: 'A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object.'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","/// <reference path=\"../../typings/colorbrewer.d.ts\"/>\r\nimport * as colorbrewer from 'colorbrewer';\r\n\r\nimport {merge} from './schemautil';\r\nimport {duplicate} from '../util';\r\nimport * as vlUtil from '../util';\r\n\r\n\r\nimport {axis} from './axis.schema';\r\nimport {FieldDef} from './fielddef.schema';\r\nimport {legend} from './legend.schema';\r\nimport {sort} from './sort.schema';\r\nimport {typicalField, onlyOrdinalField} from './fielddef.schema';\r\n\r\nexport interface Encoding {\r\n  x?: FieldDef;\r\n  y?: FieldDef;\r\n  row?: FieldDef;\r\n  column?: FieldDef;\r\n  color?: FieldDef;\r\n  size?: FieldDef;\r\n  shape?: FieldDef;\r\n  detail?: FieldDef;\r\n  text?: FieldDef;\r\n}\r\n\r\n// TODO: remove if possible\r\nvar requiredNameType = {\r\n  required: ['field', 'type']\r\n};\r\n\r\nvar x = merge(duplicate(typicalField), requiredNameType, {\r\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\r\n  properties: {\r\n    axis: axis,\r\n    sort: sort\r\n  }\r\n});\r\nvar y = duplicate(x);\r\n\r\nvar facet = merge(duplicate(onlyOrdinalField), requiredNameType, {\r\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\r\n  properties: {\r\n    axis: axis,\r\n    sort: sort\r\n  }\r\n});\r\n\r\nvar row = merge(duplicate(facet), {\r\n  properties: {\r\n    // FIXME use this over config\r\n    height: {\r\n      type: 'number',\r\n      minimum: 0,\r\n      default: 150\r\n    }\r\n  }\r\n});\r\n\r\nvar column = merge(duplicate(facet), {\r\n  properties: {\r\n    // FIXME use this over config\r\n    width: {\r\n      type: 'number',\r\n      minimum: 0,\r\n      default: 150\r\n    }\r\n  }\r\n});\r\n\r\nvar size = merge(duplicate(typicalField), {\r\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\r\n  properties: {\r\n    legend: legend,\r\n    sort: sort,\r\n    value: {\r\n      type: 'integer',\r\n      default: 30,\r\n      minimum: 0,\r\n      description: 'Size of marks.'\r\n    }\r\n  }\r\n});\r\n\r\nvar color = merge(duplicate(typicalField), {\r\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\r\n  properties: {\r\n    legend: legend,\r\n    sort: sort,\r\n    value: {\r\n      type: 'string',\r\n      role: 'color',\r\n      default: '#4682b4',\r\n      description: 'Color to be used for marks.'\r\n    },\r\n    opacity: {\r\n      type: 'number',\r\n      default: undefined,  // auto\r\n      minimum: 0,\r\n      maximum: 1\r\n    },\r\n    scale: {\r\n      type: 'object',\r\n      properties: {\r\n        range: {\r\n          type: ['string', 'array'],\r\n          default: undefined,\r\n          description:\r\n            'Color palette, if undefined vega-lite will use data property' +\r\n            'to pick one from c10palette, c20palette, or ordinalPalette.'\r\n            //FIXME\r\n        },\r\n        c10palette: {\r\n          type: 'string',\r\n          default: 'category10',\r\n          enum: [\r\n            // Tableau\r\n            'category10', 'category10k',\r\n            // Color Brewer\r\n            'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\r\n          ]\r\n        },\r\n        c20palette: {\r\n          type: 'string',\r\n          default: 'category20',\r\n          enum: ['category20', 'category20b', 'category20c']\r\n        },\r\n        ordinalPalette: {\r\n          type: 'string',\r\n          default: undefined,\r\n          description: 'Color palette to encode ordinal variables.',\r\n          enum: vlUtil.keys(colorbrewer)\r\n        },\r\n        quantitativeRange: {\r\n          type: 'array',\r\n          default: ['#AFC6A3', '#09622A'], // tableau greens\r\n          // default: ['#ccece6', '#00441b'], // BuGn.9 [2-8]\r\n          description: 'Color range to encode quantitative variables.',\r\n          minItems: 2,\r\n          maxItems: 2,\r\n          items: {\r\n            type: 'string',\r\n            role: 'color'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nvar shape = merge(duplicate(onlyOrdinalField), {\r\n  supportedMarktypes: {point: true, circle: true, square: true},\r\n  properties: {\r\n    legend: legend,\r\n    sort: sort,\r\n    value: {\r\n      type: 'string',\r\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\r\n      default: 'circle',\r\n      description: 'Mark to be used.'\r\n    },\r\n    filled: {\r\n      type: 'boolean',\r\n      default: false,\r\n      description: 'Whether the shape\\'s color should be used as fill color instead of stroke color.'\r\n    }\r\n  }\r\n});\r\n\r\nvar detail = merge(duplicate(onlyOrdinalField), {\r\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true},\r\n  properties: {\r\n    sort: sort\r\n  }\r\n});\r\n\r\n// we only put aggregated measure in pivot table\r\nvar text = merge(duplicate(typicalField), {\r\n  supportedMarktypes: {'text': true},\r\n  properties: {\r\n    sort: sort,\r\n\r\n    // TODO: consider if these properties should be under 'marks.'\r\n    align: {\r\n      type: 'string',\r\n      default: 'right'\r\n    },\r\n    baseline: {\r\n      type: 'string',\r\n      default: 'middle'\r\n    },\r\n    color: {\r\n      type: 'string',\r\n      role: 'color',\r\n      default: '#000000'\r\n    },\r\n    margin: {\r\n      type: 'integer',\r\n      default: 4,\r\n      minimum: 0\r\n    },\r\n    placeholder: {\r\n      type: 'string',\r\n      default: 'Abc'\r\n    },\r\n    font: {\r\n      type: 'object',\r\n      properties: {\r\n        weight: {\r\n          type: 'string',\r\n          enum: ['normal', 'bold'],\r\n          default: 'normal'\r\n        },\r\n        size: {\r\n          type: 'integer',\r\n          default: 10,\r\n          minimum: 0\r\n        },\r\n        family: {\r\n          type: 'string',\r\n          default: 'Helvetica Neue'\r\n        },\r\n        style: {\r\n          type: 'string',\r\n          default: 'normal',\r\n          enum: ['normal', 'italic']\r\n        }\r\n      }\r\n    },\r\n    format: {\r\n      type: 'string',\r\n      default: '',  // auto\r\n      description: 'The formatting pattern for text value.'+\r\n                   'If not defined, this will be determined automatically'\r\n    },\r\n  }\r\n});\r\n\r\nexport var encoding = {\r\n  type: 'object',\r\n  properties: {\r\n    x: x,\r\n    y: y,\r\n    row: row,\r\n    column: column,\r\n    size: size,\r\n    color: color,\r\n    shape: shape,\r\n    text: text,\r\n    detail: detail\r\n  }\r\n};\r\n","import {Axis} from './axis.schema';\r\nimport {bin, Bin} from './bin.schema';\r\nimport {Legend} from './legend.schema';\r\nimport {typicalScale, ordinalOnlyScale, Scale} from './scale.schema';\r\nimport {Sort} from './sort.schema';\r\n\r\nimport {AGGREGATE_OPS} from '../aggregate';\r\nimport {toMap, duplicate} from '../util';\r\nimport {merge} from './schemautil';\r\nimport {TIMEUNITS} from '../timeunit';\r\nimport {NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL} from '../type';\r\n\r\nexport interface FieldDef {\r\n  field?: string;\r\n  type?: string;\r\n  value?: any;\r\n\r\n  // function\r\n  aggregate?: string;\r\n  timeUnit?: string;\r\n  bin?: boolean | Bin;\r\n\r\n  sort?: Sort | string;\r\n\r\n  // override vega components\r\n  axis?: Axis;\r\n  legend?: Legend | boolean;\r\n  scale?: Scale;\r\n\r\n  // text\r\n  align?: string;\r\n  baseline?: string;\r\n  color?: string;\r\n  margin?: number;\r\n  placeholder?: string;\r\n  font?: any; // declare font\r\n  format?: string;\r\n\r\n  // TODO: maybe extend this in other app?\r\n  // unused metadata -- for other application\r\n  displayName?: string;\r\n}\r\n\r\nexport var fieldDef = {\r\n  type: 'object',\r\n  properties: {\r\n    field: {\r\n      type: 'string'\r\n    },\r\n    type: {\r\n      type: 'string',\r\n      enum: [NOMINAL, ORDINAL, QUANTITATIVE, TEMPORAL]\r\n    },\r\n    timeUnit: {\r\n      type: 'string',\r\n      enum: TIMEUNITS,\r\n      supportedTypes: toMap([TEMPORAL])\r\n    },\r\n    bin: bin,\r\n  }\r\n};\r\n\r\nexport var aggregate = {\r\n  type: 'string',\r\n  enum: AGGREGATE_OPS,\r\n  supportedEnums: {\r\n    quantitative: AGGREGATE_OPS,\r\n    ordinal: ['median','min','max'],\r\n    nominal: [],\r\n    temporal: ['mean', 'median', 'min', 'max'], // TODO: revise what should time support\r\n    '': ['count']\r\n  },\r\n  supportedTypes: toMap([QUANTITATIVE, NOMINAL, ORDINAL, TEMPORAL, ''])\r\n};\r\n\r\nexport var typicalField = merge(duplicate(fieldDef), {\r\n  properties: {\r\n    aggregate: aggregate,\r\n    scale: typicalScale\r\n  }\r\n});\r\n\r\nexport var onlyOrdinalField = merge(duplicate(fieldDef), {\r\n  properties: {\r\n    aggregate: {\r\n      type: 'string',\r\n      enum: ['count'],\r\n      supportedTypes: toMap([NOMINAL, ORDINAL])\r\n    },\r\n    scale: ordinalOnlyScale\r\n  }\r\n});\r\n","export interface Legend {\r\n  orient?: string;\r\n  title?: string;\r\n  format?: string;\r\n  values?: Array<any>;\r\n  properties?: any; //TODO declare VgLegendProperties\r\n}\r\n\r\nexport var legend = {\r\n  default: true,\r\n  description: 'Properties of a legend or boolean flag for determining whether to show it.',\r\n  oneOf: [{\r\n    type: 'object',\r\n    properties: {\r\n      orient: {\r\n        type: 'string',\r\n        default: undefined,\r\n        description: 'The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".'\r\n      },\r\n      title: {\r\n        type: 'string',\r\n        default: undefined,\r\n        description: 'A title for the legend. (Shows field name and its function by default.)'\r\n      },\r\n      format: {\r\n        type: 'string',\r\n        default: undefined,\r\n        description: 'An optional formatting pattern for legend labels. Vega uses D3\\'s format pattern.'\r\n      },\r\n      values: {\r\n        type: 'array',\r\n        default: undefined,\r\n        description: 'Explicitly set the visible legend values.'\r\n      },\r\n      properties: {\r\n        type: 'object',\r\n        default: undefined,\r\n        description: 'Optional mark property definitions for custom legend styling. '\r\n      }\r\n    }\r\n  }, {\r\n    type: 'boolean'\r\n  }]\r\n};\r\n","export var marktype = {\r\n  type: 'string',\r\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\r\n};\r\n","import {toMap, duplicate as clone} from '../util';\r\nimport {merge} from './schemautil';\r\nimport {QUANTITATIVE, TEMPORAL} from '../type';\r\n\r\nexport interface Scale {\r\n  type?: string;\r\n  domain?: any; // TODO: declare vgDataDomain\r\n  range?: any; // TODO: declare vgRangeDomain\r\n  round?: boolean;\r\n\r\n  // ordinal\r\n  bandWidth?: number;\r\n  outerPadding?: number;\r\n  padding?: number;\r\n  points?: boolean;\r\n\r\n  // typical\r\n  clamp?: boolean;\r\n  nice?: boolean|string;\r\n  exponent?: number;\r\n  zero?: boolean;\r\n\r\n  // Vega-Lite only\r\n  useRawDomain?: boolean;\r\n}\r\n\r\nvar scale = {\r\n  type: 'object',\r\n  // TODO: refer to Vega's scale schema\r\n  properties: {\r\n    /* Common Scale Properties */\r\n    type: {\r\n      type: 'string',\r\n      // TODO(kanitw) read vega's schema here, add description\r\n      enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\r\n      default: 'linear',\r\n      supportedTypes: toMap([QUANTITATIVE])\r\n    },\r\n    domain: {\r\n      default: undefined,\r\n      type: ['array', 'object'],\r\n      description: 'The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values. The domain may also be specified by a reference to a data source.'\r\n    },\r\n    range: {\r\n      default: undefined,\r\n      type: ['array', 'object'],\r\n      description: 'The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain. For ordinal scales only, the range can be defined using a DataRef: the range values are then drawn dynamically from a backing data set.'\r\n    },\r\n    round: {\r\n      default: undefined, // TODO: revise default\r\n      type: 'boolean',\r\n      description: 'If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.'\r\n    }\r\n  }\r\n};\r\n\r\n\r\nvar ordinalScaleMixin = {\r\n  properties: {\r\n    bandWidth: {\r\n      type: 'integer',\r\n      minimum: 0,\r\n      default: undefined\r\n    },\r\n    /* Ordinal Scale Properties */\r\n    outerPadding: {\r\n      type: 'number',\r\n      default: undefined\r\n      // TODO: add description once it is documented in Vega\r\n    },\r\n    padding: {\r\n      type: 'number',\r\n      default: undefined,\r\n      description: 'Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the range band width will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).'\r\n        },\r\n    points: {\r\n      type: 'boolean',\r\n      default: undefined,\r\n      description: 'If true, distributes the ordinal values over a quantitative range at uniformly spaced points. The spacing of the points can be adjusted using the padding property. If false, the ordinal scale will construct evenly-spaced bands, rather than points.'\r\n    }\r\n  }\r\n};\r\n\r\nvar typicalScaleMixin = {\r\n  properties: {\r\n    /* Quantitative and temporal Scale Properties */\r\n    clamp: {\r\n      type: 'boolean',\r\n      default: true,\r\n      description: 'If true, values that exceed the data domain are clamped to either the minimum or maximum range value'\r\n    },\r\n    nice: {\r\n      default: undefined,\r\n      oneOf: [\r\n        {\r\n          type: 'boolean',\r\n          description: 'If true, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96).'\r\n        },{\r\n          type: 'string',\r\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\r\n          description: 'If specified, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval; legal values are \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", or \"year\".'\r\n        }\r\n      ],\r\n      // FIXME this part might break polestar\r\n      supportedTypes: toMap([QUANTITATIVE, TEMPORAL]),\r\n      description: ''\r\n    },\r\n\r\n    /* Quantitative Scale Properties */\r\n    exponent: {\r\n      type: 'number',\r\n      default: undefined,\r\n      description: 'Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored.'\r\n    },\r\n    zero: {\r\n      type: 'boolean',\r\n      description: 'If true, ensures that a zero baseline value is included in the scale domain. This option is ignored for non-quantitative scales.',\r\n      default: undefined,\r\n      supportedTypes: toMap([QUANTITATIVE, TEMPORAL])\r\n    },\r\n\r\n    /* Vega-lite only Properties */\r\n    useRawDomain: {\r\n      type: 'boolean',\r\n      default: undefined,\r\n      description: 'Uses the source data range as scale domain instead of ' +\r\n                   'aggregated data for aggregate axis. ' +\r\n                   'This option does not work with sum or count aggregate' +\r\n                   'as they might have a substantially larger scale range.' +\r\n                   'By default, use value from config.useRawDomain.'\r\n    }\r\n  }\r\n};\r\n\r\nexport var ordinalOnlyScale = merge(clone(scale), ordinalScaleMixin);\r\nexport var typicalScale = merge(clone(scale), ordinalScaleMixin, typicalScaleMixin);\r\n","// Package of defining Vega-lite Specification's json schema\r\n\r\n/// <reference path=\"../../typings/vega.d.ts\"/>\r\n\r\nimport * as schemaUtil from './schemautil';\r\nimport {marktype} from './marktype.schema';\r\nimport {config} from './config.schema';\r\nimport {data, Data} from './data.schema';\r\nimport {encoding, Encoding} from './encoding.schema';\r\n\r\nexport interface Spec {\r\n  data?: Data;\r\n  marktype?: string;\r\n  encoding?: Encoding;\r\n  config?: any; // FIXME: declare\r\n}\r\n\r\n// TODO remove this\r\nexport {aggregate} from './fielddef.schema';\r\n\r\nexport var util = schemaUtil;\r\n\r\n/** @type Object Schema of a vega-lite specification */\r\nexport var schema = {\r\n  $schema: 'http://json-schema.org/draft-04/schema#',\r\n  description: 'Schema for Vega-lite specification',\r\n  type: 'object',\r\n  required: ['marktype', 'encoding'],\r\n  properties: {\r\n    data: data,\r\n    marktype: marktype,\r\n    encoding: encoding,\r\n    config: config\r\n  }\r\n};\r\n\r\n/** Instantiate a verbose vl spec from the schema */\r\nexport function instantiate() {\r\n  return schemaUtil.instantiate(schema);\r\n};\r\n","import * as util from '../util';\r\n\r\nfunction isEmpty(obj) {\r\n  return Object.keys(obj).length === 0;\r\n};\r\n\r\nexport function extend(instance, schema) {\r\n  return merge(instantiate(schema), instance);\r\n};\r\n\r\n// instantiate a schema\r\nexport function instantiate(schema) {\r\n  var val;\r\n  if (schema === undefined) {\r\n    return undefined;\r\n  } else if ('default' in schema) {\r\n    val = schema.default;\r\n    return util.isObject(val) ? util.duplicate(val) : val;\r\n  } else if (schema.type === 'object') {\r\n    var instance = {};\r\n    for (var name in schema.properties) {\r\n      val = instantiate(schema.properties[name]);\r\n      if (val !== undefined) {\r\n        instance[name] = val;\r\n      }\r\n    }\r\n    return instance;\r\n  } else if (schema.type === 'array') {\r\n    return undefined;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// remove all defaults from an instance\r\nexport function subtract(instance, defaults) {\r\n  var changes:any = {};\r\n  for (var prop in instance) {\r\n    var def = defaults[prop];\r\n    var ins = instance[prop];\r\n    // Note: does not properly subtract arrays\r\n    if (!defaults || def !== ins) {\r\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\r\n        var c = subtract(ins, def);\r\n        if (!isEmpty(c)) {\r\n          changes[prop] = c;\r\n        }\r\n      } else if (util.isArray(ins)) {\r\n        if (util.isArray(def)) {\r\n          // check each item in the array\r\n          if (ins.length === def.length) {\r\n            var equal = true;\r\n            for (var i = 0 ; i < ins.length; i++) {\r\n              if (ins[i] !== def[i]) {\r\n                equal = false;\r\n                break;\r\n              }\r\n            }\r\n            if (equal) {\r\n              continue; // continue with next property\r\n            }\r\n          }\r\n        }\r\n        changes[prop] = ins;\r\n      } else {\r\n        changes[prop] = ins;\r\n      }\r\n    }\r\n  }\r\n  return changes;\r\n};\r\n\r\nexport function merge(dest, ...src: any[]){\r\n  for (var i=0 ; i<src.length; i++) {\r\n    dest = merge_(dest, src[i]);\r\n  }\r\n  return dest;\r\n};\r\n\r\n// recursively merges src into dest\r\nfunction merge_(dest, src) {\r\n  if (typeof src !== 'object' || src === null) {\r\n    return dest;\r\n  }\r\n\r\n  for (var p in src) {\r\n    if (!src.hasOwnProperty(p)) {\r\n      continue;\r\n    }\r\n    if (src[p] === undefined) {\r\n      continue;\r\n    }\r\n    if (typeof src[p] !== 'object' || src[p] === null) {\r\n      dest[p] = src[p];\r\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\r\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\r\n    } else {\r\n      merge(dest[p], src[p]);\r\n    }\r\n  }\r\n  return dest;\r\n}\r\n","import {AGGREGATE_OPS} from '../aggregate';\r\nimport {ORDINAL, QUANTITATIVE} from '../type';\r\nimport {toMap} from '../util';\r\n\r\nexport interface Sort {\r\n  field: string;\r\n  op: string;\r\n  order?: string;\r\n}\r\n\r\nexport var sort = {\r\n  default: 'ascending',\r\n  supportedTypes: toMap([QUANTITATIVE, ORDINAL]),\r\n  oneOf: [\r\n    {\r\n      type: 'string',\r\n      enum: ['ascending', 'descending', 'unsorted']\r\n    },\r\n    { // sort by aggregation of another field\r\n      type: 'object',\r\n      required: ['field', 'op'],\r\n      properties: {\r\n        field: {\r\n          type: 'string',\r\n          description: 'The field name to aggregate over.'\r\n        },\r\n        op: {\r\n          type: 'string',\r\n          enum: AGGREGATE_OPS,\r\n          description: 'The field name to aggregate over.'\r\n        },\r\n        order: {\r\n          type: 'string',\r\n          enum: ['ascending', 'descending']\r\n        }\r\n      }\r\n    }\r\n  ]\r\n};\r\n","/** module for shorthand */\r\n\r\nimport {Encoding} from './schema/encoding.schema';\r\nimport {FieldDef} from './schema/fielddef.schema';\r\nimport {Spec} from './schema/schema';\r\n\r\nimport {AGGREGATE_OPS} from './aggregate';\r\nimport {TIMEUNITS} from './timeunit';\r\nimport {SHORT_TYPE, TYPE_FROM_SHORT_TYPE} from './type';\r\nimport * as util from './util';\r\nimport * as vlEncoding from './encoding';\r\n\r\nexport const DELIM = '|';\r\nexport const ASSIGN = '=';\r\nexport const TYPE = ',';\r\nexport const FUNC = '_';\r\n\r\n\r\nexport function shorten(spec: Spec): string {\r\n  return 'mark' + ASSIGN + spec.marktype +\r\n    DELIM + shortenEncoding(spec.encoding);\r\n}\r\n\r\nexport function parse(shorthand: string, data?, config?) {\r\n  let split = shorthand.split(DELIM),\r\n    marktype = split.shift().split(ASSIGN)[1].trim(),\r\n    encoding = parseEncoding(split.join(DELIM));\r\n\r\n  let spec:Spec = {\r\n    marktype: marktype,\r\n    encoding: encoding\r\n  };\r\n\r\n  if (data !== undefined) {\r\n    spec.data = data;\r\n  }\r\n  if (config !== undefined) {\r\n    spec.config = config;\r\n  }\r\n  return spec;\r\n}\r\n\r\nexport function shortenEncoding(encoding: Encoding): string {\r\n  return vlEncoding.map(encoding, function(fieldDef, channel) {\r\n    return channel + ASSIGN + shortenFieldDef(fieldDef);\r\n  }).join(DELIM);\r\n}\r\n\r\nexport function parseEncoding(encodingShorthand: string): Encoding {\r\n  return encodingShorthand.split(DELIM).reduce(function(m, e) {\r\n    var split = e.split(ASSIGN),\r\n        enctype = split[0].trim(),\r\n        fieldDefShorthand = split[1];\r\n\r\n    m[enctype] = parseFieldDef(fieldDefShorthand);\r\n    return m;\r\n  }, {});\r\n}\r\n\r\nexport function shortenFieldDef(fieldDef: FieldDef): string {\r\n  return (fieldDef.aggregate ? fieldDef.aggregate + FUNC : '') +\r\n    (fieldDef.timeUnit ? fieldDef.timeUnit + FUNC : '') +\r\n    (fieldDef.bin ? 'bin' + FUNC : '') +\r\n    (fieldDef.field || '') + TYPE + SHORT_TYPE[fieldDef.type];\r\n}\r\n\r\nexport function shortenFieldDefs(fieldDefs: FieldDef[], delim = DELIM): string {\r\n  return fieldDefs.map(shortenFieldDef).join(delim);\r\n}\r\n\r\nexport function parseFieldDef(fieldDefShorthand: string): FieldDef {\r\n  var split = fieldDefShorthand.split(TYPE), i;\r\n\r\n  var fieldDef: FieldDef = {\r\n    field: split[0].trim(),\r\n    type: TYPE_FROM_SHORT_TYPE[split[1].trim()]\r\n  };\r\n\r\n  // check aggregate type\r\n  for (i in AGGREGATE_OPS) {\r\n    var a = AGGREGATE_OPS[i];\r\n    if (fieldDef.field.indexOf(a + '_') === 0) {\r\n      fieldDef.field = fieldDef.field.substr(a.length + 1);\r\n      if (a === 'count' && fieldDef.field.length === 0) fieldDef.field = '*';\r\n      fieldDef.aggregate = a;\r\n      break;\r\n    }\r\n  }\r\n\r\n  for (i in TIMEUNITS) {\r\n    var tu = TIMEUNITS[i];\r\n    if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\r\n      fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\r\n      fieldDef.timeUnit = tu;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // check bin\r\n  if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\r\n    fieldDef.field = fieldDef.field.substr(4);\r\n    fieldDef.bin = true;\r\n  }\r\n\r\n  return fieldDef;\r\n}\r\n","/* Utilities for a Vega-Lite specificiation */\r\n\r\nimport * as vlEncoding from './encoding';\r\nimport * as util from './util';\r\nimport {Model} from './compiler/Model';\r\nimport {Spec} from './schema/schema';\r\nimport {COLOR, DETAIL} from './channel';\r\nimport {BAR, AREA} from './marktype';\r\n\r\n// TODO: add vl.spec.validate & move stuff from vl.validate to here\r\n\r\nexport function alwaysNoOcclusion(spec: Spec): boolean {\r\n  // FIXME raw OxQ with # of rows = # of O\r\n  return vlEncoding.isAggregate(spec.encoding);\r\n}\r\n\r\nexport function getCleanSpec(spec: Spec): Spec {\r\n  // TODO: move toSpec to here!\r\n  return new Model(spec).toSpec(true);\r\n}\r\n\r\nexport function isStack(spec: Spec): boolean {\r\n  return (spec.encoding[COLOR].field || spec.encoding[DETAIL].field) &&\r\n    (spec.marktype === BAR || spec.marktype === AREA) &&\r\n    (!spec.config || !spec.config.stack !== false) &&\r\n    vlEncoding.isAggregate(spec.encoding);\r\n}\r\n\r\n// TODO revise\r\nexport function transpose(spec: Spec): Spec {\r\n  var oldenc = spec.encoding,\r\n    encoding = util.duplicate(spec.encoding);\r\n  encoding.x = oldenc.y;\r\n  encoding.y = oldenc.x;\r\n  encoding.row = oldenc.column;\r\n  encoding.column = oldenc.row;\r\n  spec.encoding = encoding;\r\n  return spec;\r\n}\r\n","export const TIMEUNITS = [\r\n  'year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'\r\n];\r\n","/** Constants and utilities for data type */\r\n\r\nexport const QUANTITATIVE = 'quantitative';\r\nexport const ORDINAL = 'ordinal';\r\nexport const TEMPORAL = 'temporal';\r\nexport const NOMINAL = 'nominal';\r\n\r\n/**\r\n * Mapping from full type names to short type names.\r\n * @type {Object}\r\n */\r\nexport const SHORT_TYPE = {\r\n  quantitative: 'Q',\r\n  temporal: 'T',\r\n  nominal: 'N',\r\n  ordinal: 'O'\r\n};\r\n/**\r\n * Mapping from short type names to full type names.\r\n * @type {Object}\r\n */\r\nexport const TYPE_FROM_SHORT_TYPE = {\r\n  Q: QUANTITATIVE,\r\n  T: TEMPORAL,\r\n  O: ORDINAL,\r\n  N: NOMINAL\r\n};\r\n\r\n/**\r\n * Get full, lowercase type name for a given type.\r\n * @param  {String} type\r\n * @return {String} Full type name.\r\n */\r\nexport function getFullName(type: string): string {\r\n  return TYPE_FROM_SHORT_TYPE[type.toUpperCase()] || // short type is uppercase by default\r\n         type.toLowerCase();\r\n}\r\n","/// <reference path=\"../typings/datalib.d.ts\"/>\r\n\r\nexport * from 'datalib/src/util';\r\nexport * from 'datalib/src/generate';\r\nexport * from 'datalib/src/stats';\r\n\r\n// https://github.com/Microsoft/TypeScript/issues/3612\r\nimport dlBin = require('datalib/src/bins/bins');\r\nexport var bin = dlBin;\r\n\r\n/*\r\n * Deal with floating point instabiility in javasscript to avoid weird .000001 output\r\n */\r\nexport function roundFloat(x: number, digit:number = 4) {\r\n  return +x.toFixed(digit);\r\n}\r\n\r\nexport function forEach(obj, f, thisArg) {\r\n  if (obj.forEach) {\r\n    obj.forEach.call(thisArg, f);\r\n  } else {\r\n    for (var k in obj) {\r\n      f.call(thisArg, obj[k], k , obj);\r\n    }\r\n  }\r\n}\r\n\r\nexport function reduce(obj, f, init, thisArg?) {\r\n  if (obj.reduce) {\r\n    return obj.reduce.call(thisArg, f, init);\r\n  } else {\r\n    for (var k in obj) {\r\n      init = f.call(thisArg, init, obj[k], k, obj);\r\n    }\r\n    return init;\r\n  }\r\n}\r\n\r\nexport function map(obj, f, thisArg?) {\r\n  if (obj.map) {\r\n    return obj.map.call(thisArg, f);\r\n  } else {\r\n    var output = [];\r\n    for (var k in obj) {\r\n      output.push( f.call(thisArg, obj[k], k, obj));\r\n    }\r\n    return output;\r\n  }\r\n}\r\n\r\nexport function any(arr: Array<any>, f: (d, k?, i?) => boolean) {\r\n  var i = 0, k;\r\n  for (k in arr) {\r\n    if (f(arr[k], k, i++)) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function all(arr: Array<any>, f: (d, k?, i?) => boolean) {\r\n  var i = 0, k;\r\n  for (k in arr) {\r\n    if (!f(arr[k], k, i++)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function getbins(stats, maxbins) {\r\n  return dlBin({\r\n    min: stats.min,\r\n    max: stats.max,\r\n    maxbins: maxbins\r\n  });\r\n}\r\n\r\n//FIXME remove this\r\n/**\r\n * x[p[0]]...[p[n]] = val\r\n * @param noaugment determine whether new object should be added f\r\n * or non-existing properties along the path\r\n */\r\nexport function setter(x, p, val, noaugment = false) {\r\n  for (var i=0; i<p.length-1; ++i) {\r\n    if (!noaugment && !(p[i] in x)){\r\n      x = x[p[i]] = {};\r\n    } else {\r\n      x = x[p[i]];\r\n    }\r\n  }\r\n  x[p[i]] = val;\r\n}\r\n\r\n\r\nexport function error(message: any): void {\r\n  console.error('[VL Error]', message);\r\n}\r\n","import {Spec} from './schema/schema';\r\n\r\n// TODO: move to vl.spec.validator?\r\n\r\nimport {toMap} from './util';\r\nimport {schema} from './schema/schema';\r\n\r\ninterface RequiredChannelMap {\r\n  [marktype:string]: Array<string>;\r\n}\r\n\r\n/**\r\n * Required Encoding Channels for each mark type\r\n * @type {Object}\r\n */\r\nexport const DEFAULT_REQUIRED_CHANNEL_MAP: RequiredChannelMap = {\r\n  text: ['text'],\r\n  line: ['x', 'y'],\r\n  area: ['x', 'y']\r\n};\r\n\r\ninterface SupportedChannelMap {\r\n  [marktype:string]: {\r\n    [channel:string]: number\r\n  };\r\n}\r\n\r\n/**\r\n * Supported Encoding Channel for each mark type\r\n */\r\nexport const DEFAULT_SUPPORTED_CHANNEL_TYPE: SupportedChannelMap = {\r\n  bar: toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\r\n  line: toMap(['row', 'column', 'x', 'y', 'color', 'detail']), // TODO: add size when Vega supports\r\n  area: toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\r\n  tick: toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\r\n  circle: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\r\n  square: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\r\n  point: toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\r\n  text: toMap(['row', 'column', 'size', 'color', 'text']) //TODO(#724) revise\r\n};\r\n\r\n// TODO: consider if we should add validate method and\r\n// requires ZSchema in the main vega-lite repo\r\n\r\n/**\r\n  * Further check if encoding mapping of a spec is invalid and\r\n  * return error if it is invalid.\r\n  *\r\n  * This checks if\r\n  * (1) all the required encoding channels for the mark type are specified\r\n  * (2) all the specified encoding channels are supported by the mark type\r\n  * @param  {[type]} spec [description]\r\n  * @param  {RequiredChannelMap  = DefaultRequiredChannelMap}  requiredChannelMap\r\n  * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap\r\n  * @return {String} Return one reason why the encoding is invalid,\r\n  *                  or null if the encoding is valid.\r\n  */\r\nexport function getEncodingMappingError(spec: Spec,\r\n      requiredChannelMap: RequiredChannelMap = DEFAULT_REQUIRED_CHANNEL_MAP,\r\n      supportedChannelMap: SupportedChannelMap = DEFAULT_SUPPORTED_CHANNEL_TYPE\r\n    ) {\r\n  let marktype = spec.marktype;\r\n  let encoding = spec.encoding;\r\n  let requiredChannels = requiredChannelMap[marktype];\r\n  let supportedChannels = supportedChannelMap[marktype];\r\n\r\n  for (let i in requiredChannels) { // all required channels are in encoding`\r\n    if (!(requiredChannels[i] in encoding)) {\r\n      return 'Missing encoding channel \\\"' + requiredChannels[i] +\r\n              '\\\" for marktype \\\"' + marktype + '\\\"';\r\n    }\r\n  }\r\n\r\n  for (let channel in encoding) { // all channels in encoding are supported\r\n    if (!supportedChannels[channel]) {\r\n      return 'Encoding channel \\\"' + channel +\r\n             '\\\" is not supported by mark type \\\"' + marktype + '\\\"';\r\n    }\r\n  }\r\n\r\n  if (marktype === 'bar' && !encoding.x && !encoding.y) {\r\n    return 'Missing both x and y for bar';\r\n  }\r\n\r\n  return null;\r\n}\r\n","import * as vlBin from './bin';\r\nimport * as vlChannel from './channel';\r\nimport * as vlData from './data';\r\nimport * as vlEncoding from './encoding';\r\nimport * as vlFieldDef from './fielddef';\r\nimport * as vlCompiler from './compiler/compiler';\r\nimport * as vlSchema from './schema/schema';\r\nimport * as vlShorthand from './shorthand';\r\nimport * as vlSpec from './spec';\r\nimport * as vlTimeUnit from './timeunit';\r\nimport * as vlType from './type';\r\nimport * as vlValidate from './validate';\r\n\r\n// TODO: remove this\r\nimport {format as d3Format} from 'd3-format';\r\n\r\nexport * from './util';\r\n\r\nexport var bin = vlBin;\r\nexport var channel = vlChannel;\r\nexport var compiler = vlCompiler;\r\nexport var compile = vlCompiler.compile;\r\nexport var data = vlData;\r\n// TODO(#727) rename to encoding\r\nexport var encoding = vlEncoding;\r\nexport var fieldDef = vlFieldDef;\r\nexport var schema = vlSchema;\r\nexport var shorthand = vlShorthand;\r\nexport var spec = vlSpec;\r\nexport var timeUnit = vlTimeUnit;\r\nexport var type = vlType;\r\nexport var format = d3Format;\r\nexport var validate = vlValidate;\r\n\r\nexport const version = '__VERSION__';\r\n"],"sourceRoot":"/source/"}